%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set of male ballet.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Владелец
%%CreationDate: 2/22/2015
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of male ballet dancers</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of black silhouettes. Male ballet dancers</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>dancer</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>sport</rdf:li>
               <rdf:li>ballet</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>pose</rdf:li>
               <rdf:li>shadow</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>dance</rdf:li>
               <rdf:li>black</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>boy</rdf:li>
               <rdf:li>movement</rdf:li>
               <rdf:li>silhouette</rdf:li>
               <rdf:li>party</rdf:li>
               <rdf:li>action</rdf:li>
               <rdf:li>male</rdf:li>
               <rdf:li>elegance</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>jump</rdf:li>
               <rdf:li>choreography</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>active</rdf:li>
               <rdf:li>fitness</rdf:li>
               <rdf:li>sport</rdf:li>
               <rdf:li>lifestyle</rdf:li>
               <rdf:li>moving</rdf:li>
               <rdf:li>beauty</rdf:li>
               <rdf:li>gracefull</rdf:li>
               <rdf:li>fashionable</rdf:li>
               <rdf:li>stylish</rdf:li>
               <rdf:li>silhouette</rdf:li>
               <rdf:li>model</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>human</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>life</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-02-22T20:36:08+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-02-22T20:36:08+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-02-22T20:36:08+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Almm6aABtnSSk4bIrSzAA&#xA;2yslUzihCjpkbSrAYFAXgYGYC4DAyAXAYsgG6YppsKTgtKoseAlK9YsiSqoIsjarxFgtVwiwWrfp&#xA;Y2rfpYLVv0sbVr0sNqtMWNqtMWG1WGLDarGiyVqptHkgVWFSMNoW0wopojFBC0jFiQtIwsSFpGFg&#xA;QoyRBhiqXXdmCDtkwUMf1HTgQdsmCqe2doABtkCVTSKIKMgqV2Hm3SL/AMy3/l6zLz3mlxRyX8yB&#xA;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&#xA;FCX3V2ADvkgEJDqGoAA75YAr/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9553828DA7BAE411924DFBC20359F96C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9553828DA7BAE411924DFBC20359F96C</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:7ae7a09a-7134-4abb-be7e-50da1dbfc06e</stRef:instanceID>
            <stRef:documentID>xmp.did:777C4E35729EE4118BE9A5BCAFB17C93</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:86639601446BE311B0019CABAE794AAB</stEvt:instanceID>
                  <stEvt:when>2013-12-23T02:02:37+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:777C4E35729EE4118BE9A5BCAFB17C93</stEvt:instanceID>
                  <stEvt:when>2015-01-17T23:00:37+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:480C14021DBAE411A019FF0DF665CB58</stEvt:instanceID>
                  <stEvt:when>2015-02-22T03:57:27+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B255E49B1FBAE411A019FF0DF665CB58</stEvt:instanceID>
                  <stEvt:when>2015-02-22T04:26:45+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9553828DA7BAE411924DFBC20359F96C</stEvt:instanceID>
                  <stEvt:when>2015-02-22T20:36:08+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
1e3 1e3 mo
0 1e3 li
0 0 li
1e3 0 li
1e3 1e3 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[729.005 0 0 729.005 500 500 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.815686 .815686 1 ]
/N 3.98994 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.815686 .815686 1 ]
/C1 [.741176 .811765 .988235 ]
/N 1.39754 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .811765 .988235 ]
/C1 [.231373 .32549 .643137 ]
/N 1.95615 
>>
]
/Bounds [.0158103 .735178 .861661 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[729.005 0 0 729.005 500 500 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2oqrVc]nrVc]nrVc]nr;?Kjr;?Kjr;6Bgqtp9fqYL'bqYL$`q>'g\q"XXYp\4FUp@e1P
p%7nKo^h\Fo()>@nF5r9n*]W2mHj3*lg!d"l0.?ok2tddjQ#7ZiS`VNhVHuBgY1?5f@JO'eC2jnd*L%a
cd'h\c-4DTbK@uLaiMNC`l5p8_ns:,^q[Xu]tD"j]=PP_[^EHHY,nV"US+-EP`UiZK78)eDJ3Ka<_l7Q
~>
<~s8W-!s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2oqrVc]nrVc]nrVc]nr;?Kjr;?Kjr;6Bgqtp9fqYL'bqYL$`q>'g\q"XXYp\4FUp@e1P
p%7nKo^h\Fo()>@nF5r9n*]W2mHj3*lg!d"l0.?ok2tddjQ#7ZiS`VNhVHuBgY1?5f@JO'eC2jnd*L%a
cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd0q`cd'h]c-4ARaiDB<_8!Xn[^33>W2-)VQ]mGdK78&cCh@'X
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8N#s
rr2orrr2orrr2oqrVc]nrVc]nrVZTkr;?Kjr;6Bgqtg-`p\+:Oo'l)6lKIBji835@eBuRa`koI$[]us5
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
316.602 383.097 mo
316.368 378.036 313.586 377.159 310.571 371.585 cv
307.556 366.011 304.997 361.534 303.719 358.427 cv
300.887 354.863 299.333 354.681 295.679 348.468 cv
292.023 342.255 289.739 333.3 287.82 328.548 cv
285.902 323.798 284.257 320.965 283.16 320.965 cv
282.064 320.965 280.603 321.241 279.323 320.281 cv
278.044 319.322 276.125 318.544 274.115 318.727 cv
272.104 318.91 270.276 318.865 271.694 317.219 cv
272.489 316.295 273.703 316.482 274.793 316.669 cv
275.642 316.814 276.416 316.96 276.857 316.581 cv
277.861 315.711 275.349 314.387 274.161 313.975 cv
272.971 313.564 270.916 312.925 268.815 313.016 cv
266.713 313.108 265.983 312.743 266.256 311.965 cv
264.612 311.326 263.79 310.047 264.612 309.956 cv
264.949 309.918 265.787 310.003 266.724 310.089 cv
268.07 310.212 269.621 310.335 270.186 310.092 cv
268.54 308.403 266.485 307.991 267.171 306.438 cv
267.352 306.118 269.774 307.443 272.012 308.448 cv
274.252 309.454 274.754 309.454 277.542 311.509 cv
280.328 313.564 282.749 314.935 285.079 316.078 cv
287.409 317.219 286.861 317.31 289.374 321.194 cv
291.886 325.077 300.704 335.905 304.198 341.387 cv
307.694 346.869 307.831 347.622 309.2 351.666 cv
312.147 355.092 316.876 360.644 319.616 364.754 cv
321.028 366.493 321.107 366.423 322.069 366.353 cv
322.32 366.335 322.631 366.317 323.043 366.331 cv
325.03 366.399 327.224 366.673 328.663 369.21 cv
330.101 371.745 330.924 368.592 331.679 366.948 cv
332.431 365.303 333.46 363.589 333.322 361.945 cv
331.952 359.409 333.733 358.381 332.226 356.462 cv
330.513 355.709 330.649 350.98 331.747 350.776 cv
330.171 349.13 331.884 347.417 331.473 346.183 cv
331.062 344.95 332.295 341.524 335.241 339.4 cv
338.188 337.275 340.519 337.891 340.929 337.413 cv
341.102 337.209 341.533 337.374 342.045 337.538 cv
342.745 337.763 343.596 337.988 344.149 337.275 cv
345.109 336.042 346.684 338.302 348.262 339.125 cv
349.838 339.949 351.825 342.484 350.934 342.757 cv
351.825 343.717 352.374 345.087 352.167 346.732 cv
351.962 348.377 352.374 351.324 351.071 351.94 cv
352.374 352.077 350.728 356.532 349.427 357.216 cv
348.262 359.615 349.838 361.671 345.931 364.549 cv
345.519 366.604 345.794 370.305 346.822 370.785 cv
347.851 371.264 349.152 367.702 352.511 367.359 cv
353.811 366.878 355.595 364.343 358.13 361.055 cv
360.665 357.765 367.311 350.569 367.449 348.445 cv
367.586 346.32 369.437 340.908 373.823 333.369 cv
378.208 325.83 384.375 316.033 386.157 312.263 cv
387.938 308.494 390.475 308.494 393.626 306.918 cv
396.778 305.342 396.847 304.862 399.931 304.656 cv
403.015 304.451 405.755 304.451 407.469 304.314 cv
409.182 304.176 408.84 305.546 408.223 305.683 cv
407.606 305.821 403.427 305.821 403.084 306.233 cv
405.139 306.781 406.167 307.124 407.263 307.33 cv
408.36 307.534 407.194 309.111 405.208 308.63 cv
403.084 308.289 401.575 308.152 400.891 308.083 cv
402.534 308.563 402.852 308.754 403.563 309.042 cv
405.755 309.933 404.111 310.824 401.919 309.795 cv
399.959 308.878 397.053 308.356 395.956 309.659 cv
396.436 310.618 396.368 311.783 398.492 311.646 cv
400.616 311.509 401.028 311.373 402.261 311.852 cv
403.495 312.332 404.591 314.182 400.548 313.838 cv
396.505 313.496 395.065 313.564 393.489 314.25 cv
391.914 314.935 390.543 315.278 389.651 314.935 cv
388.007 318.362 385.13 327.751 384.169 331.724 cv
383.21 335.699 381.657 341.706 380.105 346.001 cv
378.552 350.295 375.443 351.757 371.697 358.061 cv
367.952 364.366 362.469 374.142 359.547 377.157 cv
356.622 380.171 356.987 383.735 355.891 387.481 cv
354.795 391.228 352.602 393.786 350.775 399.451 cv
348.946 405.116 346.753 413.43 346.571 416.079 cv
346.389 418.729 347.12 421.105 347.667 423.297 cv
348.216 425.491 347.667 426.861 347.485 428.414 cv
347.302 429.967 349.13 433.074 349.679 440.657 cv
350.227 448.242 348.946 457.013 347.12 464.048 cv
345.292 471.083 343.829 477.298 343.557 477.754 cv
343.921 484.149 345.2 494.382 345.475 499.591 cv
345.749 504.8 347.302 507.267 348.489 511.651 cv
349.679 516.038 352.967 517.868 354.976 521.157 cv
356.987 524.446 355.891 531.3 356.257 537.329 cv
356.622 543.36 357.993 559.351 360.916 560.355 cv
363.84 561.36 367.586 562.913 364.754 567.665 cv
363.657 570.954 365.028 577.897 366.308 578.538 cv
367.586 579.177 366.399 579.726 368.044 579.817 cv
369.688 579.907 370.875 582.107 368.957 582.47 cv
367.038 582.831 366.308 584.11 363.84 583.015 cv
362.977 582.631 362.428 582.649 361.964 582.668 cv
361.102 582.702 360.538 582.737 358.815 580.183 cv
356.165 576.253 352.511 568.304 351.323 559.624 cv
350.135 550.942 348.216 544.73 345.2 536.233 cv
342.186 527.735 340.632 517.411 338.257 514.487 cv
334.785 510.647 335.515 506.079 334.602 502.972 cv
334.054 508.364 332.134 510.19 331.679 514.851 cv
331.222 519.511 330.033 531.847 326.379 538.79 cv
322.724 545.733 319.982 558.983 318.247 566.657 cv
316.511 574.333 314.591 577.073 311.485 580.181 cv
308.379 583.286 309.659 584.565 306.186 584.841 cv
302.714 585.114 299.333 584.841 301.708 583.104 cv
301.982 581.733 301.708 581.278 302.806 581.095 cv
303.719 579.45 305.18 578.901 305.454 575.431 cv
305.727 571.958 305.819 570.13 304.905 568.028 cv
303.993 565.927 304.358 562.179 307.831 561.724 cv
311.303 561.267 312.672 559.257 313.13 554.597 cv
313.586 549.936 314.683 542.628 314.683 534.587 cv
314.683 526.546 316.785 522.8 319.252 519.054 cv
321.72 515.308 321.079 510.19 321.261 505.987 cv
321.444 501.784 326.744 483.511 326.744 480.586 cv
322.906 472.089 317.881 461.215 317.881 447.054 cv
318.247 437.826 319.8 432.675 320.074 430.59 cv
320.349 428.506 318.886 426.587 319.892 423.115 cv
320.895 419.643 322.45 414.435 321.17 407.217 cv
319.892 399.999 316.876 389.038 316.602 383.097 cv
0 0 0 rgb
f
356.977 107.183 mo
354.874 107.183 351.543 111.529 347.631 114.427 cv
343.721 117.324 339.011 120.004 338.142 121.743 cv
337.273 123.481 334.448 127.32 333.435 127.755 cv
332.421 128.189 323.799 131.666 317.932 134.491 cv
312.066 137.316 306.27 139.127 306.054 140.721 cv
305.835 142.314 306.125 145.212 303.519 147.313 cv
300.911 149.414 298.158 151.514 297.361 153.252 cv
296.564 154.99 295.188 155.715 294.898 153.397 cv
294.898 151.876 296.419 150.717 296.636 149.703 cv
294.753 150.717 291.493 152.021 290.552 152.89 cv
289.61 153.759 287.002 155.643 285.336 156.149 cv
283.671 156.657 282.874 155.063 284.105 154.556 cv
284.178 153.397 284.178 153.832 284.83 153.035 cv
284.612 152.528 286.641 151.586 288.234 150.354 cv
289.828 149.124 293.522 147.313 295.623 144.27 cv
297.723 141.228 299.751 140.504 300.837 137.896 cv
301.924 135.288 301.924 137.099 306.054 134.129 cv
310.182 131.159 316.412 126.523 320.831 122.612 cv
325.249 118.7 329.088 118.121 330.826 116.817 cv
332.565 115.513 335.607 111.312 338.866 107.038 cv
342.126 102.765 345.458 100.954 346.183 98.563 cv
346.907 96.1724 349.153 91.4644 353.281 90.5947 cv
357.41 89.7256 358.136 89.8701 360.381 87.4077 cv
362.627 84.9448 364.075 83.0615 363.931 82.5547 cv
361.395 83.6411 359.947 83.4961 359.149 81.9028 cv
358.352 80.3086 357.217 77.0737 356.542 76.0596 cv
355.866 75.0454 354.995 74.1763 355.189 72.9209 cv
355.382 71.665 354.465 70.313 353.838 69.8301 cv
353.209 69.3472 353.16 69.0576 353.16 67.9951 cv
353.16 66.9326 352.099 64.4214 353.065 62.4902 cv
351.47 60.7026 350.216 59.5439 352.388 58.3853 cv
354.563 57.2261 355.527 57.5156 357.459 55.3428 cv
359.391 53.1694 365.958 51.1416 369.436 52.252 cv
372.912 53.3623 376.631 56.2119 376.292 61.5239 cv
375.955 66.8359 373.83 69.3467 375.133 72.2441 cv
376.437 75.1416 376.631 76.9761 379.335 77.1699 cv
382.039 77.3633 385.999 77.7979 387.399 75.6729 cv
388.8 73.5483 393.292 70.0713 398.459 72.2925 cv
399.811 72.4858 402.949 71.9541 408.454 70.5547 cv
413.959 69.1538 418.741 67.1743 421.976 65.9185 cv
425.212 64.6631 427.626 63.0693 430.378 66.6431 cv
433.131 70.2163 440.351 78.1357 445.058 83.1343 cv
449.768 88.1318 450.708 90.0879 452.665 94.2163 cv
454.621 98.3452 454.331 99.4321 459.184 102.837 cv
459.981 103.199 460.197 103.706 460.632 105.372 cv
461.066 107.038 461.429 108.052 461.864 109.211 cv
462.298 110.37 460.921 110.515 460.054 109.429 cv
459.184 108.342 459.618 106.531 457.88 106.169 cv
458.531 108.704 458.096 107.618 457.88 110.877 cv
457.662 114.137 456.793 115.44 456.069 113.992 cv
455.345 112.543 455.634 112.181 455.634 112.181 cv
454.692 112.398 454.257 110.66 454.113 108.776 cv
453.968 106.893 452.738 104.575 450.637 103.199 cv
450.203 104.865 450.927 107.545 449.768 109.066 cv
448.607 110.587 447.81 110.732 447.957 107.762 cv
448.102 104.792 447.739 104.068 446.508 102.185 cv
445.276 100.301 445.493 99.0698 445.711 96.4629 cv
445.927 93.8545 445.566 91.7539 443.755 90.7397 cv
441.944 89.7256 431.368 84.0757 428.398 80.7437 cv
425.428 77.4116 423.835 75.0938 418.982 77.3394 cv
414.128 79.5845 407.03 85.3071 403.625 86.7559 cv
400.221 88.2046 399.932 90.5225 400.511 95.0859 cv
401.09 99.6499 400.872 103.923 400.872 110.515 cv
400.872 117.107 398.989 121.019 400.872 124.712 cv
403.842 130.435 401.164 133.477 405.002 134.781 cv
408.841 136.085 416.59 139.055 420.502 142.024 cv
424.415 144.995 430.281 149.414 435.498 154.484 cv
440.712 159.554 445.421 161.292 444.334 166.653 cv
443.247 172.014 440.061 174.694 435.569 174.549 cv
431.078 174.404 428.688 176.287 421.444 178.388 cv
414.201 180.488 410.289 179.764 404.205 182.661 cv
398.12 185.559 393.992 189.326 385.154 190.847 cv
376.316 192.368 372.042 193.31 370.233 192.223 cv
368.42 191.136 369.652 189.905 370.305 190.123 cv
370.884 188.674 371.608 188.963 372.332 189.326 cv
372.477 188.167 372.912 187.949 373.854 188.021 cv
374.578 186.356 376.244 185.993 378.851 186.065 cv
381.46 186.139 383.198 184.473 384.211 181.502 cv
385.225 178.532 388.703 173.39 392.687 176.215 cv
396.672 179.04 399.495 175.636 403.552 173.752 cv
407.609 171.869 410.869 169.261 413.767 167.233 cv
416.664 165.205 419.054 163.828 421.226 163.828 cv
416.879 161.945 411.448 161.076 407.609 160.423 cv
403.77 159.771 396.236 154.629 394.426 153.252 cv
392.615 151.876 390.08 152.818 388.34 154.629 cv
386.602 156.439 380.831 161.148 376.968 165.977 cv
373.106 170.806 364.702 176.504 359.778 179.789 cv
354.852 183.072 353.5 186.935 350.988 187.805 cv
348.476 188.674 349.829 192.538 346.354 197.463 cv
342.876 202.388 337.95 204.031 332.734 206.735 cv
327.519 209.438 314.48 222.863 315.253 224.505 cv
316.026 226.148 318.73 231.266 312.645 232.812 cv
306.56 234.357 304.243 234.839 303.084 238.027 cv
301.924 241.213 300.862 241.213 299.704 241.407 cv
299.317 243.048 298.544 242.856 297.965 242.759 cv
297.771 244.499 296.999 244.401 296.226 244.112 cv
294.874 246.043 293.619 246.139 293.135 243.822 cv
292.653 241.503 293.715 239.089 296.516 232.328 cv
299.317 225.568 303.084 220.353 310.906 213.495 cv
318.73 206.637 321.434 202.388 324.912 198.332 cv
328.388 194.275 337.66 187.032 338.819 183.652 cv
339.978 180.271 341.233 177.567 345.096 174.863 cv
348.96 172.158 352.728 160.666 357.459 154.967 cv
362.19 149.269 372.14 142.122 373.685 138.355 cv
375.23 134.588 376.292 128.311 374.264 124.642 cv
372.237 120.971 366.731 115.369 364.22 111.796 cv
361.708 108.223 358.618 107.496 356.977 107.183 cv
cp
f
744.559 737.512 mo
743.561 732.805 740.707 730.309 740.279 726.814 cv
739.852 723.32 740.422 718.186 738.426 712.623 cv
736.428 707.06 735.217 701.141 733.719 697.789 cv
732.221 694.437 733.933 688.59 734.219 684.953 cv
734.504 681.316 735.217 672.544 734.146 670.19 cv
733.076 667.838 733.363 666.197 732.435 664.842 cv
731.508 663.487 731.65 661.704 730.082 659.422 cv
728.514 657.141 730.01 656.998 731.365 658.139 cv
732.721 659.279 732.15 660.563 733.006 660.92 cv
733.861 661.277 733.506 659.637 733.148 657.639 cv
732.791 655.643 733.219 654.93 733.576 652.719 cv
733.933 650.508 734.289 650.151 734.717 648.582 cv
735.145 647.014 736.785 646.229 736.357 648.725 cv
735.93 651.221 735.572 651.721 735.715 653.289 cv
735.857 654.858 736.643 654.93 736.857 652.647 cv
737.07 650.365 737.785 649.652 738.568 647.799 cv
739.352 645.943 740.494 646.016 740.137 648.084 cv
739.781 650.151 739.066 651.578 738.926 652.576 cv
738.781 653.574 738.426 655.215 738.926 655.429 cv
739.424 655.643 739.639 655.144 740.279 653.218 cv
740.922 651.293 741.064 651.078 741.635 650.151 cv
742.205 649.225 743.773 649.367 742.705 651.792 cv
741.635 654.217 740.494 657.069 740.994 657.781 cv
741.492 658.495 742.063 657.854 742.848 656.428 cv
743.631 655.001 744.273 653.717 744.844 654.287 cv
745.414 654.858 744.773 656.285 743.988 657.211 cv
743.203 658.139 742.277 660.207 742.135 661.633 cv
741.992 663.059 742.348 664.914 741.564 667.195 cv
740.779 669.478 739.924 670.547 740.279 673.757 cv
740.637 676.966 741.35 686.022 742.848 690.872 cv
744.346 695.721 743.631 699.43 744.631 702.282 cv
745.629 705.135 747.767 712.837 748.125 715.119 cv
748.48 717.4 750.977 719.326 752.76 720.254 cv
754.543 721.181 754.115 719.041 753.688 717.258 cv
753.258 715.475 752.189 713.336 750.977 712.551 cv
749.408 711.91 746.982 707.346 747.697 702.14 cv
748.41 696.934 750.049 695.508 753.402 693.51 cv
756.754 691.514 759.178 692.155 760.248 690.943 cv
761.318 689.731 763.813 692.654 763.813 694.081 cv
765.025 694.723 766.451 695.793 766.879 699.073 cv
767.308 702.353 767.879 702.853 767.664 704.636 cv
767.451 706.418 769.041 708.486 767.711 711.339 cv
766.381 714.191 764.812 714.691 765.525 717.188 cv
766.238 719.683 767.094 722.535 768.521 719.611 cv
769.947 716.688 771.73 715.475 773.797 713.265 cv
775.865 711.054 775.723 708.986 777.721 705.064 cv
779.717 701.141 780.144 697.646 779.574 694.152 cv
779.004 690.658 781 683.313 780.572 678.605 cv
780.144 673.899 780.072 666.625 778.076 665.627 cv
776.08 664.629 774.939 665.199 773.441 663.416 cv
771.943 661.633 771.301 660.421 769.377 659.849 cv
767.451 659.279 767.451 658.352 769.232 657.996 cv
771.016 657.639 772.086 658.638 773.369 659.564 cv
774.654 660.492 774.154 659.352 773.797 657.711 cv
773.441 656.07 772.941 654.217 771.658 653.289 cv
770.375 652.362 768.521 651.008 769.305 650.009 cv
770.088 649.01 771.231 650.65 772.443 651.15 cv
772.973 651.368 773.517 651.3 774.021 651.232 cv
774.669 651.144 775.251 651.056 775.652 651.578 cv
776.365 652.505 776.65 652.505 777.506 652.291 cv
778.361 652.077 778.504 652.576 778.789 653.004 cv
779.074 653.432 779.289 653.432 780.002 653.289 cv
780.715 653.146 781.357 654.359 781.57 655.857 cv
781.785 657.354 782.713 659.992 783.781 662.06 cv
784.852 664.129 783.996 664.129 785.066 667.695 cv
786.135 671.26 788.846 685.88 789.771 690.088 cv
790.699 694.295 790.557 694.938 788.988 700.357 cv
787.418 705.776 786.277 711.41 784.494 714.834 cv
782.713 718.256 778.291 725.389 777.506 728.312 cv
776.721 731.235 777.221 733.732 778.076 736.727 cv
778.932 739.723 777.934 742.146 778.006 746.283 cv
778.076 750.419 778.861 755.982 776.936 759.619 cv
775.01 763.256 772.514 765.538 771.301 774.381 cv
770.088 783.225 771.658 783.367 769.377 788.501 cv
767.094 793.636 766.451 798.557 766.879 806.33 cv
767.308 814.103 766.762 821.447 764.289 831.525 cv
761.816 841.606 760.248 848.548 760.818 851.543 cv
761.389 854.537 762.244 858.103 760.533 860.386 cv
758.822 862.668 759.535 867.66 760.391 875.219 cv
761.246 882.778 760.961 903.744 763.67 912.73 cv
766.381 921.716 766.381 926.565 765.953 933.697 cv
765.525 940.828 763.813 940.258 763.242 943.681 cv
762.804 946.308 760.939 946.163 759.257 946.017 cv
758.748 945.974 758.255 945.93 757.824 945.963 cv
755.969 946.106 757.824 944.537 756.682 943.823 cv
755.541 943.11 758.822 942.539 757.537 940.828 cv
756.254 939.117 755.826 936.549 755.969 933.555 cv
756.111 930.559 755.113 927.991 752.117 926.28 cv
749.123 924.568 749.551 921.573 752.262 919.148 cv
754.971 916.725 755.256 915.154 753.973 907.881 cv
752.687 900.607 750.549 890.195 747.697 884.633 cv
744.844 879.07 744.701 873.936 746.982 864.664 cv
749.266 855.393 749.836 852.826 747.27 841.131 cv
744.701 829.435 747.555 815.029 745.842 808.184 cv
744.131 801.338 743.846 799.341 737.998 799.198 cv
732.15 799.056 727.729 798.913 720.598 797.772 cv
713.467 796.631 714.375 796.826 708.475 797.629 cv
702.568 798.432 700.059 799.443 695.637 798.037 cv
691.215 796.631 688.078 796.06 683.514 795.205 cv
678.949 794.349 676.953 792.494 674.813 795.348 cv
672.674 798.199 668.68 798.342 666.541 795.205 cv
664.402 792.066 662.193 789.481 656.938 790.165 cv
655.325 790.375 653.143 788.645 651.807 786.915 cv
650.423 785.124 649.946 783.333 651.947 783.695 cv
652.373 783.129 653.135 782.559 654.014 782.442 cv
657.957 781.924 663.404 781.939 671.105 784.793 cv
678.807 787.646 681.518 786.361 693.498 785.221 cv
700.601 784.544 704.663 784.987 707.655 785.431 cv
709.709 785.735 711.259 786.039 712.943 785.981 cv
717.08 785.839 720.455 783.652 726.017 782.083 cv
728.211 781.464 730.339 781.466 732.216 781.469 cv
735.098 781.472 737.389 781.476 738.426 779.23 cv
740.137 775.521 744.701 774.523 748.695 772.955 cv
752.687 771.385 757.109 767.963 753.115 757.408 cv
749.123 746.854 745.699 742.289 744.559 737.512 cv
f
101.407 779.178 mo
100.128 778.909 100.173 778.595 96.8741 772.804 cv
93.5752 767.014 88.997 762.436 85.9669 759.405 cv
82.9365 756.376 82.4659 755.299 81.3886 752.134 cv
80.3114 748.97 78.8302 748.027 76.9444 746.546 cv
75.0596 745.064 72.9054 742.304 70.75 737.793 cv
68.5958 733.282 63.4786 723.25 61.0546 717.594 cv
58.6308 711.938 57.0381 708.235 55.7138 706.687 cv
57.1495 707.091 57.7784 706.956 60.4267 709.694 cv
63.0753 712.433 72.6806 722.846 74.5206 724.058 cv
76.3603 725.269 79.6378 726.549 81.7919 728.77 cv
83.9474 730.993 90.0068 736.177 93.6425 738.331 cv
97.2782 740.486 99.9033 745.671 100.712 749.037 cv
101.519 752.403 100.981 758.463 101.116 762.368 cv
101.251 766.273 102.395 770.784 102.731 774.487 cv
103.068 778.19 102.687 779.447 101.407 779.178 cv
220.153 733.35 mo
217.932 733.35 215.238 732.81 213.151 732.339 cv
211.065 731.868 208.774 729.915 205.072 730.319 cv
203.505 730.49 202.348 730.396 201.269 730.302 cv
199.799 730.174 198.473 730.045 196.454 730.589 cv
192.952 731.531 185.546 732.138 179.823 732.339 cv
177.87 732.408 175.988 732.249 174.233 732.091 cv
170.844 731.786 167.927 731.48 165.887 732.81 cv
162.789 734.83 159.086 735.369 154.171 736.109 cv
149.256 736.851 149.054 738.601 144.745 736.379 cv
140.435 734.157 134.78 735.234 132.761 737.053 cv
130.74 738.87 129.865 738.601 128.586 736.716 cv
128.061 735.942 127.735 735.394 127.594 734.912 cv
127.837 734.304 128.053 733.155 128.698 732.586 cv
129.843 731.576 128.911 731.324 129.955 729.668 cv
131.616 729.398 131.682 724.192 130.898 724.417 cv
131.661 723.878 130.811 722.913 131.281 721.634 cv
131.751 720.355 131.347 720.018 130.606 718.2 cv
129.865 716.382 129.461 716.181 128.99 715.237 cv
128.519 714.295 127.913 713.555 125.825 712.881 cv
125.381 712.737 124.813 712.408 124.3 712.388 cv
123.133 712.567 122.802 712.143 122.491 711.118 cv
122.101 709.829 120.754 709.919 120.277 710.976 cv
119.834 711.959 119.26 712.038 118.826 712.235 cv
117.392 711.49 117.146 712.422 115.794 712.679 cv
114.38 712.948 115.995 713.622 113.639 714.43 cv
111.282 715.237 111.484 716.786 110.542 718.267 cv
109.6 719.749 109.6 720.018 109.532 722.24 cv
109.51 722.978 109.733 723.635 110.025 724.27 cv
109.452 725.219 109.768 728.993 111.155 729.307 cv
111.199 729.962 111.481 730.165 111.73 730.364 cv
111.847 730.608 111.97 730.843 112.098 731.063 cv
112.091 731.262 li
111.984 732.318 112.915 733.333 113.743 734.372 cv
113.553 734.863 113.244 735.47 112.943 736.222 cv
112.271 737.905 110.946 738.735 109.667 735.974 cv
108.388 733.215 104.55 730.521 100.981 730.117 cv
97.4131 729.714 94.5177 727.896 91.2187 725.202 cv
87.919 722.509 84.8448 722.532 83.0499 718.402 cv
81.254 714.273 76.5411 711.804 71.6932 709.56 cv
66.8457 707.315 61.414 703.455 59.7538 702.288 cv
58.0928 701.121 57.8682 699.73 56.4766 699.37 cv
55.085 699.012 54.411 698.697 53.6035 698.383 cv
52.6414 697.18 52.1425 697.247 51.3239 697.314 cv
50.9208 697.346 50.4404 697.379 49.789 697.261 cv
49.789 697.261 48.128 694.298 45.5693 692.548 cv
43.0108 690.797 42.4716 690.528 41.1045 690.797 cv
39.7374 691.066 40.5868 692.682 41.2607 694.433 cv
40.9911 695.779 40.8564 696.184 42.7412 699.146 cv
44.627 702.108 44.4921 705.071 44.3574 709.245 cv
44.2227 713.42 45.8389 714.497 49.205 714.227 cv
52.5713 713.958 52.706 717.19 54.7255 722.038 cv
56.746 726.886 58.3624 732.138 58.4961 736.311 cv
58.6308 740.486 59.5733 745.737 63.4786 748.97 cv
67.3839 752.201 67.9229 755.567 70.6163 758.8 cv
73.3087 762.031 79.7724 774.959 82.1962 781.019 cv
84.62 787.078 92.4306 798.255 99.2979 804.045 cv
101.486 805.89 102.529 811.316 102.126 817.511 cv
101.722 823.705 102.529 841.075 104.415 850.098 cv
106.3 859.12 105.088 864.775 103.607 869.085 cv
102.126 873.394 98.8936 876.222 99.5673 882.281 cv
100.24 888.341 101.991 898.979 102.395 906.924 cv
102.799 914.868 100.375 916.754 96.3349 919.043 cv
92.2959 921.332 98.625 928.199 100.375 933.182 cv
102.126 938.164 98.3554 939.78 99.9716 942.474 cv
98.4903 943.012 97.6817 945.032 101.722 944.897 cv
105.762 944.763 105.223 942.069 108.32 933.047 cv
111.417 924.025 109.936 916.619 110.34 903.153 cv
110.744 889.688 112.494 883.089 112.764 878.241 cv
113.033 873.394 114.11 872.384 115.726 869.286 cv
117.342 866.189 116.13 860.669 116.265 857.908 cv
116.399 855.147 119.295 845.654 120.708 835.824 cv
122.122 825.994 122.601 818.178 122.594 807.411 cv
122.589 797.769 123.334 796.975 124.748 793.743 cv
126.162 790.512 126.162 788.155 125.69 784.52 cv
125.22 780.884 128.114 776.171 129.528 771.457 cv
130.942 766.744 132.087 762.839 133.703 760.819 cv
135.319 758.8 137.474 756.106 139.493 752.134 cv
141.513 748.161 143.668 748.363 147.909 747.623 cv
152.151 746.882 155.383 745.334 159.827 743.516 cv
164.271 741.698 167.031 741.968 172.014 742.236 cv
176.995 742.506 189.317 738.331 192.886 736.985 cv
196.454 735.639 198.541 735.167 199.753 736.716 cv
200.965 738.265 204.196 740.082 205.61 741.159 cv
207.024 742.236 206.89 746.209 208.169 745.536 cv
209.448 744.862 208.774 742.573 207.899 740.755 cv
207.024 738.938 207.899 738.331 210.862 736.716 cv
213.824 735.1 215.912 735.974 217.527 735.437 cv
218.279 735.186 219.191 735.226 220.073 735.267 cv
221.088 735.314 222.063 735.361 222.712 734.965 cv
224.934 733.215 222.376 733.35 220.153 733.35 cv
f
889.592 477.381 mo
889.457 478.458 889.974 481.084 888.155 481.286 cv
886.338 481.488 878.155 483.623 876.943 484.229 cv
875.192 481.805 871.458 477.92 871.121 476.304 cv
875.901 474.015 877.27 474.149 878.818 473.61 cv
880.367 473.072 883.622 474.575 886.45 475.315 cv
887.46 475.922 889.727 476.304 889.592 477.381 cv
852.305 498.245 mo
853.584 492.792 852.269 487.548 853.414 484.182 cv
853.952 482.7 855.029 482.97 857.386 482.026 cv
859.742 481.084 860.749 480.683 861.153 480.683 cv
863.981 482.905 867.93 486.623 868.468 488.172 cv
864.765 490.259 854.729 497.235 852.305 498.245 cv
958.717 580.933 mo
958.851 580.126 958.38 579.452 956.966 579.251 cv
956.764 577.499 955.148 577.231 952.455 574.403 cv
949.762 571.575 948.617 569.487 948.078 563.966 cv
947.54 558.446 942.355 558.782 939.662 560.735 cv
936.969 562.686 934.142 559.522 927.206 555.147 cv
920.271 550.771 913.942 541.345 909.027 539.728 cv
906.771 538.986 905.197 539.039 903.983 539.091 cv
902.553 539.154 901.626 539.216 900.679 537.977 cv
898.928 535.689 905.257 522.829 907.21 516.837 cv
909.162 510.845 910.778 503.843 910.711 500.745 cv
910.643 497.647 913.538 495.425 915.087 489.164 cv
916.636 482.902 913.808 476.641 909.836 470.888 cv
905.863 465.136 905.796 464.522 897.783 458.192 cv
889.771 451.863 878.527 449.507 870.986 450.112 cv
863.445 450.719 859.069 452.873 850.923 456.981 cv
842.775 461.087 838.265 465.464 835.571 468.628 cv
832.878 471.793 830.387 472.398 826.751 473.745 cv
823.115 475.092 822.712 475.697 819.277 477.583 cv
815.844 479.468 815.508 482.363 815.373 485.595 cv
815.238 488.827 817.46 490.107 819.144 492.194 cv
820.826 494.28 823.722 495.897 825.001 497.581 cv
826.28 499.263 827.088 500.273 829.107 499.735 cv
831.128 499.196 832.07 497.378 831.599 495.022 cv
832.475 494.888 834.831 494.013 835.639 493.271 cv
836.446 492.53 836.783 490.645 837.12 490.645 cv
837.457 490.645 839.813 490.442 841.361 489.636 cv
842.305 490.78 842.843 492.866 842.439 495.829 cv
842.035 498.792 840.486 504.448 839.813 506.534 cv
839.14 508.622 836.043 510.372 833.08 513.671 cv
830.118 516.972 824.731 521.415 822.106 523.099 cv
819.479 524.78 818.672 524.175 818.268 522.964 cv
817.864 521.751 816.988 520.136 815.776 519.597 cv
814.564 519.057 812.949 517.577 811.871 515.827 cv
810.794 514.075 809.986 514.413 810.121 516.567 cv
810.256 518.722 812.477 519.327 812.882 520.675 cv
813.285 522.021 813.487 522.694 812.275 523.099 cv
811.063 523.501 809.044 523.368 807.158 523.03 cv
805.273 522.694 804.196 523.165 802.31 524.243 cv
800.426 525.319 801.638 525.925 803.254 525.454 cv
804.869 524.983 805.744 524.849 807.158 525.05 cv
808.572 525.253 808.438 526.802 806.283 527.003 cv
804.129 527.204 803.455 527.542 801.436 529.157 cv
799.416 530.774 800.695 531.919 802.715 530.571 cv
804.734 529.226 805.408 529.023 807.023 528.956 cv
808.64 528.888 808.505 529.628 806.89 530.167 cv
805.273 530.706 804.264 531.985 802.917 533.198 cv
801.57 534.409 802.715 535.149 803.927 534.409 cv
805.139 533.669 805.206 532.591 805.946 532.39 cv
806.687 532.187 807.63 531.446 809.111 531.581 cv
810.593 531.716 809.381 532.456 808.977 532.86 cv
808.572 533.265 807.091 534.745 805.879 535.823 cv
804.667 536.899 806.081 537.776 807.158 536.968 cv
808.236 536.159 810.054 535.149 811.198 534.409 cv
812.343 533.669 814.295 533.6 816.921 532.456 cv
819.547 531.311 820.961 529.831 822.779 528.956 cv
824.597 528.081 834.157 523.233 838.467 520.81 cv
838.467 520.81 837.255 528.282 835.549 534.747 cv
833.844 541.21 830.971 550.366 827.828 557.55 cv
824.687 564.731 822.892 570.565 821.635 575.233 cv
820.377 579.901 821.545 579.364 821.455 582.415 cv
821.365 585.468 825.046 584.929 826.123 584.839 cv
827.2 584.749 827.649 584.122 827.11 583.224 cv
826.572 582.325 826.303 581.606 827.649 580.71 cv
828.996 579.813 830.881 577.567 830.971 575.862 cv
831.06 574.157 831.779 572.36 833.305 571.194 cv
834.831 570.026 837.793 570.655 840.128 567.872 cv
842.462 565.089 838.781 561.948 837.255 559.524 cv
835.729 557.101 839.499 549.29 842.013 544.083 cv
844.526 538.876 848.387 532.681 851.08 529.091 cv
853.773 525.501 852.74 521.28 852.269 516.903 cv
851.798 512.526 853.347 511.247 856.308 510.507 cv
859.271 509.767 866.879 509.7 869.707 508.823 cv
869.707 509.362 869.505 514.278 869.102 517.981 cv
868.697 521.685 867.553 522.56 865.803 524.108 cv
864.052 525.657 863.31 525.388 862.57 527.608 cv
861.83 529.831 860.551 530.841 859.137 532.591 cv
857.723 534.343 860.618 534.208 862.1 532.524 cv
863.58 530.841 864.254 530.032 865.196 529.628 cv
866.139 529.226 867.485 529.36 867.418 531.919 cv
867.351 534.476 865.601 535.353 864.927 537.843 cv
864.254 540.335 865.869 539.661 867.081 537.573 cv
868.293 535.487 868.697 534.745 869.034 534.005 cv
869.371 533.265 869.977 532.726 870.246 534.409 cv
870.516 536.093 869.371 537.304 868.765 539.661 cv
868.158 542.017 869.707 542.151 870.246 540.872 cv
870.784 539.593 871.728 538.179 872.4 535.755 cv
872.94 536.429 872.603 537.034 871.929 539.392 cv
871.256 541.749 873.545 540.805 874.219 538.313 cv
874.892 535.823 875.632 535.353 875.094 534.073 cv
874.555 532.794 874.016 531.446 875.431 531.919 cv
876.844 532.39 877.45 533.13 878.056 535.218 cv
878.662 537.304 880.278 537.034 879.605 533.669 cv
878.932 530.302 878.662 531.177 876.911 529.495 cv
875.161 527.811 875.228 524.378 874.151 522.089 cv
873.477 521.28 875.901 512.526 879.268 505.12 cv
883.982 502.966 889.367 500.812 892.33 497.647 cv
892.801 497.983 888.762 511.382 888.223 516.972 cv
887.684 522.56 888.29 530.505 887.684 536.563 cv
887.078 542.624 889.569 546.192 893.272 546.999 cv
896.976 547.807 907.546 554.944 914.481 558.446 cv
921.416 561.946 927.543 565.179 932.66 569.69 cv
937.777 574.2 943.365 578.509 946.126 580.597 cv
948.887 582.685 951.176 584.3 953.195 583.964 cv
954.278 583.783 955.419 583.892 956.536 584.002 cv
957.501 584.097 958.448 584.192 959.322 584.099 cv
961.207 583.895 960.534 581.202 958.717 580.933 cv
f
875.844 760.419 mo
875.159 756.62 871.144 754.327 867.503 752.011 cv
863.861 749.692 858.962 745.721 855.983 741.749 cv
853.003 737.776 850.156 735.923 848.765 734.665 cv
847.376 733.407 843.536 728.375 840.092 722.813 cv
836.65 717.253 830.195 708.513 828.01 706.429 cv
825.826 704.344 824.568 704.509 823.143 704.243 cv
821.721 703.979 820.76 702.522 819.47 701.165 cv
818.18 699.808 816.855 699.477 815.828 698.814 cv
814.803 698.151 814.107 696.861 817.086 696.993 cv
820.065 697.126 820 699.212 822.449 699.477 cv
824.898 699.742 822.781 697.06 821.986 696.068 cv
821.19 695.075 820.398 694.511 818.244 694.148 cv
816.094 693.782 814.173 692.822 814.638 691.731 cv
812.353 689.743 813.279 688.785 813.875 688.95 cv
814.471 689.115 817.617 690.374 819.072 690.639 cv
818.079 689.051 817.252 688.255 816.391 686.699 cv
815.531 685.144 816.591 683.786 817.549 685.012 cv
818.51 686.235 820.928 689.051 822.283 690.009 cv
823.641 690.969 823.244 691.069 825.297 693.585 cv
827.348 696.101 829.036 700.007 831.52 701.397 cv
834.002 702.788 833.803 703.086 835.061 705.137 cv
836.318 707.189 837.842 709.639 844.199 715.067 cv
850.554 720.497 853.4 722.152 855.188 725.594 cv
856.977 729.038 858.697 731.818 863.597 734.399 cv
868.495 736.982 873.46 743.735 876.838 743.735 cv
880.215 743.735 883.724 745.259 886.039 747.642 cv
888.357 750.025 889.548 748.303 889.813 745.191 cv
890.078 742.08 890.211 739.166 889.416 738.373 cv
886.768 738.241 883.889 738.306 884.384 735.029 cv
884.882 731.751 883.988 730.063 883.821 728.375 cv
883.656 726.686 884.716 725.629 884.054 724.105 cv
883.391 722.583 883.028 722.285 883.559 721.125 cv
884.086 719.967 883.724 717.749 885.609 716.225 cv
884.419 713.644 884.849 711.892 886.404 711.394 cv
887.084 711.176 887.841 711.421 888.596 711.666 cv
889.567 711.981 890.535 712.296 891.336 711.626 cv
892.76 710.434 894.315 711.427 895.408 710.599 cv
896.501 709.77 899.116 711.228 900.142 712.321 cv
901.167 713.412 902.26 712.354 903.716 714.142 cv
905.174 715.928 905.306 717.65 906.266 718.576 cv
907.224 719.504 906.266 722.848 906.266 722.848 cv
905.536 724.536 905.967 726.124 904.842 727.547 cv
903.716 728.971 902.855 733.771 902.855 734.962 cv
902.855 736.155 903.518 742.191 904.974 744.354 cv
906.432 746.517 910.403 748.281 915.833 749.606 cv
921.262 750.93 922.143 753.888 923.557 756.536 cv
924.969 759.182 927.528 759.978 931.323 764.478 cv
935.12 768.981 940.152 775.028 943.284 778.03 cv
946.419 781.03 946.949 784.474 948.978 789.947 cv
951.009 795.419 953.481 808.219 954.806 810.779 cv
956.129 813.339 956.439 814.353 956.35 816.25 cv
956.262 818.149 956.57 820.754 956.924 823.843 cv
957.277 826.933 957.366 827.815 956.703 828.655 cv
956.041 829.492 956.306 831.655 956.482 832.848 cv
956.659 834.038 956.35 835.671 956.57 837.217 cv
956.792 838.761 955.115 838.805 954.629 836.156 cv
954.143 833.508 953.745 830.685 952.997 829.095 cv
952.246 827.507 951.318 824.769 950.349 825.786 cv
949.376 826.8 948.67 828.478 947.655 830.773 cv
946.64 833.068 943.154 833.685 944.83 830.199 cv
946.507 826.712 946.86 825.256 947.081 822.74 cv
947.302 820.224 946.949 820.489 948.274 818.548 cv
949.598 816.605 950.921 814.509 949.795 811.398 cv
948.67 808.284 943.042 798.487 940.792 794.382 cv
938.541 790.277 937.283 786.173 934.899 783.657 cv
932.517 781.141 920.137 773.726 916.825 767.967 cv
915.502 771.143 912.986 776.838 910.801 781.141 cv
908.615 785.443 908.152 787.496 907.159 792.065 cv
906.167 796.632 905.571 801.267 907.622 804.114 cv
909.676 806.961 912.388 811.926 913.515 815.964 cv
914.64 820.003 913.449 829.139 911.596 832.981 cv
912.853 836.422 917.62 847.609 918.879 854.562 cv
920.137 861.513 920.864 871.378 922.718 874.092 cv
924.571 876.806 925.896 878.858 929.803 883.295 cv
933.707 887.73 933.707 891.57 934.965 896.668 cv
936.223 901.767 938.939 917.325 941.255 918.45 cv
943.572 919.575 945.228 917.92 947.611 920.369 cv
949.995 922.819 948.339 923.614 947.677 926.526 cv
947.015 929.439 946.552 933.149 947.81 935.796 cv
949.067 938.444 949.067 939.57 950.523 940.035 cv
951.98 940.498 952.443 942.351 949.795 942.483 cv
947.146 942.616 945.36 943.278 943.903 941.358 cv
942.447 939.437 940.064 938.049 937.085 932.155 cv
934.104 926.261 933.179 919.906 930.266 914.146 cv
927.352 908.387 923.646 903.42 920.864 897.197 cv
918.083 890.975 917.818 883.956 913.714 880.646 cv
911.331 878.131 912.919 876.938 909.345 871.775 cv
905.769 866.611 903.12 859.196 902.063 856.681 cv
899.679 862.242 894.779 871.245 894.117 875.35 cv
893.454 879.454 892.571 883.867 892.836 889.959 cv
893.102 896.049 894.073 900.376 889.748 905.935 cv
885.421 911.498 877.566 924.475 877.92 928.888 cv
878.271 933.304 878.095 934.804 876.683 936.394 cv
875.271 937.982 876.152 940.276 876.241 942.307 cv
876.329 944.337 877.566 946.634 875.713 946.898 cv
873.857 947.162 874.388 948.841 872.623 948.752 cv
870.855 948.664 870.768 948.664 869.798 949.282 cv
868.826 949.898 867.768 949.545 867.237 948.929 cv
865.384 950.075 864.235 949.634 863.619 948.841 cv
863.001 948.046 861.852 948.134 863.178 945.221 cv
864.501 942.307 866.707 940.807 867.944 938.424 cv
869.179 936.04 869.532 933.304 869.532 930.655 cv
869.532 928.005 871.827 926.944 872.888 922.619 cv
873.946 918.295 875.507 909.681 876.683 902.494 cv
878.183 893.312 882.685 887.664 882.421 882.279 cv
882.156 876.894 884.628 871.334 884.892 865.33 cv
885.158 859.329 887.628 838.407 889.571 831.699 cv
885.951 822.254 886.393 815.634 886.039 809.101 cv
885.687 802.568 884.451 801.334 884.363 796.125 cv
884.274 790.917 881.695 787.178 881.165 782.147 cv
880.637 777.116 880.026 774.811 878.262 771.458 cv
876.494 768.103 876.329 763.111 875.844 760.419 cv
f
246.289 732.5 mo
249.402 728.544 248.881 726.018 248.071 719.537 cv
247.262 713.056 246.452 713.541 246.775 708.357 cv
247.099 703.171 246.127 697.5 244.506 692.477 cv
242.887 687.454 243.373 682.269 244.506 675.14 cv
245.641 668.01 248.287 656.398 248.395 652.4 cv
248.503 648.403 247.657 648.944 246.027 647.54 cv
244.398 646.135 244.02 643.544 243.912 641.651 cv
243.804 639.762 242.24 639.222 241.05 637.115 cv
239.862 635.009 240.564 633.658 242.455 635.225 cv
244.345 636.791 244.398 638.357 245.155 639.492 cv
245.912 640.626 247.37 641.058 247.37 638.79 cv
247.37 636.521 246.343 635.656 245.694 634.198 cv
245.046 632.74 241.914 630.85 242.94 628.905 cv
241.212 625.341 241.861 624.908 242.4 624.585 cv
242.94 624.261 245.75 628.42 246.991 629.554 cv
248.234 630.688 248.45 631.822 248.829 632.633 cv
248.936 629.122 247.963 627.717 247.586 625.448 cv
247.208 623.181 248.611 621.939 249.26 623.882 cv
249.908 625.827 250.664 628.744 251.258 630.526 cv
251.852 632.309 251.528 633.819 251.907 635.549 cv
252.285 637.276 252.933 639.222 252.878 641.112 cv
252.825 643.002 253.635 645.703 253.851 647.972 cv
254.067 650.24 253.256 650.672 253.58 654.183 cv
253.905 657.693 253.905 663.959 254.391 670.116 cv
254.876 676.273 256.173 683.727 255.282 687.049 cv
254.391 690.371 254.715 695.313 255.849 699.931 cv
256.984 704.549 257.712 706.412 259.819 709.167 cv
261.925 711.921 262.898 717.835 262.087 720.266 cv
261.277 722.695 265.329 724.155 266.787 724.803 cv
268.245 725.451 269.297 723.912 271.566 722.048 cv
273.835 720.185 273.105 716.781 272.376 714.514 cv
271.647 712.245 271.729 709.692 273.835 709.733 cv
275.941 709.774 276.508 709.126 276.508 708.681 cv
276.508 708.234 277.197 708.194 277.603 708.681 cv
278.007 709.167 277.764 707.87 278.372 707.627 cv
278.598 707.536 278.858 707.552 279.087 707.569 cv
279.472 707.596 279.769 707.624 279.668 707.142 cv
279.83 705.317 279.952 704.306 281.613 705.359 cv
283.274 706.412 284.449 707.142 285.5 706.978 cv
286.554 706.817 286.514 705.967 286.675 705.237 cv
286.838 704.509 287.608 704.427 288.296 704.427 cv
288.985 704.427 292.752 702.32 293.806 704.306 cv
294.778 702.159 298.707 700.538 299.031 703.131 cv
299.356 705.724 301.34 709.288 302.838 712.326 cv
304.338 715.364 306.526 718.322 304.135 722.979 cv
301.746 727.638 299.679 728.448 296.6 729.097 cv
293.522 729.744 291.253 730.717 288.864 730.15 cv
286.474 729.583 283.76 730.028 282.22 731.526 cv
280.681 733.026 279.398 736.442 281.235 738.603 cv
283.071 740.764 284.476 741.087 287.824 743.357 cv
291.172 745.624 292.252 750.594 293.874 755.237 cv
295.494 759.884 296.898 761.721 300.031 764.852 cv
303.163 767.984 302.407 768.093 308.024 771.226 cv
313.642 774.357 315.803 777.274 320.447 781.92 cv
325.091 786.564 327.846 789.21 329.683 790.292 cv
331.519 791.371 332.599 792.398 334.381 796.017 cv
336.163 799.635 337.73 801.094 338.865 802.606 cv
339.998 804.118 339.944 805.523 340.863 807.143 cv
341.781 808.764 342.322 810.115 343.401 811.842 cv
344.482 813.57 342.484 813.948 341.294 811.788 cv
340.107 809.628 339.188 808.493 339.026 808.332 cv
339.405 811.734 339.133 811.788 339.405 813.732 cv
339.674 815.677 337.785 815.245 337.352 812.76 cv
336.002 812.868 335.732 811.032 335.732 809.573 cv
335.732 808.116 336.056 805.253 334.813 803.957 cv
333.571 802.66 331.303 802.66 331.843 804.929 cv
332.383 807.197 333.464 808.709 333.464 810.815 cv
333.464 812.923 331.465 813.409 331.033 811.032 cv
330.601 808.656 329.683 806.55 328.495 804.874 cv
327.306 803.2 327.144 802.229 327.091 799.366 cv
327.036 796.503 327.468 796.394 323.795 793.694 cv
320.123 790.994 307.376 783.703 302.515 780.353 cv
297.654 777.005 296.573 777.113 291.334 770.739 cv
286.095 764.366 280.262 754.537 276.212 755.292 cv
272.161 756.048 267.921 758.344 264.518 760.774 cv
261.116 763.205 254.067 769.849 257.226 776.167 cv
260.386 782.487 262.736 783.135 264.033 789.13 cv
265.329 795.126 264.275 797.476 265.976 803.39 cv
267.678 809.304 269.865 814.084 271.405 822.51 cv
272.944 830.935 273.268 843.493 274.969 847.058 cv
276.671 850.622 280.316 855.889 284.286 860.507 cv
288.256 865.125 287.285 877.845 288.175 882.867 cv
289.067 887.891 290.929 905.229 293.603 906.847 cv
296.277 908.469 304.216 909.279 301.542 915.922 cv
298.87 922.565 299.841 927.021 300.895 930.263 cv
301.948 933.503 303.812 934.474 302.758 936.096 cv
301.705 937.716 302.515 938.688 304.135 939.093 cv
305.755 939.498 305.594 941.685 304.378 941.848 cv
303.163 942.01 300.328 943.63 298.221 941.848 cv
296.115 940.065 294.981 937.796 291.253 930.343 cv
287.527 922.89 284.935 912.762 282.422 904.498 cv
279.911 896.234 274.888 882.705 272.782 874.441 cv
270.675 866.178 268.164 856.375 265.409 853.296 cv
262.655 850.218 261.601 847.948 260.953 843.25 cv
260.305 838.551 251.96 822.023 251.636 815.866 cv
248.477 826.398 247.099 829.234 243.939 834.662 cv
240.781 840.091 238.917 846.005 239.241 852.243 cv
239.564 858.481 240.618 866.745 239.079 872.092 cv
237.539 877.438 230.248 886.432 227.332 892.102 cv
224.415 897.774 220.202 907.497 223.037 908.954 cv
225.873 910.412 228.303 913.248 225.386 918.271 cv
222.47 923.295 222.551 928.724 223.604 931.64 cv
224.658 934.557 224.171 934.718 223.767 936.257 cv
224.252 937.23 224.495 938.606 222.876 939.093 cv
223.037 940.552 223.443 941.685 221.903 942.171 cv
222.308 942.577 222.226 944.116 219.391 943.63 cv
216.555 943.144 216.069 941.604 214.125 936.906 cv
212.18 932.207 210.48 922.809 210.398 918.028 cv
210.318 913.248 212.019 905.876 214.693 898.504 cv
217.366 891.131 222.389 877.357 223.604 870.392 cv
224.819 863.423 227.817 854.997 226.925 849.326 cv
226.035 843.655 229.033 839.685 229.195 836.12 cv
229.357 832.556 229.681 820.321 231.868 811.41 cv
234.056 802.498 238.106 795.207 236.486 789.293 cv
234.866 783.378 235.109 779.57 235.918 775.924 cv
236.729 772.278 237.702 769.685 237.377 763.043 cv
237.053 756.399 238.431 750.729 240.213 746.758 cv
241.995 742.789 243.291 736.308 246.289 732.5 cv
f
137.868 426.363 mo
133.784 426.315 127.171 427.628 124.788 428.259 cv
122.406 428.891 120.412 424.758 112.608 421.841 cv
104.804 418.923 97.1455 416.736 95.1768 414.913 cv
93.2069 413.089 93.2069 412.505 91.0918 408.203 cv
88.9767 403.899 84.455 398.551 81.7559 396.995 cv
82.8749 395.341 82.3399 394.612 84.7227 395.195 cv
87.1054 395.779 102.422 398.503 108.159 399.474 cv
110.679 399.901 112.983 399.718 115.204 399.536 cv
118.039 399.303 120.737 399.07 123.573 400.106 cv
128.63 401.955 137.917 402.294 139.182 404.191 cv
140.445 406.087 141.127 410.95 140.932 416.785 cv
140.736 422.619 141.953 426.412 137.868 426.363 cv
237.888 352.942 mo
235.408 352.747 235.65 352.115 231.518 352.503 cv
233.316 350.899 234.144 351.287 237.401 351.434 cv
239.734 351.539 239.394 349.829 236.234 349.683 cv
233.073 349.538 232.928 349.246 231.032 350.024 cv
229.136 350.802 229.038 351.24 227.871 351.093 cv
226.704 350.948 226.559 350.656 224.662 352.358 cv
222.766 354.06 219.945 356.443 218.049 357.463 cv
216.153 358.485 216.056 357.998 212.943 361.986 cv
209.831 365.973 203.413 371.224 198.064 374.531 cv
192.716 377.837 190.382 382.894 187.27 385.325 cv
184.158 387.755 179.709 389.604 177.411 390.99 cv
177.411 390.99 177.302 390.26 177.63 389.932 cv
177.959 389.604 178.359 389.421 177.922 388.911 cv
177.484 388.4 177.521 388.254 177.959 388.109 cv
178.396 387.962 178.396 387.452 178.141 387.124 cv
177.886 386.795 177.886 386.503 179.089 386.467 cv
180.293 386.431 180.22 385.994 179.891 385.264 cv
179.564 384.535 178.98 383.003 178.688 382.091 cv
178.396 381.179 179.162 380.195 180.001 379.757 cv
180.84 379.32 180.293 378.882 180.621 377.022 cv
180.949 375.163 180.548 374.141 179.673 372.61 cv
183.392 368.562 180.657 368.598 176.792 368.234 cv
175.229 368.086 174.011 368.165 172.827 368.244 cv
171.081 368.361 169.406 368.477 166.8 367.869 cv
162.423 366.848 160.381 369.181 157.975 373.047 cv
155.567 376.912 157.317 381.435 159.068 384.352 cv
160.818 387.27 158.85 389.093 156.808 392.157 cv
154.765 395.22 153.088 394.563 149.44 392.448 cv
145.794 390.333 140.543 390.187 137.333 391.5 cv
134.124 392.813 133.322 392.74 128.727 392.01 cv
126.623 391.676 124.32 391.923 122.022 392.17 cv
119.301 392.463 116.585 392.756 114.213 392.084 cv
109.837 390.843 106.117 390.552 99.0421 390.916 cv
91.9667 391.281 85.914 390.916 83.6525 390.187 cv
81.3916 389.457 79.5684 391.062 76.3593 391.719 cv
75.2646 390.99 69.7216 386.249 66.9503 383.55 cv
64.1788 380.851 64.9083 379.465 63.2305 378.882 cv
61.5527 378.298 60.6045 372.172 60.459 368.598 cv
60.3136 365.024 59.0731 365.097 58.6358 363.347 cv
58.1982 361.596 57.1768 361.815 57.0314 361.377 cv
56.8847 360.94 56.5204 359.554 55.6455 359.846 cv
55.6455 359.481 54.7705 358.533 53.8223 358.314 cv
53.5304 357.585 52.4366 356.636 51.4883 356.928 cv
51.4883 356.928 51.2695 355.178 49.2265 355.542 cv
47.1845 355.908 48.4247 358.242 48.1328 361.013 cv
47.1114 363.638 47.2578 365.097 50.0294 369.254 cv
52.8009 373.412 54.5507 376.912 55.0614 379.173 cv
55.5724 381.435 54.5507 382.31 57.9063 384.207 cv
61.2616 386.103 63.6679 390.26 65.6378 393.98 cv
63.4493 393.833 57.3232 393.469 56.5204 393.98 cv
55.0614 396.022 59 395.511 63.3036 396.168 cv
62.1368 396.751 59.5841 398.72 58.1251 399.523 cv
56.6661 400.326 57.6875 401.711 59.876 400.69 cv
62.0634 399.668 64.543 397.918 67.8983 397.481 cv
67.8983 397.481 68.4824 398.501 69.5761 400.909 cv
68.2636 402.513 68.9921 404.191 70.8886 402.951 cv
72.8583 406.525 79.7872 411.265 81.3183 413.016 cv
82.8506 414.766 84.0175 419.143 87.372 421.623 cv
90.7276 424.102 94.3007 425.634 101.157 431.907 cv
108.013 438.179 112.535 440.951 119.026 447.515 cv
121.385 450.967 123.573 452.814 126.49 454.079 cv
129.408 455.342 130.866 463.414 133.492 470.416 cv
136.118 477.418 146.329 490.158 149.44 493.756 cv
152.553 497.355 154.789 506.301 152.649 510.969 cv
150.51 515.637 149.83 519.624 151.58 525.361 cv
153.331 531.099 154.789 544.325 155.081 550.938 cv
155.373 557.55 150.608 556.481 148.273 558.037 cv
145.939 559.593 147.107 562.898 149.343 565.136 cv
151.58 567.373 152.455 570.388 151.482 572.916 cv
150.51 575.443 149.732 577.389 150.413 579.528 cv
151.094 581.667 150.219 581.57 148.955 582.349 cv
147.69 583.127 147.885 584.585 150.121 584.779 cv
152.357 584.974 154.303 585.267 154.789 583.612 cv
155.275 581.959 157.026 580.987 159.068 576.611 cv
161.11 572.234 163.055 566.012 163.639 553.66 cv
164.222 541.309 164.903 530.613 164.611 523.806 cv
164.319 516.999 165.098 511.455 166.556 505.329 cv
168.015 499.202 165.098 497.257 161.791 490.936 cv
158.485 484.615 156.054 474.404 153.331 466.72 cv
150.608 459.038 144.772 450.189 145.745 449.12 cv
146.718 448.049 149.83 444.646 152.358 443.187 cv
154.887 441.728 159.555 434.824 164.027 431.615 cv
168.501 428.406 169.085 423.64 170.252 419.653 cv
171.419 415.666 172.196 415.179 172.391 410.511 cv
172.586 405.844 175.017 403.316 179.588 401.273 cv
184.157 399.231 186.2 395.632 189.507 392.911 cv
192.813 390.188 198.064 389.118 199.62 386.686 cv
201.177 384.254 204.191 380.949 207.595 377.059 cv
210.999 373.168 216.736 364.708 218.973 362.471 cv
221.21 360.235 222.571 361.353 224.321 360.672 cv
226.072 359.993 227.239 357.95 228.941 357.415 cv
230.643 356.88 231.907 357.512 233.561 357.658 cv
235.213 357.803 236.186 356.491 234.971 356.393 cv
233.755 356.296 233.414 356.004 230.886 355.761 cv
231.129 355.47 231.858 355.275 233.608 355.324 cv
235.359 355.372 237.255 355.47 237.45 354.594 cv
239.444 354.594 240.367 353.136 237.888 352.942 cv
f
603.081 182.132 mo
598.705 182.425 593.746 186.897 590.342 183.397 cv
586.938 179.896 584.604 173.771 581.687 166.864 cv
578.769 159.96 572.934 152.083 570.989 149.555 cv
576.143 153.444 579.061 154.126 584.117 159.571 cv
589.175 165.017 595.398 170.269 600.747 172.798 cv
606.096 175.325 607.457 176.784 609.889 179.216 cv
612.319 181.647 613.486 182.618 615.334 183.981 cv
608.04 182.911 607.457 181.841 603.081 182.132 cv
cp
686.616 214.128 mo
687.686 213.739 686.13 211.696 685.157 211.112 cv
685.838 210.237 684.186 209.167 683.311 208.876 cv
682.24 207.417 682.144 205.862 679.128 205.765 cv
676.113 205.667 671.737 204.89 668.528 204.306 cv
665.319 203.722 661.43 199.249 657.345 195.263 cv
659.29 195.554 660.651 192.538 662.985 191.663 cv
664.443 190.497 662.109 189.136 661.04 189.913 cv
660.748 189.231 659.679 188.745 658.804 189.231 cv
657.929 189.718 656.858 190.399 655.399 188.649 cv
653.941 186.897 649.564 185.438 647.718 187.579 cv
647.523 187.87 644.605 184.466 641.493 181.257 cv
638.382 178.048 632.158 177.464 627.393 176.687 cv
622.627 175.909 619.224 170.853 612.708 162.683 cv
606.192 154.515 599.579 147.319 588.688 136.621 cv
577.797 125.923 573.03 120.964 573.541 119.505 cv
574.052 118.046 573.906 116.442 573.688 114.984 cv
573.469 113.525 573.688 111.118 575.219 108.857 cv
576.75 106.596 581.71 103.095 588.348 101.417 cv
594.984 99.7397 599.434 96.02 603.664 95.5093 cv
607.895 94.9995 611.905 100.469 615.553 104.043 cv
619.199 107.617 622.919 106.523 628.098 109.878 cv
633.275 113.233 634.078 113.525 639.037 113.014 cv
643.997 112.503 650.051 112.65 655.886 112.358 cv
661.721 112.066 664.492 112.358 666.242 111.264 cv
667.993 110.169 668.868 109.805 670.619 109.149 cv
672.369 108.492 676.016 107.179 677.329 106.668 cv
678.642 106.158 680.83 103.825 682.872 103.825 cv
684.914 103.825 686.373 101.125 687.978 99.1567 cv
689.582 97.187 688.415 96.312 686.674 98.062 cv
684.934 99.813 683.893 101.563 682.58 101.636 cv
681.268 101.709 682.799 100.25 683.602 99.4478 cv
684.403 98.646 685.206 96.2388 686.3 94.27 cv
687.394 92.3003 685.862 92.0083 684.622 94.1235 cv
683.383 96.2388 682.799 97.5522 679.371 100.032 cv
679.882 99.1567 681.997 94.9995 682.508 93.978 cv
683.395 92.2026 681.997 91.7173 679.298 95.728 cv
680.264 93.3472 678.496 93.7593 677.401 95.5093 cv
676.308 97.2603 675.651 98.646 674.776 99.6665 cv
673.9 100.688 671.202 101.563 669.306 102.73 cv
667.409 103.897 666.17 105.429 663.859 105.599 cv
659.062 105.953 646.646 102.487 641.882 102.292 cv
637.117 102.098 636.047 102.292 632.157 99.7642 cv
628.267 97.2358 622.821 91.7417 618.396 89.4556 cv
613.973 87.1704 612.562 86.0522 611.492 83.1353 cv
612.367 83.1353 613.923 81.2866 614.944 80.7036 cv
615.965 80.1206 617.035 79.2446 616.792 78.4185 cv
616.55 77.5923 617.57 75.9878 619.175 75.063 cv
620.779 74.1401 620.585 71.5142 621.12 68.353 cv
621.655 65.1929 619.807 63.3452 620.779 60.5737 cv
621.751 57.8022 619.467 56.8296 616.598 58.1421 cv
616.646 56.5376 614.652 56.5376 613.826 55.8081 cv
613 55.0786 612.854 54.4468 612.222 54.6899 cv
611.59 54.9331 611.298 55.8569 610.568 55.6138 cv
609.839 55.3706 608.525 53.9604 607.846 52.6968 cv
607.165 51.4321 606.192 51.8208 605.316 53.3286 cv
604.441 54.8354 604.053 54.6899 603.712 54.2036 cv
603.371 53.7183 602.982 53.7661 602.545 54.0571 cv
602.107 54.3491 601.815 54.9331 601.476 54.3491 cv
601.136 53.7661 600.163 53.8628 600.017 54.3013 cv
599.871 54.7388 598.559 55.7593 597.635 54.5923 cv
596.711 53.4253 594.328 53.8638 594.036 55.6147 cv
593.744 57.3647 593.646 58.6284 591.119 61.0601 cv
588.591 63.4917 585.09 67.8677 583.145 69.6177 cv
581.199 71.3687 578.574 72.8276 574.003 72.3403 cv
569.433 71.855 568.46 74.8696 567.196 78.2729 cv
565.932 81.6763 560.777 83.8159 559.027 85.5659 cv
557.276 87.3169 556.401 90.1372 554.846 95.1938 cv
553.289 100.251 549.545 105.356 547.503 108.71 cv
545.461 112.066 545.259 114.061 545.169 117.318 cv
545.061 121.257 545.315 121.839 545.023 128.112 cv
544.731 134.384 546.991 134.634 548.67 143.574 cv
549.885 150.041 556.402 166.573 564.085 174.548 cv
571.768 182.522 577.407 188.454 581.006 192.345 cv
584.604 196.235 587.618 197.304 594.231 196.233 cv
600.844 195.163 602.789 196.331 609.791 195.649 cv
616.793 194.97 628.073 194.774 635.075 196.138 cv
642.077 197.499 656.956 203.235 660.263 206.737 cv
663.569 210.237 663.568 212.378 667.167 213.058 cv
670.766 213.739 672.418 214.614 677.767 218.114 cv
683.116 221.616 683.019 218.114 685.645 219.671 cv
688.27 221.228 688.658 219.573 688.172 217.53 cv
688.27 217.239 688.562 215.294 686.616 214.128 cv
cp
f
583.406 759.258 mo
579.771 758.28 573.412 755.694 573.412 755.694 cv
574.831 755.727 576.795 755.23 578.731 754.734 cv
580.895 754.178 583.023 753.623 584.315 753.808 cv
586.76 754.156 587.529 753.808 588.508 756.462 cv
589.486 759.118 590.604 759.398 591.232 761.075 cv
589.277 759.629 588.149 759.633 586.746 759.636 cv
585.844 759.638 584.828 759.641 583.406 759.258 cv
695.15 724.246 mo
693.125 723.616 692.426 723.407 690.328 723.268 cv
689.141 723.128 686.625 720.472 683.969 719.563 cv
681.314 718.655 680.125 716.279 675.863 718.306 cv
671.6 720.333 663.982 723.268 656.295 725.154 cv
648.607 727.042 647.385 728.09 644.763 730.57 cv
642.144 733.052 635.82 733.89 631.766 734.624 cv
627.713 735.357 627.887 735.392 623.94 733.995 cv
619.99 732.597 616.881 732.527 613.107 734.064 cv
609.334 735.602 607.9 729.837 607.062 728.334 cv
606.223 726.831 605.49 724.036 606.607 722.884 cv
607.727 721.729 609.402 716.839 609.928 714.847 cv
610.451 712.854 608.529 707.368 607.131 706.39 cv
605.734 705.412 602.799 703.771 601.121 704.154 cv
599.445 704.538 594.273 704.853 591.094 705.167 cv
587.914 705.481 587.285 705.762 586.516 707.368 cv
585.748 708.976 586.656 709.71 587.635 711.073 cv
586.621 712.471 587.32 715.37 587.006 716.175 cv
586.692 716.977 587.25 717.222 587.844 717.606 cv
588.437 717.991 587.809 718.795 587.32 720.123 cv
586.83 721.45 586.027 722.289 586.062 722.987 cv
586.096 723.687 587.041 723.861 587.424 723.932 cv
587.809 724.001 587.984 724.84 587.773 725.119 cv
587.564 725.399 588.012 725.918 588.465 725.953 cv
588.918 725.987 588.314 726.298 588.42 726.962 cv
588.475 727.318 588.688 727.305 588.916 727.292 cv
589.113 727.28 589.322 727.269 589.451 727.495 cv
589.73 727.985 588.928 728.3 588.892 729.138 cv
588.892 731.829 592.91 730.885 595.076 729.977 cv
595.846 730.046 596.545 734.03 595.217 735.147 cv
593.889 736.267 591.373 737.874 588.578 737.733 cv
585.783 737.595 584.523 737.663 581.308 738.991 cv
578.096 740.319 576.348 742.835 570.897 744.372 cv
565.445 745.91 562.092 744.513 555.453 745.98 cv
548.812 747.448 546.787 748.357 546.367 751.78 cv
545.947 755.204 549.232 755.554 554.684 758.35 cv
560.135 761.145 564.049 761.215 569.568 762.192 cv
575.09 763.171 579.072 763.171 580.82 764.989 cv
582.568 766.806 582.986 767.085 585.152 766.876 cv
587.32 766.665 591.793 769.601 594.727 773.724 cv
596.545 776.17 594.867 781.481 595.217 783.577 cv
595.566 785.675 593.539 784.276 587.391 781.481 cv
581.24 778.686 570.967 776.659 567.543 775.472 cv
564.117 774.283 560.764 771.487 557.199 770.229 cv
553.635 768.972 551.818 769.88 548.953 768.483 cv
546.088 767.085 539.938 762.752 533.998 761.005 cv
528.057 759.258 521 754.296 515.687 751.361 cv
510.377 748.427 511.914 748.146 506.113 746.819 cv
502.961 746.097 499.266 745.771 496.051 745.7 cv
492.836 745.63 491.719 746.329 489.762 746.608 cv
487.805 746.889 488.713 748.636 490.25 748.775 cv
490.74 749.754 490.74 749.754 491.787 750.173 cv
491.648 750.802 492.348 751.431 493.815 751.571 cv
494.164 751.92 493.885 753.108 498.217 753.808 cv
502.551 754.506 503.908 755.757 505.484 759.328 cv
506.812 762.333 512.334 760.936 512.963 758.56 cv
515.238 759.472 526.172 767.435 529.525 770.3 cv
532.879 773.165 535.058 775.438 540.09 778.372 cv
545.123 781.307 552.125 780.347 556.92 783.019 cv
560.457 784.989 563.908 787.981 570.059 793.222 cv
576.209 798.464 585.606 800.218 592.244 803.782 cv
593.478 804.689 592.84 819.033 594.053 828.071 cv
595.264 837.11 598.99 847.546 599.828 853.882 cv
600.668 860.218 601.041 864.97 602.531 868.79 cv
604.021 872.61 606.351 875.033 606.537 880.624 cv
606.725 886.215 609.24 899.726 611.477 912.398 cv
613.713 925.069 612.875 928.331 613.525 932.339 cv
614.178 936.345 615.576 938.396 616.975 942.961 cv
618.371 947.526 619.676 947.434 621.633 947.153 cv
623.59 946.874 623.404 946.13 622.75 945.29 cv
622.098 944.452 620.607 944.265 621.818 942.961 cv
623.031 941.656 623.404 939.327 622.471 937.743 cv
621.539 936.159 621.633 932.618 624.801 927.96 cv
627.969 923.301 625.641 920.784 621.354 918.455 cv
617.066 916.126 619.303 897.956 620.234 890.967 cv
621.166 883.978 620.514 876.151 617.812 872.89 cv
615.111 869.629 615.717 866.46 613.945 862.827 cv
612.176 859.192 611.383 849.222 612.223 841.021 cv
613.06 832.821 613.619 827.884 612.408 821.734 cv
611.197 815.585 608.682 812.882 613.34 810.18 cv
618 807.477 619.863 802.073 619.676 796.856 cv
619.49 791.638 617.16 788.283 617.719 784.556 cv
618.279 780.828 618.279 779.151 617.627 774.493 cv
616.975 769.834 617.51 762.403 620.514 756.323 cv
623.519 750.243 620.863 748.007 625.127 747.168 cv
629.391 746.329 639.383 741.997 645.045 738.852 cv
648.082 737.163 651.404 736.825 654.549 735.847 cv
657.693 734.868 660.838 732.842 665.381 729.977 cv
669.922 727.111 675.234 723.547 676.701 723.057 cv
678.17 722.569 679.217 723.198 679.637 724.665 cv
680.057 726.133 680.057 727.81 681.732 728.509 cv
683.41 729.208 684.318 730.395 685.088 732.562 cv
685.857 734.729 686.695 735.357 687.395 733.819 cv
688.094 732.282 686.904 730.395 685.857 728.579 cv
684.809 726.762 685.717 726.133 687.603 726.831 cv
689.49 727.53 690.328 727.95 690.678 729.558 cv
691.027 731.165 691.588 732.143 692.355 732.212 cv
693.125 732.282 692.846 731.095 692.496 729.417 cv
692.147 727.74 691.656 727.53 690.328 725.784 cv
691.168 725.573 693.684 725.364 695.361 726.064 cv
697.039 726.762 699.553 727.111 699.764 726.343 cv
699.973 725.573 697.178 724.875 695.15 724.246 cv
f
411.315 777.215 mo
408.589 773.721 404.885 772.322 405.025 769.457 cv
405.165 766.592 407.751 760.582 408.798 757.437 cv
409.847 754.293 411.105 750.729 416.556 750.239 cv
422.007 749.75 432.769 747.793 434.376 746.955 cv
429.275 752.126 415.648 767.92 411.315 777.215 cv
498.53 778.543 mo
495.315 772.463 489.656 770.646 483.015 766.452 cv
476.376 762.26 460.443 752.057 455.97 747.793 cv
451.498 743.53 447.447 740.322 446.746 740.036 cv
446.396 735.633 442.204 736.192 434.027 735.563 cv
425.851 734.935 424.103 736.752 416.207 738.918 cv
412.337 737.212 409.656 737.438 407.487 737.665 cv
406.012 737.818 404.773 737.972 403.557 737.52 cv
400.552 736.402 399.308 730.738 399.155 726.618 cv
403.138 727.527 404.396 725.709 403.976 724.312 cv
403.557 722.914 404.396 720.398 405.095 719.07 cv
405.794 717.742 405.445 715.367 405.445 714.389 cv
405.445 713.41 407.052 712.361 406.703 711.662 cv
406.353 710.964 406.562 709.146 406.143 707.26 cv
408.1 703.976 406.143 702.228 403.278 702.578 cv
401.796 702.759 399.772 702.378 397.805 701.998 cv
395.969 701.643 394.183 701.288 392.935 701.39 cv
390.349 701.6 388.113 703.416 386.505 705.023 cv
384.898 706.631 384.41 709.496 385.108 712.711 cv
384.129 713.131 385.527 717.742 386.996 717.742 cv
387.904 718.232 388.043 721.586 387.973 723.684 cv
387.904 725.779 386.715 731.16 384.479 733.467 cv
382.243 735.773 380.775 731.859 376.582 729.902 cv
371.465 727.515 370.992 728.155 368.895 725.011 cv
366.798 721.865 360.299 714.738 357.853 711.033 cv
355.408 707.33 355.617 702.088 352.052 698.734 cv
348.489 695.38 337.097 680.145 336.119 678.049 cv
335.14 675.952 336.818 676.512 338.005 674.974 cv
339.195 673.435 341.011 671.619 342.688 671.269 cv
344.365 670.92 346.392 671.269 346.742 670.57 cv
347.091 669.872 344.855 669.033 343.317 669.522 cv
341.779 670.012 339.613 670.361 338.845 669.453 cv
338.076 668.544 338.496 665.189 339.683 663.303 cv
341.29 663.373 343.947 662.534 344.435 661.695 cv
344.924 660.857 342.898 660.996 341.081 661.066 cv
341.29 660.229 343.597 659.6 345.064 658.69 cv
346.532 657.782 345.484 656.943 343.248 658.062 cv
341.011 659.18 340.732 658.551 339.474 660.017 cv
338.216 661.486 338.286 661.625 336.888 661.556 cv
335.49 661.486 336.468 663.232 335.001 663.443 cv
333.533 663.652 332.765 666.098 331.925 668.964 cv
331.087 671.828 330.203 672.807 330.668 677.467 cv
331.134 682.125 335.234 688.555 339.054 696.009 cv
342.875 703.463 343.994 709.799 350.888 716.881 cv
357.785 723.963 357.412 729.181 361.417 733.467 cv
365.423 737.753 368.275 742.9 369.431 749.4 cv
370.177 753.594 371.287 754.299 373.065 760.769 cv
375.086 768.119 376.527 772.091 380.435 777.283 cv
384.082 782.131 385.923 788.443 386.203 793.66 cv
386.482 798.878 389.65 801.115 389.464 809.594 cv
389.279 818.074 391.141 836.896 392.446 843.512 cv
393.75 850.127 393.564 855.252 393.564 860.656 cv
393.564 866.06 396.173 871.093 396.359 874.633 cv
396.545 878.174 396.079 886.001 395.615 892.616 cv
395.148 899.232 396.36 910.228 396.36 919.639 cv
396.36 929.051 397.384 931.752 398.689 937.715 cv
399.994 943.679 402.137 943.679 403.628 945.915 cv
405.119 948.152 405.865 948.711 408.752 948.338 cv
411.64 947.965 411.082 946.195 409.497 945.543 cv
407.914 944.89 407.355 944.61 408.287 942.653 cv
409.218 940.697 407.728 939.486 405.677 936.783 cv
403.626 934.082 408.939 929.795 409.312 926.254 cv
409.684 922.713 407.169 922.061 404.745 921.222 cv
402.324 920.384 405.119 902.865 408.66 890.658 cv
412.201 878.452 407.169 873.422 407.261 870.72 cv
407.355 868.018 406.05 862.426 405.677 856.836 cv
405.304 851.244 407.169 840.902 408.752 833.168 cv
410.336 825.434 410.476 823.408 409.148 812.576 cv
407.82 801.744 414.25 803.281 420.819 796.363 cv
427.388 789.444 430.045 784.622 432.07 778.123 cv
434.097 771.623 439.967 761.211 441.924 758.625 cv
443.88 756.039 445.767 753.315 446.396 755.97 cv
447.025 758.625 450.101 762.818 456.111 764.076 cv
462.121 765.334 468.41 767.221 473.302 769.807 cv
478.194 772.393 479.172 774.279 478.194 776.865 cv
477.216 779.451 479.662 782.875 484.274 782.106 cv
488.886 781.338 491.262 781.897 492.87 782.945 cv
494.476 783.993 493.988 786.439 495.315 787.906 cv
496.644 789.374 498.386 789.707 498.386 790.476 cv
498.386 791.244 498.11 790.492 499.298 792.449 cv
500.487 794.406 501.884 792.379 501.814 788.745 cv
501.744 785.111 501.744 784.622 498.53 778.543 cv
f
936.565 145.833 mo
931.854 143.477 927.365 141.195 922.947 138.766 cv
918.531 136.337 915.293 136.484 912.938 134.128 cv
910.581 131.773 906.974 130.228 902.705 130.668 cv
898.437 131.11 896.964 134.202 896.007 131.405 cv
895.05 128.607 891.369 123.087 890.56 120.731 cv
889.75 118.375 889.97 113.959 890.633 110.941 cv
891.296 107.923 889.087 104.243 887.688 102.697 cv
886.29 101.151 884.302 101.888 883.198 100.636 cv
882.094 99.3848 877.383 98.2803 874.879 99.6055 cv
872.378 100.93 869.064 102.034 866.636 102.624 cv
864.206 103.212 864.869 107.408 867.298 109.542 cv
866.562 111.383 867.961 114.548 867.888 115.8 cv
867.814 117.051 869.801 118.155 870.096 118.744 cv
870.391 119.333 870.242 121.1 871.42 122.645 cv
872.598 124.191 874.438 125.148 875.248 128.166 cv
876.059 131.184 878.139 131.653 879.738 131.11 cv
880.548 131.92 882.094 133.466 878.414 131.773 cv
874.732 130.08 870.832 131.7 869.433 129.712 cv
868.034 127.725 866.342 124.118 859.128 118.375 cv
851.914 112.634 851.987 109.837 853.46 107.776 cv
854.933 105.715 858.907 94.3052 860.379 90.8457 cv
861.851 87.3857 864.427 84.5151 866.269 84.5889 cv
868.108 84.6621 869.064 84.957 870.684 83.5581 cv
872.304 82.1597 873.334 80.3926 876.721 80.3926 cv
880.106 80.3926 880.989 79.1416 879.224 78.332 cv
877.457 77.522 875.542 78.479 872.893 79.0684 cv
870.242 79.6572 871.715 77.8169 873.113 76.271 cv
874.512 74.7251 875.688 75.167 877.751 75.314 cv
879.813 75.4614 880.843 74.3574 879.813 74.0625 cv
878.781 73.7681 878.192 73.3999 876.352 73.2529 cv
877.53 72.0015 879.224 72.5898 881.432 71.8809 cv
883.64 71.1714 883.787 69.8667 879.37 69.9399 cv
874.954 70.0142 873.997 71.8809 872.598 71.1182 cv
871.2 70.355 871.2 72.5166 869.507 71.8809 cv
867.814 71.2451 867.592 73.6211 866.782 73.5469 cv
865.973 73.4736 865.386 73.7681 864.501 75.6084 cv
863.617 77.4487 862.489 79.019 861.213 80.1968 cv
859.938 81.3745 859.349 81.2764 857.876 84.5151 cv
856.404 87.7539 848.455 97.1763 845.313 102.28 cv
842.173 107.384 840.209 108.954 842.467 113.076 cv
844.726 117.198 851.104 127.013 854.244 131.43 cv
857.386 135.846 862.686 139.87 866.316 144.09 cv
869.947 148.311 872.598 153.12 873.58 157.831 cv
874.563 162.542 877.996 165.879 878.979 170.001 cv
879.96 174.123 877.407 176.283 875.739 177.068 cv
874.07 177.854 872.893 180.699 870.438 180.896 cv
867.985 181.092 864.06 183.055 861.213 185.705 cv
858.367 188.355 854.049 188.158 846.785 191.299 cv
839.523 194.44 831.377 199.838 826.764 202.685 cv
822.15 205.53 821.562 206.021 813.906 205.53 cv
806.251 205.04 800.853 207.297 796.829 209.554 cv
792.805 211.812 781.984 216.204 776.536 218.56 cv
771.089 220.915 766.82 220.546 764.538 220.841 cv
762.256 221.136 756.661 220.105 754.38 220.694 cv
752.099 221.283 751.51 222.534 750.553 222.534 cv
749.597 222.534 748.934 224.153 748.344 224.301 cv
747.755 224.448 747.388 225.479 747.24 226.141 cv
747.093 226.804 746.283 226.656 745.988 227.687 cv
745.842 230.116 746.725 229.675 750.92 231.735 cv
755.116 233.796 755.631 230.043 759.386 230.264 cv
763.14 230.484 765.274 228.497 769.249 228.644 cv
773.225 228.792 775.212 226.877 777.936 225.037 cv
780.658 223.197 791.185 221.872 797.958 221.43 cv
804.729 220.989 806.496 220.4 809.44 218.633 cv
812.386 216.866 817.832 215.247 820.776 215.541 cv
823.722 215.836 826.371 214.805 829.021 213.48 cv
831.672 212.155 836.383 214.659 845.951 212.008 cv
855.52 209.358 856.256 206.855 857.729 206.855 cv
859.201 206.855 869.064 205.384 874.365 204.206 cv
874.365 204.206 877.015 205.53 878.684 206.021 cv
878.193 210.34 881.039 220.252 883.296 226.632 cv
885.554 233.012 889.97 237.231 889.97 242.237 cv
888.204 240.177 884.965 239.588 881.137 239.98 cv
877.31 240.373 870.438 241.158 866.709 240.569 cv
862.979 239.98 862.194 239.391 863.177 236.741 cv
864.157 234.091 862.293 233.208 860.33 232.62 cv
858.366 232.03 856.601 233.895 854.343 233.502 cv
852.086 233.109 851.595 230.95 851.006 229.871 cv
850.416 228.792 849.435 229.381 849.141 228.301 cv
848.848 227.22 848.553 227.908 848.258 227.024 cv
847.963 226.141 847.276 225.553 846.491 226.828 cv
845.705 228.104 845.019 228.006 845.313 229.871 cv
845.607 231.735 845.313 235.073 847.571 236.839 cv
849.829 238.606 852.185 240.373 853.656 241.845 cv
855.128 243.317 857.483 246.262 860.722 246.751 cv
863.961 247.243 868.28 247.931 873.874 249.893 cv
879.469 251.855 888.204 255.095 890.363 254.997 cv
892.522 254.898 894.975 257.058 898.607 258.138 cv
902.239 259.218 906.165 253.23 905.575 249.5 cv
904.987 245.771 904.546 243.808 904.104 234.365 cv
903.661 224.922 901.306 218.338 898.95 207.297 cv
896.595 196.256 897.11 193.753 898.95 191.397 cv
900.791 189.042 900.423 188.526 901.306 184.772 cv
902.189 181.018 902.705 177.706 903.956 174.908 cv
905.207 172.111 906.46 169.608 906.606 167.695 cv
906.753 165.781 907.489 161.07 907.196 153.856 cv
907.931 153.709 915.366 154.887 920.298 156.506 cv
925.229 158.125 928.542 157.61 933.106 156.8 cv
937.67 155.991 941.718 156.358 941.866 153.12 cv
942.013 149.881 941.276 148.188 936.565 145.833 cv
cp
f
460.814 462.398 mo
453.229 467.059 448.751 468.521 447.747 470.623 cv
446.741 472.724 445.919 472.541 444.548 473.272 cv
443.177 474.004 440.892 475.465 440.069 477.385 cv
439.247 479.304 438.608 479.761 437.876 482.228 cv
437.145 484.696 436.505 484.514 434.403 487.072 cv
432.302 489.631 431.022 488.717 431.937 487.346 cv
432.851 485.976 434.679 483.965 434.77 483.143 cv
432.577 484.057 430.474 485.061 429.194 485.976 cv
427.917 486.89 427.368 485.244 429.013 484.239 cv
430.657 483.234 433.856 481.132 434.952 480.035 cv
436.05 478.939 436.05 477.385 434.77 476.928 cv
433.491 476.471 432.028 476.837 429.835 477.476 cv
427.642 478.117 426.179 477.751 427.733 475.923 cv
429.286 474.095 432.485 475.283 434.038 473.089 cv
435.593 470.896 437.694 469.709 439.796 470.074 cv
441.897 470.44 444.548 468.247 446.101 465.871 cv
447.655 463.495 456.518 454.173 458.255 452.346 cv
458.073 449.513 458.712 448.325 459.899 447.594 cv
461.089 446.863 460.724 445.95 461.362 445.583 cv
455.239 447.868 449.3 446.588 440.161 448.783 cv
431.022 450.975 425.448 451.25 423.073 455.453 cv
420.696 459.657 420.057 459.108 419.601 461.575 cv
419.143 464.043 418.138 464.317 415.395 466.693 cv
412.655 469.069 412.106 467.698 413.02 466.602 cv
413.934 465.504 415.671 463.403 415.944 461.85 cv
416.22 460.296 413.202 463.221 410.919 464.5 cv
408.634 465.78 404.98 466.603 407.263 464.226 cv
409.548 461.85 413.02 460.753 413.751 458.925 cv
414.481 457.098 412.198 459.565 408.726 461.027 cv
405.253 462.49 406.441 459.748 408.542 458.652 cv
410.643 457.554 415.944 455.453 417.132 452.986 cv
418.319 450.518 415.853 450.518 413.659 450.883 cv
411.466 451.25 409.612 448.877 413.659 448.599 cv
417.946 448.303 417.995 448.083 420.88 446.771 cv
421.719 446.389 422.349 446.561 423.125 446.733 cv
424.208 446.974 425.575 447.214 428.191 445.949 cv
433.856 443.207 446.558 437.999 453.046 436.263 cv
459.534 434.526 464.378 435.257 471.415 433.337 cv
474.417 432.519 476.703 432.715 478.565 432.91 cv
481.069 433.174 482.806 433.437 484.483 431.236 cv
487.407 427.398 494.626 422.281 497.003 419.722 cv
499.378 417.163 505.593 415.244 512.63 413.69 cv
519.665 412.137 527.251 409.761 532.368 412.959 cv
537.485 416.158 542.33 419.356 547.445 424.108 cv
552.564 428.861 553.203 435.44 556.129 434.343 cv
559.053 433.247 578.152 430.139 583.543 429.866 cv
588.936 429.591 590.762 427.763 593.504 426.941 cv
594.696 426.583 596.285 426.744 598.024 426.905 cv
600.284 427.114 602.796 427.322 605.018 426.393 cv
608.947 424.748 618.543 423.925 623.203 422.28 cv
627.865 420.635 633.439 418.625 639.469 414.695 cv
645.502 410.766 651.057 407.388 657.727 408.027 cv
664.398 408.667 664.594 408.932 665.697 410.4 cv
666.642 411.658 664.557 412.779 663.254 412.025 cv
663.803 412.505 662.746 413.143 661.748 413.053 cv
661.092 412.995 660.898 414.832 657.701 415.289 cv
654.502 415.746 653.943 416.529 651.943 418.716 cv
650.283 420.532 650.711 428.312 645.227 427.214 cv
641.027 426.375 640.566 423.514 635.357 426.255 cv
630.148 428.998 626.244 431.11 621.924 434.708 cv
617.264 438.591 612.603 439.917 608.309 439.186 cv
604.014 438.455 600.35 438.668 595.697 440.192 cv
591.377 441.606 590.123 440.283 584.914 443.39 cv
579.705 446.498 569.014 452.073 563.621 453.808 cv
558.228 455.544 554.758 456.732 555.031 463.495 cv
555.305 470.257 556.037 477.658 555.762 486.98 cv
555.488 496.301 553.844 507.085 554.301 511.104 cv
554.758 515.126 552.473 515.583 549.73 518.325 cv
546.99 521.065 544.248 528.925 541.598 535.962 cv
538.947 542.997 530.54 552.96 527.8 562.099 cv
525.058 571.237 520.944 577.358 519.391 579.188 cv
517.839 581.017 520.763 580.284 521.493 580.833 cv
522.226 581.38 523.321 582.661 522.499 582.935 cv
521.677 583.21 522.315 584.032 520.306 584.487 cv
518.296 584.944 514.093 585.677 512.63 582.935 cv
511.167 580.192 509.704 578.729 511.624 575.349 cv
513.544 571.968 513.636 568.952 511.989 563.651 cv
510.345 558.353 515.462 556.981 518.112 555.884 cv
520.763 554.788 525.604 546.29 526.884 540.075 cv
528.165 533.86 527.435 523.718 533.648 518.235 cv
539.861 512.751 543.061 512.934 541.324 503.34 cv
539.588 493.744 536.21 474.095 537.03 468.703 cv
537.851 463.312 533.648 461.576 532.187 457.463 cv
530.724 453.351 531.546 447.138 532.917 443.117 cv
534.286 439.095 530.54 437.451 527.708 436.902 cv
524.876 436.354 521.585 437.267 517.655 439.644 cv
513.726 442.02 512.722 444.03 506.415 445.767 cv
500.11 447.503 496.089 447.503 492.251 449.788 cv
488.413 452.073 486.128 452.529 485.306 452.621 cv
484.483 452.712 485.122 454.813 486.128 455.271 cv
487.134 455.728 485.763 456.915 484.94 457.555 cv
484.118 458.196 484.757 459.109 483.112 460.388 cv
481.468 461.667 483.112 462.581 480.189 464.867 cv
477.263 467.151 471.78 468.43 470.228 467.059 cv
468.673 465.688 467.577 464.41 467.577 464.41 cv
467.669 465.505 467.851 466.602 468.308 467.059 cv
467.028 466.694 465.567 466.054 464.196 464.501 cv
464.562 465.232 464.653 465.505 464.653 465.505 cv
463.374 464.683 461.728 464.5 460.814 462.398 cv
f
745.853 554.62 mo
744.5 552.184 745.223 540.458 745.853 537.21 cv
746.305 541.089 746.936 551.643 745.853 554.62 cv
850.481 349.802 mo
848.767 348.992 847.188 347.413 845.836 347.232 cv
844.482 347.052 843.129 346.601 842.092 345.923 cv
841.055 345.248 840.557 344.931 839.656 345.158 cv
838.754 345.382 835.732 345.609 833.25 346.015 cv
830.772 346.421 828.506 345.742 823.779 347.775 cv
818.336 350.111 808.15 352.871 805.039 353.818 cv
801.926 354.763 792.457 359.988 787.906 359.884 cv
785.248 359.824 783.183 360.352 781.445 360.881 cv
779.305 361.531 777.661 362.182 776.018 361.734 cv
773.041 360.921 763.445 359.771 761.551 360.132 cv
759.656 360.494 757.084 361.035 754.152 359.365 cv
751.221 357.697 750.59 348.089 750.5 346.103 cv
752.619 344.435 751.221 341.142 752.664 340.287 cv
754.244 339.789 755.416 334.287 754.197 334.423 cv
754.965 332.888 754.377 332.574 754.83 330.093 cv
755.279 327.611 753.926 326.529 753.295 325.943 cv
752.664 325.357 754.244 325.13 752.754 323.824 cv
751.266 322.515 747.748 322.335 746.395 321.974 cv
745.041 321.613 742.471 320.8 741.389 321.072 cv
740.305 321.343 736.473 322.65 736.473 323.732 cv
736.473 324.814 735.254 324.771 734.307 325.402 cv
733.359 326.033 732.277 327.476 732.863 328.378 cv
733.449 329.281 732.684 331.4 733.224 334.513 cv
732.006 335.326 734.172 341.279 735.389 340.601 cv
736.246 340.873 734.713 343.849 737.824 347.052 cv
738.096 350.57 737.375 355.08 735.119 357.517 cv
732.863 359.951 730.518 361.845 727.992 360.673 cv
725.467 359.501 720.685 359.32 717.527 359.951 cv
714.371 360.584 712.592 360.898 706.096 359.365 cv
703.302 358.705 701.068 358.713 699.005 358.721 cv
696.272 358.732 693.84 358.742 690.807 357.201 cv
685.484 354.494 683.049 354.269 675.65 353.546 cv
668.254 352.826 662.166 351.607 659.685 350.435 cv
658.254 349.758 657.494 349.971 656.646 350.184 cv
656.024 350.34 655.355 350.496 654.34 350.3 cv
650.957 349.644 648.139 349.712 646.83 348.992 cv
645.522 348.269 644.666 348.72 643.402 348.992 cv
642.139 349.261 640.605 349.351 637.945 349.261 cv
635.283 349.171 635.014 349.802 636.23 350.57 cv
636.971 351.035 637.81 350.985 639.073 350.934 cv
639.889 350.902 640.882 350.869 642.139 350.976 cv
641.238 351.111 639.793 351.789 637.719 352.617 cv
635.644 353.445 637.449 354.583 639.838 353.546 cv
640.561 353.998 641.553 353.591 643.133 353.005 cv
644.709 352.418 647.688 352.599 648.139 352.871 cv
648.228 354.269 644.26 353.953 642.682 354.673 cv
641.102 355.396 640.922 356.951 642.23 356.861 cv
643.537 356.771 646.691 355.58 648.27 355.986 cv
649.848 356.392 651.385 357.246 653.596 356.705 cv
655.807 356.164 656.799 355.621 657.609 355.261 cv
658.422 354.9 672.404 361.394 677.275 363.831 cv
682.146 366.265 687.289 367.078 691.889 367.078 cv
696.49 367.078 701.09 371.001 705.961 372.083 cv
710.834 373.167 714.775 372.986 719.016 375.603 cv
723.256 378.218 723.301 382.593 726.277 389.9 cv
729.256 397.208 729.346 401.357 729.436 405.597 cv
729.525 409.837 726.91 409.566 728.353 413.716 cv
729.795 417.865 728.744 421.234 727.271 426.074 cv
724.383 435.546 724.721 458.3 726.459 470.906 cv
728.984 489.22 733.135 490.302 732.773 495.353 cv
732.58 498.058 732.053 500.944 733.314 504.462 cv
734.578 507.982 734.035 511.95 733.676 516.821 cv
733.314 521.692 735.75 536.667 736.563 542.981 cv
737.375 549.296 737.014 556.333 736.832 562.017 cv
736.652 567.698 739.359 573.472 738.998 576.81 cv
738.637 580.147 740.893 580.147 741.344 582.132 cv
741.795 584.116 743.869 584.659 745.943 584.659 cv
748.018 584.659 747.309 581.946 746.225 581.673 cv
745.248 581.427 746.936 580.782 747.566 578.435 cv
747.387 582.046 749.102 582.044 748.561 582.585 cv
747.813 583.331 747.566 584.929 748.561 584.929 cv
749.553 584.929 751.627 585.108 751.988 582.763 cv
752.35 580.419 754.908 577.671 755.234 570.407 cv
755.596 562.378 754.152 559.489 753.791 552.362 cv
753.432 545.237 756.318 526.292 756.139 521.782 cv
755.957 517.272 754.334 509.604 755.326 507.171 cv
756.318 504.733 756.318 502.747 756.498 499.591 cv
756.678 496.433 755.055 492.825 757.58 488.315 cv
760.105 483.804 761.91 467.568 762.182 456.923 cv
762.451 446.279 761.234 433.38 759.949 428.578 cv
758.662 423.775 756.228 417.617 757.107 414.843 cv
757.986 412.07 757.445 413.017 756.025 406.656 cv
754.604 400.298 758.258 393.058 759.881 389.541 cv
761.504 386.023 762.857 379.324 764.955 376.347 cv
767.053 373.369 778.248 373.867 782.85 372.31 cv
787.449 370.753 797.281 366.378 801.227 365.636 cv
805.086 364.906 807.137 363.806 810.789 362.117 cv
814.443 360.425 817.465 357.562 820.711 356.074 cv
823.959 354.583 828.561 350.39 829.732 351.336 cv
830.906 352.285 833.432 353.187 835.234 352.96 cv
837.039 352.734 838.213 353.32 841.82 354.99 cv
845.43 356.658 844.393 353.953 842.723 353.14 cv
841.055 352.33 839.023 351.427 839.34 350.976 cv
839.656 350.525 842.451 351.562 843.984 352.554 cv
845.52 353.546 845.789 353.412 847.008 352.96 cv
848.586 353.908 849.715 353.095 848.451 352.103 cv
847.188 351.111 847.188 350.57 845.385 349.533 cv
846.287 349.261 847.82 350.525 850.076 351.382 cv
852.33 352.238 852.195 350.615 850.481 349.802 cv
f
79.0762 156.381 mo
77.4624 151.378 71.249 143.31 69.5547 134.595 cv
67.8604 125.88 65.7627 121.684 65.0361 117.085 cv
64.3101 112.486 65.1167 107.16 65.4395 99.8169 cv
65.7627 92.4746 67.6992 81.1777 67.2954 77.2241 cv
66.8921 73.27 68.2637 75.4492 68.2637 68.6709 cv
68.2637 61.8931 68.4253 59.7144 69.7158 59.7949 cv
71.0073 59.8755 70.0386 58.8267 71.0073 58.5845 cv
71.9751 58.3428 73.186 57.4551 73.9927 55.5186 cv
74.7993 53.582 75.5259 52.4521 76.6558 50.9995 cv
77.7852 49.5474 79.3989 49.5474 78.4307 51.4033 cv
77.4624 53.2588 77.4624 54.3081 77.3818 54.7114 cv
78.7534 52.4521 78.7534 52.4521 79.7217 50.9995 cv
80.6899 49.5474 81.8198 51.4033 80.7705 53.0171 cv
79.7217 54.6309 78.3501 57.8584 77.3818 59.6333 cv
76.4131 61.4087 77.3818 64.394 78.0273 66.4922 cv
78.6724 68.5903 79.1572 67.9448 80.5288 65.6855 cv
81.9004 63.4263 83.5947 61.9736 84.8052 61.5698 cv
86.0156 61.167 87.9521 62.2964 85.0474 64.5557 cv
82.1426 66.8154 81.3354 68.5093 80.5288 71.0913 cv
79.7217 73.6738 77.9463 74.9644 76.1714 75.6104 cv
74.3965 76.2559 74.1543 78.6763 74.3965 82.3076 cv
74.6382 85.9385 77.543 103.206 78.1079 108.128 cv
78.6724 113.05 78.1885 116.601 77.7046 119.021 cv
77.2207 121.442 79.2373 123.459 81.3354 128.624 cv
83.4331 133.788 83.5142 138.307 87.0645 140.324 cv
90.6152 142.341 92.6318 144.52 93.7617 147.828 cv
94.8911 151.136 97.1509 143.955 97.5542 141.776 cv
97.9575 139.598 98.4419 136.29 97.7153 133.304 cv
96.9893 130.318 95.2144 126.042 95.8599 121.12 cv
96.5054 116.197 97.5542 113.131 102.88 111.598 cv
108.206 110.065 111.756 110.307 115.145 109.903 cv
118.534 109.5 121.761 112.728 119.744 116.278 cv
120.955 117.811 120.631 120.877 121.277 122.007 cv
121.923 123.137 120.712 123.944 120.147 124.75 cv
119.583 125.557 119.986 127.333 120.229 128.14 cv
120.47 128.946 119.341 130.157 118.695 132.739 cv
118.05 135.321 117.646 136.128 117.727 138.145 cv
117.807 140.163 115.629 141.292 112.482 141.292 cv
112.321 144.197 111.756 147.909 113.37 147.424 cv
114.983 146.94 117.888 145.811 119.421 145.972 cv
120.955 146.134 125.231 138.791 127.652 135.966 cv
130.072 133.142 135.882 127.252 136.527 124.024 cv
137.173 120.796 138.222 110.226 140.723 103.206 cv
143.225 96.186 146.453 85.8579 145.242 83.437 cv
144.032 81.0166 141.934 76.417 141.772 73.0278 cv
141.611 69.6392 140.159 68.9531 138.827 66.9766 cv
137.496 64.9995 138.262 63.0225 139.715 64.7573 cv
141.167 66.4922 142.983 67.8643 143.467 69.3564 cv
143.951 70.8496 143.547 67.2183 142.458 65.4834 cv
141.369 63.749 140.078 62.498 139.553 61.1265 cv
139.029 59.7549 139.917 58.0195 141.974 61.0859 cv
140.885 58.3828 140.804 58.4634 140.683 57.4146 cv
140.562 56.3657 141.692 55.2764 142.862 57.7373 cv
144.032 60.1982 145.242 61.772 145.928 63.3047 cv
146.614 64.8384 147.179 66.3711 147.461 67.6221 cv
147.744 68.8726 148.228 64.6362 148.026 63.8296 cv
147.824 63.0225 146.937 61.6509 146.654 60.0371 cv
146.372 58.4233 147.259 56.2446 148.228 58.5439 cv
149.196 60.8438 149.922 62.6997 150.326 64.2734 cv
150.729 65.8467 150.003 66.9766 150.124 69.3164 cv
150.245 71.6563 150.648 77.5469 151.456 79.9272 cv
152.262 82.3076 152.827 83.3564 151.858 85.9385 cv
150.891 88.5205 151.052 93.4429 150.81 98.7681 cv
150.568 104.094 151.293 115.229 149.519 122.33 cv
147.744 129.431 145.03 129.601 143.79 133.788 cv
141.853 140.324 136.345 147.405 131.342 152.569 cv
126.339 157.733 123.214 162.271 122.084 167.92 cv
120.955 173.568 117.969 184.784 120.955 186.156 cv
123.94 187.528 126.199 191.966 128.54 190.594 cv
130.879 189.222 139.19 184.381 143.871 181.798 cv
148.55 179.216 157.05 174.429 159.551 174.106 cv
162.053 173.784 163.804 170.918 166.385 169.546 cv
168.967 168.175 173.073 167.385 174.966 165.198 cv
178.085 161.594 189.972 155.521 194.975 152.373 cv
199.977 149.226 206.11 144.143 210.547 138.172 cv
214.985 132.201 218.428 127.817 222.705 125.961 cv
226.981 124.105 230.236 121.549 231.85 120.581 cv
233.463 119.613 240.887 120.42 239.112 122.679 cv
237.336 124.938 236.772 123.809 236.126 123.89 cv
235.481 123.97 234.109 126.31 234.109 127.601 cv
234.109 128.893 232.415 130.91 230.317 131.878 cv
228.218 132.846 226.04 135.105 226.444 139.786 cv
226.847 144.465 224.561 147.828 220.93 146.618 cv
217.298 145.407 215.771 147.949 210.117 152.75 cv
201.563 160.012 197.806 167.013 193.048 171.907 cv
187.399 177.717 181.517 178.541 175.303 180.558 cv
169.09 182.575 168.186 184.569 165.523 188.2 cv
162.859 191.831 151.213 203.101 145 206.893 cv
138.787 210.686 135.237 210.847 130.96 213.833 cv
126.684 216.818 122.81 220.61 119.906 226.42 cv
117 232.23 108.797 240.218 105.65 243.93 cv
102.503 247.642 100.701 251.757 99.8135 252.645 cv
104.736 250.87 113.155 246.378 115.333 244.361 cv
117.512 242.343 115.119 241.994 114.661 239.896 cv
114.292 238.203 115.709 235.619 120.551 234.328 cv
125.392 233.037 125.069 231.342 125.796 228.76 cv
126.522 226.178 128.458 225.775 130.476 225.129 cv
132.493 224.483 131.041 223.838 131.283 221.821 cv
131.525 219.804 133.139 218.19 134.268 219.239 cv
135.398 220.288 134.833 220.53 136.286 221.337 cv
137.738 222.144 137.092 223.838 137.173 225.371 cv
137.254 226.905 136.955 230.266 134.511 233.925 cv
132.223 237.349 132.977 238.201 129.669 242.8 cv
126.361 247.399 122.084 251.111 116.517 256.598 cv
110.949 262.085 105.435 268.03 99.6255 271.258 cv
93.8159 274.485 89.27 276.099 87.5757 277.39 cv
85.8809 278.681 81.3354 278.788 78.1079 275.776 cv
75.5874 273.424 75.4453 268.218 77.1396 263.457 cv
78.834 258.696 80.6089 248.933 83.272 241.59 cv
85.9346 234.247 94.3267 220.853 96.8276 216.657 cv
99.3291 212.461 98.5796 211.696 97.3657 209.287 cv
96.4316 207.433 96.2632 206.409 95.7788 204.069 cv
95.2949 201.729 94.811 198.824 92.5518 195.758 cv
90.292 192.692 88.5977 192.208 87.0645 187.931 cv
85.5313 183.654 82.9492 181.314 82.2231 176.15 cv
81.4966 170.986 80.2866 166.791 80.2061 163.401 cv
80.125 160.012 79.6411 158.398 79.0762 156.381 cv
cp
f
763.029 976.241 mo
754.343 976.241 li
755.157 971.415 754.665 970.081 752.262 968.154 cv
749.551 965.981 749.123 963.298 752.117 961.763 cv
755.113 960.229 756.111 957.93 755.969 955.245 cv
755.826 952.562 756.254 950.261 757.537 948.728 cv
758.822 947.194 755.541 946.682 756.682 946.044 cv
756.836 945.957 756.935 945.857 756.997 945.748 cv
757.072 945.887 757.247 945.972 757.604 945.972 cv
757.671 945.972 757.744 945.969 757.824 945.963 cv
757.93 945.955 758.039 945.951 758.152 945.951 cv
758.498 945.951 758.873 945.984 759.257 946.017 cv
759.642 946.051 760.036 946.084 760.421 946.084 cv
761.365 946.084 762.25 945.884 762.793 944.994 cv
762.995 945.292 763.15 945.677 763.242 946.171 cv
763.813 949.238 765.525 948.728 765.953 955.117 cv
766.381 961.508 766.381 965.854 763.67 973.905 cv
763.435 974.606 763.223 975.392 763.029 976.241 cv
757.03 944.994 mo
756.964 944.695 756.88 944.421 757.042 944.262 cv
757.116 944.494 757.078 944.751 757.03 944.994 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[18.72 0 0 33.12 748.32 23.2001 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 69 
/M[39 0 0 -69 0 69 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
Mu`SRQ3-FZ`sCB*n.,("p^Q^&lODPZ!#40$!#40$g)'>ukSX"2rYao:g)\-RmiI]=q'=ZEpaY;QpaY;Q
s"W:`qCge[qCge[of)"lr&*@gr&*@glTXf%r]8jqr]8jqiC*N1!'f4%!'f4%g.M?3[R8bFp.>9Tkt(hE
p.=F<s$tdDpeC?RnP&^Pj%S02qGQKRqbd2fiDJ<;r)_cVrDru#hcAHDn6>3^o3;2ulWW"YnmL]hnmM6"
nmC*ko47&po475ur+"H)k\0R#k\0R#r-[CLl>6!+l>6!+nq$%Vlu;E3lu;E3k_A\`qK;"DqK)LUk]HZB
hM_>jr-@LNpilX]k]llHg5u;^rd=!YpNumfkC!#Ng6M8\s+'fnomcRaoRQUag7%\fo7Qahs+9osk_&ne
g7ISconNO%reB]oonWL#g8!tln;@(#nr*!pg8Fe/oT/F#qN1H4rf?K-g8t49k`Y_'r0-H0rf[&=g9C+5
op,68nWrj5pltfCg9^jKoU4p1!1NPJka;1Uije3BopbuMka_=8s-hZSpRhMZoq1oKrLNYToq1oKrLMZX
pnIJUoV)/TpnI#Hqk2Z\mA9QQs.oLdmA9KOqP2cbr2B7cm%sc]rM]@dm&&LZrN#1_p8S"kqPs%bp8Qck
s/u$sorRhe!iiE+or\(lr2fRl!34c#kcaZ^s/kLgql]h!s/k#)pTjFros"CupTjFros"Cus4?&Xm'QGl
qm,Rqos=P$p"JQ^qR?.+osOV&qR?.+osOV&leV'dr42%$pp^13kd^DsiSaRjrk.p9oXab,rk.p9oXab,
g>i1Gp:^.3oXj_.ot9q/g?&"B!5A0@o"F_2otL"1g?A:IotURBn\=h7ot^(3g?SLNke[/4q82.-g?e^T
oY^(5rP\`SoY^(5g@"pZoYp.7rPnTNrl+3Ag@5*^ou?78rl=]Opr2gCg@>6couQ=:!6OoTm)T%Eg@Y*]
jiR5=jiRGohtHfejN7/=jN6uel1b"tilh/AilgQ]oD/:.i6;)Ci6:'SrVHK<hTc#EhTadOs3LYhiQ_ML
cd1ClgALKdmEY^Ug<SFNkKitMr6F$BgA^'WrQbDfg<\LPj3[SIqU"3JgAg6\pWr?Uld4Ack0WeIk0WeJ
gAgB`o?Z4=s3TL"J,~>

%%EndBinary
grestore
np
760.421 946.084 mo
760.036 946.084 759.642 946.051 759.257 946.017 cv
758.873 945.984 758.498 945.951 758.152 945.951 cv
758.039 945.951 757.93 945.955 757.824 945.963 cv
757.744 945.969 757.671 945.972 757.604 945.972 cv
757.247 945.972 757.072 945.887 756.997 945.748 cv
757.128 945.516 757.086 945.246 757.03 944.994 cv
757.078 944.751 757.116 944.494 757.042 944.262 cv
757.134 944.171 757.305 944.117 757.605 944.117 cv
757.672 944.117 757.745 944.12 757.824 944.125 cv
757.93 944.132 758.041 944.136 758.154 944.136 cv
758.5 944.136 758.874 944.106 759.258 944.076 cv
759.642 944.047 760.036 944.017 760.419 944.017 cv
761.364 944.017 762.25 944.196 762.793 944.994 cv
762.25 945.884 761.365 946.084 760.421 946.084 cv
level3{
gsave
clp
[-1.40854e-6 -32.2236 32.2236 -1.40854e-6 758.104 976.241 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0158103 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.40854e-6 -32.2236 32.2236 -1.40854e-6 758.104 976.241 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
110.269 975.53 mo
102.381 975.53 li
102.02 970.772 99.7631 969.278 96.3349 967.538 cv
92.2959 965.486 98.625 959.332 100.375 954.868 cv
102.126 950.403 98.3554 948.955 99.9716 946.541 cv
98.8823 946.187 98.1569 945.114 99.4557 944.619 cv
99.8661 944.794 100.479 944.904 101.347 944.904 cv
101.467 944.904 101.592 944.902 101.722 944.897 cv
102.37 944.876 102.901 944.788 103.348 944.619 cv
105.682 945.412 105.72 948.203 108.32 954.989 cv
110.838 961.561 110.33 967.177 110.269 975.53 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[19.68 0 0 32.64 91.68 23.6801 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 41 
/H 68 
/M[41 0 0 -68 0 68 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLZ.q#e).fECjQoE`MEfF.3ZkRQ5UfFmQbm1\(cfGXZ*ll#:1fG`BbjW=%8fHAfon0@KLpa"K<fIku.
r$^2IfJMtIm4JAkfJ(r>fJ<F`gGRVKlSn5kqE!LpfLOa[r&sa<j$20jog%S(njMY/fM_c<ksb,3mRc_9
fNIf;kXtkJl;$eCfO*`8oM=UJo2F:QrDDcVoi'jOpK-!^n5edThH]q_fPohSpKZE\s'aQ'qHiAmpgD`c
s*NIHpgWJtq./,lqgdORlY#X!fP^G<ieH`6mqgWso8Dahokru3rG^D4muZgroQ'/:rcHe=l]pn'o6'8?
s**+DkF(n/rHS$]k^!5UfR`(Sp7D20l$`5RfS/4XqP3q;l%&JYfSJ:[rhoUFl%JebfSnIa!/C?)l%f%i
fT=aipke3lqMX!ifX1U9qi'`uqi9<pfXUa<rf?`6muc7jfXq3Hp6#E=oonp1fU^[0s-32As-EDFnsA"%
fYd]TopGZFqO-rDfV@*>nXB9CrL<GLfV[<Dn=B9E!1rkUfW!NKqOdJSo:brQfW3ZPq4[JUoqVJ]r1quJ
rR9QOpnRMXoqhM^!2eDQr79]UpSR2QqPaD"gU$e1hV.\%or7VaqlBS$hmN=9hq\:3p8[edorS(np:'(k
q;:,goW7_fore7so"+"qpu:8mriPjrorn%ms0;")lb)rPj5p6Cos"+oos+S(lFu`$p#kE"qm#k#os==u
k.pT(o]bK&qQfh$osFG#ikbB*oBYQ*q6]k'osXV(hS]6.o'PW.ppKh(oXFY+g;O$0naG]2pUBh*ossq1
fZ*s]naYo8p:0e+ot(%4fZ<s]o^hD@!4_^4p:Bq/r4L\(p[n4Pm.LCilFZ`%rOpk+oCi%SmJ$Ukot0q1
oY(:=fZWaXrV,aTr4D[8otC%4!5I11lhLMTnG2sop:^.5otT/(kkP5To(r3rlFuu,fZiUUrVQ<cq7ZI8
p:p@;fZrXVqY^3fpq?@7p:pC<fZrUUp\b$gpV-=8ot^F?f[&XVp&+m)p:g78ot^I@f[&RTp\b**otL.7
ot^LAf[&OSq#13*!5A3AotU49rP@.4i;EELJ,~>

%%EndBinary
grestore
np
101.347 944.904 mo
100.479 944.904 99.8661 944.794 99.4557 944.619 cv
99.8666 944.462 100.48 944.363 101.349 944.363 cv
101.468 944.363 101.593 944.365 101.722 944.369 cv
102.37 944.389 102.901 944.467 103.348 944.619 cv
102.901 944.788 102.37 944.876 101.722 944.897 cv
101.592 944.902 101.467 944.904 101.347 944.904 cv
level3{
gsave
clp
[-1.36235e-6 -31.167 31.167 -1.36235e-6 102.681 975.53 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.36235e-6 -31.167 31.167 -1.36235e-6 102.681 975.53 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
883.556 975.53 mo
874.435 975.53 li
873.874 972.901 873.336 970.569 872.888 968.929 cv
871.827 965.053 869.532 964.102 869.532 961.727 cv
869.532 959.354 869.179 956.902 867.944 954.766 cv
866.707 952.631 864.501 951.287 863.178 948.675 cv
863.096 948.513 863.023 948.361 862.959 948.219 cv
863.167 948.421 863.421 948.585 863.619 948.841 cv
863.968 949.289 864.486 949.625 865.206 949.625 cv
865.76 949.625 866.432 949.427 867.237 948.929 cv
867.573 949.319 868.121 949.604 868.724 949.604 cv
869.073 949.604 869.441 949.508 869.798 949.282 cv
870.502 948.833 870.741 948.71 871.496 948.71 cv
871.781 948.71 872.139 948.728 872.623 948.752 cv
872.669 948.754 872.712 948.755 872.755 948.755 cv
874.17 948.755 873.985 947.515 875.155 947.043 cv
875.313 947.1 875.497 947.145 875.713 947.173 cv
877.566 947.409 876.329 949.468 876.241 951.287 cv
876.152 953.107 875.271 955.163 876.683 956.585 cv
878.095 958.01 878.271 959.354 877.92 963.312 cv
877.709 965.669 880.419 970.752 883.556 975.53 cv
862.581 947.043 mo
862.525 946.609 862.63 946.345 862.804 946.143 cv
862.68 946.502 862.609 946.797 862.581 947.043 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[22.56 0 0 30.72 861.6 23.68 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 64 
/M[47 0 0 -64 0 64 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
dL+D1i!o8eUCci-jV6,XdMDa"W#OJ2p`.^+dNIctl64S)fd?PApF"`DdP1GIh^eXUdOim+j=p$VdPB66
nhobkp,(2VdR+!rrB&UldQHDZoLe"*oKL\hm82qAmmQ5(dRO+7fiA)Qn4D_4s$td9q+K4Bs'+MXn4`%B
lVQ,@raFkcmnrdYiDohUenG"poN1*Ss&K%uf38)Tf5CM'j'24]qc_WZqd.osqfD:7pg<>ng10qfg3NL=
s((G+l=8R^ph/H5rdX]ll=fd%pL`2spM9,JkC`VIjD4I(h/N(+qM<g\qf(V7okrW.r,_^UdZ+0Hj`C$6
kBQiJo68WGrcmLJo6(+VomH.SnpAfOs*WmSo6UF^idgQKd[U;fnpg4ZoR?dfdY-&Bn:L@co7?gidYH8I
reC0%jb<SbdYlq]p8[;4o8*6ukE"til`THSp5S0mq2=I#l]U24o<[\Co8i[,l'CV"m^M;el]^q'p6!dk
r4CRmqNpf>o9K!5m%*X9pmg]ckJ$h^o9o3;oU"s<rL`AImDJ)'rLDr<oU5cJpS-H;m`+A-rh&8Cp7;5S
s.&SUj/)7fj2phcoUu8Yo:Z)TnYtNHn]p.=ntblPo:l2WnuL`Lo$QFC!2fCck,%sNo<.#Ro@30Vo[EK4
jf&$Ros*AXp"9)lk1B=.o;hJ_q5MfKqqM&'h:hV+o<%VcpoF.tjL+fkpYO]]pos@noWInippfk'laQZI
gY_k5o!.hkorn5'rOLapqW$8gqm>t$l*C;od_,J>f]E%>o<n;!rj;=(!4)O:f=h+GfB<.CoXFk0oX=D"
rj;[@e\M1Mea!1Go""D&oXFe-s2*:%s6\b2p$;[jo=FP(n$iA9e&)1SmI'0*o=X\,oXaq1d_u"Og$n.;
oXt%4fuEm.ddm+Ho=jk1pq5e2m)[WIpV?C8oY1(5ouZ(4de3COo>("5pqHdBd`U#4q82d?pV?aCotSqu
deN^Wp;6gGoYL18!5Ht+deWm\s2=NHoYU7:s1m(-h>6jArP\<FoYU7:rkQt,lhfoCs2FTJo>C4;rP?q-
i;E3E!6+QJoY^=<qn^_+mel2Eo>U@?oY^OBda.jifDYB]o>L:=q81n4ps7Cep;Q[Bo>C@?l-JY@df&pZ
oYgC>p;6RMgs=FIJ,~>

%%EndBinary
grestore
np
865.206 949.625 mo
864.486 949.625 863.968 949.289 863.619 948.841 cv
863.421 948.585 863.167 948.421 862.959 948.219 cv
862.735 947.723 862.62 947.342 862.581 947.043 cv
862.609 946.797 862.68 946.502 862.804 946.143 cv
863.028 945.881 863.368 945.722 863.619 945.432 cv
863.967 945.03 864.486 944.729 865.205 944.729 cv
865.759 944.729 866.432 944.907 867.237 945.353 cv
867.573 945.003 868.121 944.748 868.724 944.748 cv
869.074 944.748 869.442 944.833 869.798 945.036 cv
870.502 945.438 870.741 945.548 871.495 945.548 cv
871.78 945.548 872.138 945.532 872.623 945.511 cv
872.668 945.509 872.712 945.508 872.754 945.508 cv
874.17 945.508 873.985 946.62 875.155 947.043 cv
873.985 947.515 874.17 948.755 872.755 948.755 cv
872.712 948.755 872.669 948.754 872.623 948.752 cv
872.139 948.728 871.781 948.71 871.496 948.71 cv
870.741 948.71 870.502 948.833 869.798 949.282 cv
869.441 949.508 869.073 949.604 868.724 949.604 cv
868.121 949.604 867.573 949.319 867.237 948.929 cv
866.432 949.427 865.76 949.625 865.206 949.625 cv
level3{
gsave
clp
[-1.34639e-6 -30.8018 30.8018 -1.34639e-6 873.061 975.53 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.34639e-6 -30.8018 30.8018 -1.34639e-6 873.061 975.53 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
939.459 967.196 mo
930.775 967.196 li
933.283 962.302 934.293 956.998 937.085 952.05 cv
940.064 946.768 942.447 945.524 943.903 943.803 cv
944.526 943.068 945.208 942.756 945.992 942.648 cv
946.24 942.686 946.498 942.701 946.768 942.701 cv
947.095 942.701 947.439 942.679 947.801 942.648 cv
948.409 942.694 949.07 942.762 949.795 942.795 cv
952.443 942.913 951.98 944.574 950.523 944.988 cv
949.067 945.405 949.067 946.414 947.81 948.787 cv
946.552 951.159 947.015 954.483 947.677 957.094 cv
948.339 959.704 949.995 960.416 947.611 962.611 cv
945.228 964.806 943.572 963.323 941.255 964.331 cv
940.672 964.585 940.064 965.659 939.459 967.196 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[23.04 0 0 25.92 930.24 32.32 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 48 
/H 54 
/M[48 0 0 -54 0 54 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 48 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 48 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 48 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&hZ3NTf)aA&c2uB!jU(;\d0n>4p(6!jd1kg\mhP^7dMMs#cQ29jl5\1nd3\i<qBFT:d3[KupaslB
eLg_NlSdoaeh?qRd51\aeiq\Cq_[+iq`=U7d72bMqE"%0j?V*ffg,?ts$ka4q*i\2i(!T5pdNS(d9ZZD
p.O^EpI`h2f4=eh!+Z"+hbj)Dd9,FFp2'S@s&[ZMd9cHdk&^?=oj$<WhIQCkrF=Q-pj(b)o3^WoqJ#P7
d=:(cnmqK4h/<70d>%F2iG&7)rb0f&rc6DFq/>e@m;Dl>id($<d?FEJl>uE7j*pHFgR7f(qfpq@qf_%Q
oRcskm%=!DnXeiioR$F\jbWPaqM+sFk,%RCrIE^Rq0qIbq2>0/q2444n#?;?l@eJUmuZmtplFL?m]Yi1
oS<3r!JQg'Q1U=8PNB4A[/RB3N8fcnMti20M<UH#R.lpIQKGdJ\c'&'O84h-NrG%'Sb/HHS,\r?^[Su8
^%7H`POt%5Oo:C-U%G#PTDkGG`:1\D_Z%F=QLpI;Pl-a3V"CGRU?Tbta7RFK`o*9[R/<6;W:["YVY8:-
c1&sQbMeudS,/TAX6Q_^WU%t$d.krHTD5#SSH,2KYPPF!Y4o'pXP;8!e+'0tU&(G^TD>efZLkErYkkO'
Y2%\'fCGd'U]@1eU]."X[Igj#ZhUi^h"KJ&g@M9=Vu*CeVY[.fUuf)[[edE2[-uo6hZ)F0Wp?\[WVWRk
Vt7Om](`c3\G`o+j7)(.iUu1&Xn/XhX88jnWV!mr]_B&7])9,/k5OK6jmqL+YOeplXno-qX7a:#^\>J=
^&,JBl1F60kk=3;k4c.PYkYEuY557#XS0O'_>(eG_"thB^@U^]lh0Q?l1hUWZM1X#YkkR'Y4om3_tq:F
_YV+F^];.Amd]];m/$&D[Igj#Zhh!(Z2_$.Ykc<1`V7=I_tq7M_=d?gnFc8GmeXBa[J7*/Zhh$%ZMMZ6
a7mUM`VROP_tN]lo(DPJnGB`l\,3Z0[e[?-[/@9-an*UJa83gP`VmaLp$q\IoDA+Xnc84X\b*E,\,!K/
[J[B3Zi%u;anWsQa83gR`VB/sp&F[Yo_A%Xo)6/l\bN]1\,*Q2[K!W4bk'$Qb5'0UaSX$Sq#:$Zp\+=T
p&=U_]C`]0\bWc3\,<]6[JnGBbkTBWb506Wa8j9Xq=+1Qp\4C[o`2Yr]D/u5\b`i6\,Ec8c1B0Tb5f`]
b506WaT'<YqXF=Sq"XU\p@Gok](ro5\GWi6[K+VMc2#WZbk]HYb59<[aSl#*qY'a[q"jaW]_K,7])&r;
\G`r8[fEl/cM,TZbkfN[b5KH]r:'UWqY9m^q";;p]D9&7\bru8\,Wo0cM,TZbkfN[b5BB]r:'UWqY9m^
p]1'e]_];9]D9&7\bru8\,Ni0cM,TZbkfN[b5B?^aSbQ)pA4[^rqZBbs7_$~>

%%EndBinary
grestore
np
946.768 942.701 mo
946.498 942.701 946.24 942.686 945.992 942.648 cv
946.24 942.614 946.498 942.6 946.768 942.6 cv
947.095 942.6 947.439 942.62 947.801 942.648 cv
947.439 942.679 947.095 942.701 946.768 942.701 cv
level3{
gsave
clp
[-1.07516e-6 -24.5967 24.5967 -1.07516e-6 941.238 967.196 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.07516e-6 -24.5967 24.5967 -1.07516e-6 941.238 967.196 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
292.57 974.197 mo
282.692 974.197 li
285.122 966.947 287.66 958.29 291.253 951.85 cv
294.869 945.372 296.044 943.264 298.034 941.685 cv
298.095 941.74 298.158 941.794 298.221 941.848 cv
298.956 942.469 299.779 942.677 300.592 942.677 cv
302.109 942.677 303.587 941.953 304.378 941.848 cv
304.539 941.826 304.682 941.769 304.804 941.685 cv
305.606 942.177 305.541 943.694 304.135 944.009 cv
302.515 944.371 301.705 945.242 302.758 946.694 cv
303.812 948.147 301.948 949.018 300.895 951.921 cv
299.841 954.826 298.87 958.818 301.542 964.772 cv
304.216 970.725 296.277 971.451 293.603 972.903 cv
293.244 973.099 292.9 973.555 292.57 974.197 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[24.48 0 0 34.08 281.76 25.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 71 
/M[51 0 0 -71 0 71 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcOs6S-Artc3LccjpTHDh%B8lrt=-"ne04^rtk#=jV\"6ckt.LrYq=IlQP=4T-F4XTdT^clmM$Fq^A*h
!%n.%dOkDMc8=oDpG2(kj"fsWe2mIfni,Aani,AamQf_rU-8?9c:5H5i'P^_lpg;2q+'d@j%%Bln4WXO
j\4r4j\49-pfI8eekl0<ekkmAhH\N0r)VHMr)NYqc=5g:lrrs_nlb<_c=c*Bq-Wi&iEkqZc>E/^s'jhp
nRC?bg2ck,!+t)#nn8#8hIlCmoQT&6rbC8)okaVBhJ3+,ok_p$l>Pd'ol'PBj`&LrqK(\=qfMXVqK(J7
q/su;pNHU^hK\sDpNPG<r-@+Vnr)RVl[@iAl[AMhfT>]Sh1,KVo7-+Wnpg^kcBRjOmtC1anUpUipk8-j
cC+]ehhUfZ!f2SchhUcYcCO?[rJU9*oSi0pmu-gsd%UK5qi9NopQ594hN.DmlDE[?q2t00kEG_(n<3(#
rfbX-k*>D$qj6W6r0?`:qj5U2opG6:n!a3DopG6:l^H,)m%!g?m[X?LigfG-!1qZJr3l*ehk9J2hk9AJ
ik#/`hkK\:s.S>EpnR_]cFs1Pn>5WOoV_Y`ntlA_n>>iUcGAeEn#?;dqPrhZn#?&]cGfUZpT+.kn#Z>e
q5Wqbn#Z>ef#[[.p9!5Tqlf^qhlcj[nB9_4oW[hin?W#!oW[hios4M$rNjeqo!@2[!4DC(!4:Xj!4C,#
!4;:(n@&2&pU:.0n[7kpn@-]nrjVR1rOD=,o=Fq1n[S%uo=EW-p=S`Cn%88*m(2Ytot9nNgtVY:n\"A)
pV-I8n\"G+s1S0@cJA6/hnT$'pV-XAikP?*cJ\B2n\Ot:q83'Iot^+6n&#"?cK"T7s2+<Dn&54Eo>:%8
n&54Egu\.hi5P0)i5P0)p?:2ns2FKIn]11@s2FKIn](XNo#T,ArQ"EKn]CCFrQ"fVp;ldGo?,AFqoS?M
oulmKqoS?Mjibs;q9&3MnBC[Pq9&3MnBC[PcgUr(pWW*Nn]q!WpWW*Nn]q!Wl14!-p!3$PnBh-]p!3$P
nBh3_s3]-ao$?4?s3^D`q9\<Os3]-bs3L8_nBpjUrmLhmo$HmRnC#VVrQt,_rmLAco@*Zbo$QpSo@)._
rV69;o$[!Up!ildo$[!Up!i@(j8&N!n^I!WpXT)fn^I!Wr71_qcMI:an^R$XqUYDipXK)in(%9ccM[=`
o$m0Z!7h"uo[EB\n(%?ecM[7_rRLSkn(.Njo$m3[n(.Njec#@C!7^Phn^d0\!7^Phn^d0\n,D8Erm^Jg
n^d6^rm^Jgn^dNfq:Epkr71;fn^mEcr71Jkr7:Dio[qIhq:5#dn^mfnpt5Dmn^d6^p=R[jpXT/lpX\ld
pt5>kn^d6^pt47!p]'p:nCI-]qq1SlnCI-]qq1K>h>`!~>

%%EndBinary
grestore
np
300.592 942.677 mo
299.779 942.677 298.956 942.469 298.221 941.848 cv
298.158 941.794 298.095 941.74 298.034 941.685 cv
298.095 941.636 298.158 941.588 298.221 941.54 cv
298.956 940.983 299.779 940.797 300.591 940.797 cv
302.108 940.797 303.587 941.446 304.378 941.54 cv
304.539 941.559 304.682 941.61 304.804 941.685 cv
304.682 941.769 304.539 941.826 304.378 941.848 cv
303.587 941.953 302.109 942.677 300.592 942.677 cv
level3{
gsave
clp
[-1.45998e-6 -33.4004 33.4004 -1.45998e-6 294.006 974.197 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.45998e-6 -33.4004 33.4004 -1.45998e-6 294.006 974.197 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
222.214 975.53 mo
212.488 975.53 li
211.136 971.171 210.343 967.147 210.398 964.218 cv
210.48 959.934 212.18 951.513 214.125 947.302 cv
215.284 944.79 215.925 943.286 216.855 942.388 cv
217.485 943.066 218.246 943.434 219.391 943.63 cv
219.771 943.695 220.102 943.724 220.388 943.724 cv
221.705 943.724 222.092 943.116 222.08 942.639 cv
223.41 943.101 223.03 944.087 222.876 945.342 cv
224.495 945.778 224.252 947.011 223.767 947.883 cv
224.171 949.262 224.658 949.407 223.604 952.021 cv
222.551 954.633 222.47 959.499 225.386 964 cv
228.303 968.501 225.873 971.043 223.037 972.349 cv
222.128 972.768 221.949 973.952 222.214 975.53 cv
222.034 942.388 mo
222.003 942.3 221.957 942.225 221.903 942.171 cv
221.965 942.151 222.023 942.131 222.079 942.109 cv
222.084 942.21 222.067 942.305 222.034 942.388 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[19.2 0 0 35.04 209.76 23.6801 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 40 
/H 73 
/M[40 0 0 -73 0 73 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 40 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 40 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 40 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
M#mGX\-L[mo*iABfad?\r=ST5kRm@ufbNWb!#P;EjqdS*]Gp_fr#Fc:p)Ma/iun(>rugDGpEA3;i?e:H
pa,2Oq'OcHi%"RRnLF#XqCC5ThCnd\l7_f`r%Qeagbf!fj#$Thr\`@ngH#9pgc5Er3]bq_q`Wh#q`Wh#
rCbs>j?iQ-j?iQ-p/'gHpdX75pdX75moJaTi(No?i(No?kZdU^!)DHJqbR8fi(s5HiF)Ihs&7fSrDikr
hc0PSg1C=srE&;eo3)#nlWEa]fk^IhlWj*gqciAkoj-6iqHs,-nR2'!qHrPrp0lWsm:>p$pgrGqpgr-)
ltH91oP*Z*mV1@(l>602qebV7n86j3k\p06rG_gUl#697rGgMHnoO)<s)n-YqK(qDs)m"Sn9=2C!."-Z
s**dR!.!7\ms=YRpO)FUrHn?epO(Y[idUZPjF7,Xpj^tci.CfXi.Cr\rI`dql@n_^l@n_^rhJ8Dk_Sqh
rJKfpp5/a*pS[&LkDT"ls,H3"oo/p1n>kiTZ&e.QnZUu9pQOX#pQO::qN^<1pm0p)pm0UBo9d:[ft.3P
m[Ng;r1)W5r1)HSrLN2Eq4@PWh4FS;fu!Z[j.Xtrfu<f^hP8i#fuVO;ihkDQpScQ?l)E@^or?<<n>k6j
oW?3;pTE3"nuos8rik).n?Kj9rS$)]n$Bp=p>+fcmC(!Cn)3NilaOpEki20mlFP'KiT9msZ+SfR!9`LX
beDcpqnMI3c+r#uoYBt3cb\<%mDAP5dDOZ+k/@/8d`'o0s2<m8!6*I-g%53^ho>W8g;hn=r5[a:pW;C9
g%P9`dE1Uog%Y<aiQCK0n&sD[pWDO>jNR>Ag%tBbjilQ*rQX$moZZIBg!9Tph#-`ekfqf+p\j.NnBC1B
g!9*clM^1rld"20l2L5PmEY+Fg!JFPqTeZWn'B\6g&LZhps/BTg!JFPm*>RTo$?"9g&L3[!71>ag!JFP
J,~>

%%EndBinary
grestore
np
220.388 943.724 mo
220.102 943.724 219.771 943.695 219.391 943.63 cv
218.246 943.434 217.485 943.066 216.855 942.388 cv
217.485 941.781 218.246 941.451 219.391 941.275 cv
219.771 941.217 220.101 941.192 220.387 941.192 cv
221.649 941.192 222.058 941.691 222.079 942.109 cv
222.023 942.131 221.965 942.151 221.903 942.171 cv
221.957 942.225 222.003 942.3 222.034 942.388 cv
222.003 942.467 221.957 942.534 221.903 942.583 cv
221.965 942.601 222.024 942.619 222.08 942.639 cv
222.092 943.116 221.705 943.724 220.388 943.724 cv
level3{
gsave
clp
[-1.501e-6 -34.3389 34.3389 -1.501e-6 218.55 975.53 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.501e-6 -34.3389 34.3389 -1.501e-6 218.55 975.53 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
618.853 978.807 mo
611.074 978.807 li
611.209 978.126 611.343 977.445 611.477 976.769 cv
613.713 965.414 612.875 962.491 613.525 958.9 cv
614.178 955.31 615.576 953.473 616.975 949.382 cv
617.493 947.864 617.998 946.92 618.529 946.347 cv
619.126 947.066 619.754 947.264 620.469 947.264 cv
620.832 947.264 621.218 947.213 621.633 947.153 cv
622.695 947.002 623.126 946.713 623.193 946.347 cv
623.25 946.624 623.049 946.95 622.75 947.294 cv
622.098 948.045 620.607 948.213 621.818 949.382 cv
623.031 950.551 623.404 952.638 622.471 954.058 cv
621.539 955.476 621.633 958.649 624.801 962.824 cv
627.969 966.998 625.641 969.254 621.354 971.341 cv
619.685 972.153 619.007 975.12 618.853 978.807 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[18.24 0 0 34.08 610.56 20.32 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 38 
/H 71 
/M[38 0 0 -71 0 71 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 38 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
NrekX_?\g$k7,`HgCDpNg_8EWbo,a`gDo#kruU;Ep`KMWgEO$Ns!Z\O[4:`#l7_?ToIoD^oIo;`X#8Wn
r]7PMgHkErs$,g6o0DP)gIL<ndRDnbqb#g=rC[)^iCVd%geRoFn5&FI!)D9N]i=f,gKroCq,lZ[q,mQ)
i+'0#mqD*%[:8-5qJPb7m:Pg"m:P*oqeNfZgN`F2q/>\>p2K/4gO8%&eTBPtrd!@Frd"Heics45i-kNN
m="VTr-[7X\q0d1gQC]RoRuF^oS!%*j-AqenVHLfnVHP#n=&g*m>ULnm>TqorLWVCl&bM!l&aYppltiE
jcoM)jcnMtl^5k_gT1@Ei0sk=R[Tb:hjaY7gTTS.qk!PSl_"'GgU$"9pS$lHr1`qZgUHCDoVLcKp8.ec
gUjkloY0P'n>tuWn>tuWkJHo/[BJ?)!4)F+jK\KcjK[I]r3c=,lEgPtr3bLj!41G(k.(8trO:[orO:P.
j1>&ss17='q758/kIpQ$o"Fb1ot9&1^VBNXgY)#3m_S>.m_SnXhV@\?lGN22lGN/Kle_?Uk/R,8k/QK@
pu2(jilCo:ilBg6s3(Gbj3%>Bs3'BDrQ3gVnBCOKq9.gBq9.OVkKa%Nq9A*Jp!)7VlHo+Jr6XoZo$?(X
maCONn'V3ama9eXo$lsRo$m3YqU=3hp=8<Tp=8<Tqsr_:qUXZVqUXZVme#r>s4H;^rRV#$iRe%ZiV*0B
j4O1Zj4O1Zg\:QumFq9ek1]O^g\L6krnI"tlJ(m`g\U?no@s2tmbI6bg\^QslJ)-iqV:Ajg\gd$k1o[d
pY>8ng\q!)j4jXhqVC;hrnIM.g\q0/inaOfs5)bkr7q)HjSn5sptb#fptb99nc.h0o\J`fo\JC(rr;?A
nD3HfnD2k!pYPc'm+q0fm+pFro\T>uo%irpkhY"nJ,~>

%%EndBinary
grestore
np
620.469 947.264 mo
619.754 947.264 619.126 947.066 618.529 946.347 cv
619.126 945.702 619.755 945.526 620.47 945.526 cv
620.833 945.526 621.219 945.571 621.633 945.624 cv
622.695 945.76 623.126 946.019 623.193 946.347 cv
623.126 946.713 622.695 947.002 621.633 947.153 cv
621.218 947.213 620.832 947.264 620.469 947.264 cv
level3{
gsave
clp
[-1.45477e-6 -33.2813 33.2813 -1.45477e-6 618.672 978.807 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.45477e-6 -33.2813 33.2813 -1.45477e-6 618.672 978.807 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
404.478 979.864 mo
396.072 979.864 li
396.23 976.994 396.36 974.091 396.36 971.338 cv
396.36 962.903 397.384 960.483 398.689 955.14 cv
399.994 949.796 402.137 949.796 403.628 947.792 cv
403.879 947.455 404.109 947.16 404.331 946.905 cv
405.184 947.998 405.929 948.444 407.343 948.444 cv
407.751 948.444 408.214 948.407 408.752 948.338 cv
408.858 948.324 408.959 948.309 409.056 948.291 cv
407.817 948.775 407.448 949.135 408.287 950.715 cv
409.218 952.468 407.728 953.552 405.677 955.975 cv
403.626 958.395 408.939 962.236 409.312 965.41 cv
409.684 968.583 407.169 969.168 404.745 969.919 cv
403.529 970.297 403.629 974.444 404.478 979.864 cv
410.797 946.905 mo
410.765 946.63 410.611 946.353 410.367 946.108 cv
410.707 946.339 410.833 946.621 410.797 946.905 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[15.84 0 0 35.04 395.52 19.3601 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 33 
/H 73 
/M[33 0 0 -73 0 73 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
ScRpXgBZXBaURtRi"!L8mhPC.^DPlJoH)3ti$$_tkTf"5^FB.6j"8"ui\S8(`];^4i'5CKofh;&n3ZY4
n3ZY4nOi:C^I[9Zp.b'OqbH9JqbH'Mg/@'2i*3rs!+=bn^Kfi3rFWfPi+r.!nR_K,q./]#i,HqTo4d-*
n87]5n87]5o6ThN^N/7^pic+Lqfh1GqfgtOgj8%-i/#0t!.Njc^OkU1qiSXJi0O4rnr!-uqMFBmi0quP
nW)P"n<*7(n<*7(oqUlK^Qm`TqO$]<qO-N6qO-9BhONSqi31"irh&,T^SC#%q7$=!jJMmPjJLkHq5Etc
oVqYbkc*LSoW.A\oW/"nn#YH`^T[CNlG`%npTj(hpTi_ur3Yarr3bXnr3bJ+`4,ZRi6T0LlI,FT!5.:(
!5.:(i77;2dD+VlpV?(1pV?dEmD7`7o>C"7o>C"7q;(8jm`+k=m`+k=i8FUTm)SnBl,WS?i8Wh?s3(Gc
jN@GEi8qu&qTRm\^Wu31p$)G#jNmeMjNlcMq9\rbnBq'YkgA>Uo[<-Up<ruhmF1"^n'ppYn'ppYqsih=
lIGX[lIGX[i:?s"k19I^jjs@]i:Q*_gt:QYaP$@Ai:m3(jP0XejP0+uoD/4:khQ!gkhP+moA%UGi;;uu
o%j)rptYGri;DlrpYP2kpYPlIjSe2rr8-Pkr8-E2!<'[hi;Vlrg>CigrSHVmrSI##p>=g.ptk8mptk8m
nGi%Yo\Sumo\Sumi;`K,qqgo$n)!Wmi;\<~>

%%EndBinary
grestore
np
407.343 948.444 mo
405.929 948.444 405.184 947.998 404.331 946.905 cv
405.185 945.925 405.93 945.525 407.345 945.525 cv
407.753 945.525 408.216 945.558 408.752 945.62 cv
409.518 945.709 410.041 945.885 410.367 946.108 cv
410.611 946.353 410.765 946.63 410.797 946.905 cv
410.736 947.377 410.225 947.856 409.497 948.125 cv
409.34 948.183 409.193 948.238 409.056 948.291 cv
408.959 948.309 408.858 948.324 408.752 948.338 cv
408.214 948.407 407.751 948.444 407.343 948.444 cv
level3{
gsave
clp
[-1.501e-6 -34.3389 34.3389 -1.501e-6 403.438 979.864 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.501e-6 -34.3389 34.3389 -1.501e-6 403.438 979.864 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
356.059 643.24 mo
341.916 643.24 li
342.86 639.449 343.893 635.231 345.2 631.372 cv
348.216 622.477 350.135 615.971 351.323 606.88 cv
352.511 597.792 356.165 589.468 358.815 585.353 cv
360.34 582.987 360.957 582.742 361.676 582.742 cv
361.769 582.742 361.865 582.746 361.964 582.75 cv
362.064 582.755 362.168 582.759 362.278 582.759 cv
362.455 582.759 362.649 582.748 362.869 582.708 cv
363.145 582.756 363.463 582.847 363.84 583.015 cv
364.551 583.33 365.118 583.449 365.611 583.449 cv
366.546 583.449 367.213 583.023 368.091 582.709 cv
368.356 582.808 368.64 582.896 368.957 582.959 cv
370.875 583.339 369.688 585.642 368.044 585.735 cv
366.399 585.832 367.586 586.406 366.308 587.075 cv
365.028 587.746 363.657 595.017 364.754 598.461 cv
367.586 603.436 363.84 605.062 360.916 606.115 cv
357.993 607.166 356.622 623.91 356.257 630.225 cv
355.999 634.672 356.463 639.543 356.059 643.24 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[30.24 0 0 62.4 341.28 355.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 63 
/H 130 
/M[63 0 0 -130 0 130 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 63 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 63 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 63 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcN[g^^#PurXaYm`Xog%L`6.8Jg8A^\h&ajpb[RZbVZdlN]m&'JjdpQZqQTUnl13?dT!JUP[!TcJn!8>
Y%a5:lu.JofPdg5RW[kAJpZ7!qLH\=qLJ!bSUpTkmYBVRq1c&-hM:labDc4Sm>R]splXp+i0*ktXHMP*
pQj$ipQk-3ig7NKpRBBs!1WbQNL^$@pn,g(p7KL#`Lun"cDCK8q4s(Jr2BIjcDgK8aJm7[oW6B@qQ0Rq
OKJ>_r34MPoWZ??bH^ZGd'`VTrNq]pp:1(2dCJhX`OX:)o"3;^oXk.8P.^D$s1d!tn\;uWdD57ge&1^m
!5au<nAWkrnAW5`eAgsueB.1#!6LPKm`PUSf$*R*^s(ESm`sA/m`tgXREt9IrmBEHmEiSpg<o99f@909
rR@@em+)$bgt(iB][koildseAldu$dT@iG_qqL#_lIrl)i7mPPg"krKq;%e$l/)6nins"WRc!AegYh;Q
g#0g,ki(:Uro*2%SDsM-lf6d]kMt1Ta5lCEh<+Urm,aSrmH36fk2t4Wb3.mMhWah!mc]r#mciWojQY1Z
YNk'3p$2#2U$M@;nEf*#j6Y4]Z0gN<o'Pu7P4%l.ipYjodI4C0j7)O+o'__1oC1f1i:,(_[.35Jm.'`<
O7Mr6jn%@"cL\I8k4Ip0p%+49p@RM?h=Sqah"BIpkOn!0p[jF;p\!bDg\&b`\G#1]j7`9AWqYNHq"F"I
g%NS_iqM.#lM0',l1g_BlhUSUgA%cFrqP4Bm.o9.kkU_DmJ?bVg\J#Kqt]"BmeYK0kPE<seG8S0q>&hA
Vu#6Gn,(W2jnm:!e,&S2pA3YBV>K-Hnbgi4jS[@%dJNM4oD@GBZi'Ckhu!$Cd/2l$deqGgo_e4Ui;9;I
i;E9HcMZ]#ec!ekp&4:Uir$7`m/5l@pAN86i;M=,bl%56lMT]?\Gb[ij8A]NbP^8rV#C,gkPaK?])Ljj
jSerSao1)qhYtUpqu5[Tjo)jkj8J*<r;Ob8h>ZC4`r5l8iVhp;rVj\5`Vof8!<'q9^]+93`r5r:`;TW5
`W!dR!<2rqa8NjRr;DHMqu23Hao90Wq>Q<Oq#AP;\Gj_O_Z0?/NrJ_OcMt<Oci1f]oDXmOo)I,;ZMr;O
_Z0-)PlC.OeGl`Oec*GcmJ`IOm/P];XT$lO_Z/p#Rf;ROgAe/Og]#(ikPh%Ok5X9;VZ,HO_Z/]rT`4!O
i;]SOiVp^oiVqj9_Z%FP!<.ZNs8U%;^])4O_Z0T6L]75Oa8`gOaSs'VqYlBOq>\V;\c0eO_Z0B0NW/YO
c2Y6OcMk]\o_ssOoDd2;Zi8AO_Z00*PQ((Oe,QZOeGd>bmf&OOmJkc;Xo?rO_Z/s$RJuLOg&J)OgA\th
kl.+OkPs?;VuGNO_Z/`sTDmpOhuBMOi;UUnir5\OiW%p;J,~>

%%EndBinary
grestore
np
365.611 583.449 mo
365.118 583.449 364.551 583.33 363.84 583.015 cv
363.463 582.847 363.145 582.756 362.869 582.708 cv
363.145 582.658 363.463 582.563 363.84 582.388 cv
364.551 582.057 365.118 581.933 365.611 581.933 cv
366.546 581.933 367.213 582.379 368.091 582.709 cv
367.213 583.023 366.546 583.449 365.611 583.449 cv
level3{
gsave
clp
[-2.67984e-6 -61.3076 61.3076 -2.67984e-6 355.931 643.24 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.67984e-6 -61.3076 61.3076 -2.67984e-6 355.931 643.24 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
330.409 647.792 mo
316.158 647.792 li
315.259 645.208 314.683 642.044 314.683 637.648 cv
314.683 629.228 313.586 621.575 313.13 616.696 cv
312.672 611.816 311.303 609.712 307.831 609.233 cv
304.358 608.757 303.993 604.832 304.905 602.632 cv
305.819 600.432 305.727 598.517 305.454 594.881 cv
305.18 591.247 303.719 590.672 302.806 588.95 cv
301.708 588.758 301.982 588.281 301.708 586.846 cv
299.864 585.434 301.49 584.946 303.934 584.932 cv
303.97 584.932 304.005 584.932 304.041 584.932 cv
304.077 584.932 304.113 584.932 304.149 584.932 cv
304.794 584.935 305.488 584.97 306.186 585.027 cv
309.659 585.315 308.379 586.655 311.485 589.907 cv
314.591 593.161 316.511 596.03 318.247 604.067 cv
319.982 612.102 322.724 625.977 326.379 633.247 cv
328.351 637.17 329.6 642.732 330.409 647.792 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[32.16 0 0 64.32 299.04 351.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 67 
/H 134 
/M[67 0 0 -134 0 134 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 67 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcP-;QNX#ci=:GLf++kuN>M:2JfqoQ_'jm`pF(tTXYJBeJiVgNTg>&3lUc\"bt5??K2;PLJlfH`
b?fd,m9Z)iULiA!Jns"SX)a5@olu(5_g&tGJq!KDMh:JN^4XsllA301`JOGJM2h+d^5g[*WKPu!jcc:&
hNtsDkaRg+n!qapZ_5F5^7kM$Ju&CA^88oL[&D<Mn>VVQl)_V$h6<NUjK[IEW3k']^:!OAMR`Jm`jrdp
^UqFsqn.a"oY8,Ud_`$$fu)siS]0L*^;f?WQ,rC8dE/]:b0%HAr69i<s38:'a3_6@cI)10P1&XD^=1'O
\(/^Ro@B#Tm+8u(g=`4RiS*/BV;'VV^>/25NSX<bakjVd_V`2frnrLhpYh(jXl@pll/S5nioIi8jQ;il
lfWl_c0)P!KBN="^Zi]%\E_9'K'VgiQL(C5i9c-`f^5a-NpcT/K($VG_!lsFq!a43Y4:'5lLKPtqXTL7
Yk-?9K(S0sT(STGkk<X%XS's5ZhB.IrV+2'_=kM7aS1;\nFr.AVYK!CiqWTK^\@g'jnRU*^A.d(m.o0,
!;O>)o(pW-s7jD*s7lKe`qd@F!;QTh_>4**a8,W.^A@j)cMI20rqXD,deiG/rV=>,rV>:Gk5)ghrV>ON
htm<I_YWHmf_bUC_u'B.oD?r4^ARm)qtnP5qte8.r;=J1qte>0s82]i`;@UQq#(!c`VfT0ebnt8^A[m)
h>HR9q>820`VoZ3q>820q>8\>oDH?$q"rkEm/6YUa8FZijo+uOa8G`0lMTN:^A[g(o)72=p\`,2n,C]5
pAE&2pAE&2^Ae*/qY\J6pAE/5rr'S1p&*><p\jd_b5KZcnG`(XbPh)2j8J6@^Add&lM]`@o_co2jSmp5
oDHi2oDJF_eG[,\o)-c2o)-c2q>SD5o)-c2!;uHdc2GT[qu6-acMmA4g]$jE^Am^$j8SHFnGU]4g&L47
nGU]4nGVnVhu:@in,<(]f`(@<d/NJ5dJrY5dJih;qYeh@^An-0oDR)9metW6s8Kb4mJYf=q#9[Zdf.Pl
nc.tSe,J_4lMg)J^AmQugA^sJm/>E4bl@;7li#?4li$)Im/Fa!lM^8Pjo4QDec+P-hZ)m>ec+k4s8LXL
^Am[#qu,+Fl2B34pA`87kl'-4rVc*]fD`Vdrr;0[f`((4ir8]O^AmBpl2L2OkPa'4f)P"7k5F!4k5G)S
ir6[ljo#2Yg]$=5gA^F<eGnV.g]$dBoDRGC^An$-m/>]<jSdj4!<9h6j8J!:qu5XSh#>Lso`*qLh>ZF4
nc%qT^Am0jq>TOUiVhX4i;_^7iVhX4kPb;VhYt7hmeubUhu;R4hu<<Kb5^Ati;WZQjSe$9_#OH7hYlF4
hYla=q#8#-hYm!Dnc%DDiVqC-lMo]=ir7d4l2LPY^Am!enc&.Zh#6:4e,Se7g\p44g\h-Ojo3!oiViZP
jSmp4jSnBCfDjS'jo4`Im/?&F^Amp*jSe6?g&:(4rVsb7f_t+7rr1RKkPiR&p]&kDkl034q>Tm_^Alg`
!<26^fDXq4h>cL7f)=k4jSe]Kl2JEsli$/JlMf?4lMgASc2Z;lli-_Yh#6R<^Ai]~>

%%EndBinary
grestore
np
304.041 584.932 mo
304.005 584.932 303.97 584.932 303.934 584.932 cv
303.97 584.932 304.006 584.932 304.042 584.932 cv
304.077 584.932 304.113 584.932 304.149 584.932 cv
304.113 584.932 304.077 584.932 304.041 584.932 cv
level3{
gsave
clp
[-2.74771e-6 -62.8604 62.8604 -2.74771e-6 315.661 647.792 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.74771e-6 -62.8604 62.8604 -2.74771e-6 315.661 647.792 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
852.75 647.792 mo
837.734 647.792 li
837.215 644.935 836.452 641.065 835.549 637.48 cv
833.844 630.713 830.971 621.126 827.828 613.604 cv
824.687 606.084 822.892 599.976 821.635 595.087 cv
820.377 590.199 821.545 590.762 821.455 587.567 cv
821.392 585.32 823.192 584.932 824.641 584.932 cv
825.253 584.932 825.803 585.001 826.123 585.029 cv
827.2 585.124 827.649 585.78 827.11 586.721 cv
826.572 587.661 826.303 588.414 827.649 589.353 cv
828.996 590.292 830.881 592.644 830.971 594.429 cv
831.06 596.214 831.779 598.096 833.305 599.316 cv
834.831 600.54 837.793 599.881 840.128 602.796 cv
842.462 605.71 838.781 608.998 837.255 611.536 cv
835.729 614.074 839.499 622.253 842.013 627.705 cv
844.526 633.157 848.387 639.645 851.08 643.403 cv
852.07 644.785 852.554 646.257 852.75 647.792 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[33.6 0 0 64.32 819.84 351.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 70 
/H 134 
/M[70 0 0 -134 0 134 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcOL)W<.hVr!.fYZNnhcJdgNFkRl;Ul4O%.e.B5(pD&8prY<$\b8RE"fGiljT-)Z,]--YiKI$RD
]d:ZHq'c4i^*rt.djaN1dk0f8i%=RQkq'G!m4nSpdP0r@dP1MQ_D8qb[5H5gmPgCkiAnM3kW[W_rB7nZ
rB9g=a$@C+r]pNM^I%lba[G_geOJ^jej]X/k=*!Rj%Ju:k=X8tk=Y5<bY@G"cq`q'cq_YZoMOsRcr04/
l;HeC]2e6"p/]mJm8qV7modn<_-6_=r*%*DqcUgBq-CgCqd%QTnm;3!QXTc"j^?\Kj^@@adU^s@j^e*s
iFV+]^1dLZf4j>[f4jnknS#ONmVV9+jD=7$c>;T]`Gj@Gq/5bBrc$D+q/3fcs)ddQeT:P,mr[3'rc@mU
WH[HInTO_Nms!<*q/tVAgj8I:e9^q9n9b.\f6[7<]70U)i-jX5fmW+4qg?#,fmrdGmXNo?j+#g:\qK'q
k_/P\ie+k!onV[bieH0Bj+[Pg]8PC#n;7+#pP@O\m"tImerJmQnVu(XpP\R$o8M^gpPZYGnrWm4f8oWc
nrVC_p5ZbLnrq[gs-!)<nrqUep6!mlkEkb*eWoimns8g2jd#P(]:/>ZrL!#?i0X&'lBpLrr11Woo:5*8
kaM=9o:5*8i0r#cm%EsBlCQq)o:P??!1r,>];+YaoUt*6h4WYtpSGj*h4s>2pS%S[h4s>2oV'I,nYk9@
m%s?Mh5:+HnYPlR];t%lqP`_XoVUKDl_jBPnu^':orHWCo;VbjpT)iEo;Ta6p9=4leZAACor[,QpT3te
]<_.7l`]TWo<.eke?AJHmBt9Jp9N2Qo<A(srNaqXo<?'?qmZ:,lEoBRp9j1mn?_Ph]=RaGlF-VuiO/Eh
lF,KUke,EXpUTS!gpd$gs1%F*gpar1!5A3>lFQ>mn[S>*lFQ>ms1%[1]>43TlFci&p:Kk+pq>t*lau\u
j20KdpqZ10lb;o&pqZ^?o"XM)n\)QRpql=4m(i,*pql=4m(iS7oY8#YiktE*pqlO:ikt*!nA4,+g<&?n
lbr;1n&=q<lbr;1]?C,lkJll-n&45*m)A_;q8Bnhj2gZ/rl=KIj2gQ,n&F2/hp2)@eB.1#qTA?MjN6l3
]?pDurl`s;m`PCMe][L*rlVk$qp*^9rljoVqp*^9m`a>5jOF(QlH\&,qp4TR!7'6A]@Hf+psAWZf['HB
lHn20s4=s9r6srZld>LSp<``dlI,"GmEj>8l.Q!alI5(ImEtj]lI5[ZnC$^O]A!57n^[Hcm*tCNrRU5`
m*tCNqV8sCrR^>cldbRUr6t_qrR^>cldbCP!7T6LmbRiplIbFSmahEgrRpJgp=K#imahEg]ANVAle2<k
m+C^Ws472'l.PFUmFVBhp#*mKrnQenle:aZ!8%;(rnQenle:aZs4GHQoA]c*lJ1^[mb7ZnrnZkpnD!lq
mb7Zn]ArqJl.u<nnD*Ecrn@D/l.t^]mG%WonDqgSs5<2"le_'crS7G2lJLpambRisaQE-W!9*2#leh-e
rS7J4l/;!ernm/#rS>*K!93;&qV^r&mGIm!!93;&leq0frSI#,c0,/flJh-gmbn$#!9=%;mc*Qkmbn$#
_s.!]l/V-imG\!$l/V-irSd;*r8>3PlK%TtpuCc$r8Hr%lf7Blr8Hr,dd-2[lf@Koqr7A3o]>E"mc43(
^?kjclK7HpmH"0)lK7HppZ2)0qr><Ulf[]uroWV0qrI)+lfRTrqrHl,fC%tglf[]uqW7;3qWR8.mcOB-
]C5d`f]__cqW?Amn`Tl6qW>EZm-3`tnEB`3m-3-cqWHf,h!sarf]i4qmHO]:f]i4q]CPgao]ti.jlu0u
lg!g#qrt`amHj0)q!.S<q<@;5lg*s'q<?Z+iUlO(m-F'(q!%24r9Nn=mHXK2]Cbd`qX*V8mHaQ4md9?,
mHaT5!:%2hmdBE.o'H>ApZq88lg=-,pZpE(k4\93lg=*+pZq;9p$MM@mHjT5]Cta_!:T7AmHsZ7n*fT1
mHsZ7]D(d`m-jE2s6fUJn*o]4mI']8ebJ>&nF5c4mI']8nF6&<q=!_=p?fKenF6MJm-sE2p?qG?lgX<1
p?qkS_"mNjlgX<1rU0LLnaYr7mI0`9d/!&(nac#9mI9f;nac);s7,LGp$]NhnacPHo'u/;o^D>@lgaE4
o^DPN`VT/slgjH5p[J1Oo(22<mIBi<bPUi,o(22<mIBi<o(22<rUKFJo^KKioCMSEq=<qCoC2AClgjH5
oC2>Jb5:f&lgsN7oC;kQp%7SAmIKl=`r,Q.o^qG?mdfr=o^qG?p[\+Mo's?io^qPBs7>XKo'uAElgsN7
o'u,Fci!G.lh'T9o()YMqt9:ImITo>_>X90p%@YCmITl=p%@YCnFQYNnaa<jp%@YCrU]RNnacAGlh'T9
naboBeG]+6lh'T9nFH;G!;,XMmITi<]_qj/p@dhFmI]o>p@dhFmI^DLoCKTnp@dhFp[n4PnFQAIlh0Z;
nFP]>g&Ca>lh0Z;n+6;IqXsFPmI]l=]DhQulh0Z;n+6;Ilh0Z;r:BRP]DhU!lh0oBqXj4Iq"F%HmI]i<
ir7[2q"F%HmI]l=!:opYq"=:PmI]l=!:mc$r:g3blLsW<n+6VOq=j1JmIg2FqXadZ]Dq^$lh9c>!;5dP
!;$$\lh9`=mdpMNh>cC4qY0:KmIfr?s7?*]nb2hQmIfr?s7<l&qY1!_me6&@me$PNqY0=LmIfr?!qc*U
]Dqa%lh9`=r:KXRrq$!\lh9`=n+?VNf`1%4qtKFMm.Ki>rq$$]lh9]<n+?VN]Dqd&q"F@RmIfo>rq$$]
lh9`=me$MMs8Te4r:fLMmIg2FqXjaXr:fLMmIfr?rU\M<l2U\Ulh9`=me$JLr:fONqt9RRme$JL]Dqj(
nb2hQmIfr?r:Bm]lLsW<n+?PLqZ"G4rV,XOmIfr?!;-3\rV,XOmIfo>r:A56mf3:\lLsW<me$GKrqG^O
p%A.Rme$GK]Dqm)lh9]<n+?MKrqGaPm.Ki>qt'L\a8c/5lh9`=me$GK!;$3alh9`=me$DJaoCu4s7bjQ
m.Ki>qXaa]lh9c>s7PjQqX_?!J,~>

%%EndBinary
grestore
np
904.087 645.459 mo
887.976 645.459 li
887.978 641.303 888.037 636.939 887.684 633.245 cv
887.078 626.899 889.569 623.163 893.272 622.318 cv
896.976 621.472 907.546 613.999 914.481 610.332 cv
921.416 606.667 927.543 603.282 932.66 598.559 cv
937.777 593.836 943.365 589.325 946.126 587.139 cv
948.076 585.594 949.79 584.297 951.341 583.792 cv
951.79 583.932 952.226 584.008 952.649 584.008 cv
952.833 584.008 953.015 583.994 953.195 583.964 cv
953.613 583.894 954.04 583.867 954.471 583.867 cv
955.156 583.867 955.85 583.935 956.536 584.002 cv
957.222 584.069 957.898 584.137 958.546 584.137 cv
958.81 584.137 959.069 584.125 959.322 584.099 cv
959.65 584.063 959.901 583.952 960.081 583.792 cv
960.938 584.589 960.218 586.554 958.717 586.787 cv
958.851 587.632 958.38 588.337 956.966 588.548 cv
956.764 590.382 955.148 590.662 952.455 593.624 cv
949.762 596.585 948.617 598.771 948.078 604.553 cv
947.754 608.037 945.741 609.293 943.603 609.293 cv
942.194 609.293 940.732 608.748 939.662 607.936 cv
939.104 607.512 938.541 607.319 937.936 607.319 cv
935.621 607.319 932.705 610.154 927.206 613.786 cv
920.271 618.369 913.942 628.239 909.027 629.933 cv
907.353 630.509 906.053 630.627 904.999 630.627 cv
904.633 630.627 904.296 630.613 903.983 630.598 cv
903.67 630.584 903.382 630.57 903.112 630.57 cv
902.147 630.57 901.419 630.752 900.679 631.765 cv
899.54 633.323 901.817 639.56 904.087 645.459 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[74.88 0 0 62.88 886.56 353.92 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 156 
/H 131 
/M[156 0 0 -131 0 131 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 156 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&JcMeNf`Qg.JcgT,dKAS:bm1W]jTt,VQj;p_JdD2YM%"tE^^S*iUCH,n^(JHur=P_8iXk;bRhEmW
fG<E\XqfS)rY:P1neZloo,!T/rYa9)XW$@@di$:JS/g]6c6'G8rZ8EgdN7?gU*7Gufd,`*b9Pgega)kE
Yp8'KJgTP*js[eg!%5i7js\h/j!Vnpfd_t2p+4B<_(5:1mjc+(eLU#;jsmVh[4ff[s"VVLg+W7SlS7BR
aY;F%!&"+#M)=$Fk;C.6r\MqXn1s/ah)+:Oc84rFi&HHNrAsa8brO95lSn#dofC>XgGo$hdPn[!Jj&om
dlc;FmlL#&gca+KffT-no/_t!Y<gZ'r]o+#jZ_BanNc%ufK\I]k='tkr^H$?g-sO[nO)n8mm?5-g-t!h
oL._,mm=c]S4_s9o1@A$j%&3#p.F"0dR`Fh!(Z-?T2*F%c;!b$n4_e6j@]2=fhM07hFum$j@]2=p/6K?
mo%n;gecp)!)DWNmS2G5gedoEj\Or4mS1u-Qr`NQs&IcPhc&Q5mSWs[qG?EVg/Qs.l;IIVmSW^TVHUc=
pK?0OoiLBZi`>GHmSrp`l<*OXh,iT:m8`RRrEb(^k[+!hk$6\Gj]_Rcm9/OQ!*Ao#k$6_H!*eAbm9/OQ
!*@][O^dlhlX8p`hd5YTkZn'kpKQE\k[34Rn6PuujBVF`X_,+Ul=Aj`qIAf"lXAj^mpH*$l=Bm(h.,_Z
lXAj^n6Z6(?=&>#iG.Xkk@a$klXfd$m:>Wpp1!<#k@a9rqI\Ysm:>Wpp0ufpMJi3)k%`[cl=fQtp1F)3
m:H'.k%`[cl=g31mq;$"m:EqMWc@iQj_k$6ltu$(lYGNqmqMf8q/?7Mk\fU$l>5d%j(eU.nS/#:P]bDs
lZ(WtmVi&BlYc--mVMQ3lZ)!)pMfD9lYc--mVMQ3lZe#+qKV=KkB,s0l>l93r,D4Gmr/2ClZMB4l#Z95
rGq:Fm;VN4rbfW$UO;BPp36(Ol#u?7m<%`:mrJDIrHRdUkBH06l?2K9nT4YMmrJDIRt&V2qL%COk^)lH
pNc(Lm<@uAol^+Yja6cKnTsJGlZhf@mWS8Gnq2OHo7QmhjaQEAomH(PmX"nZmWn5Frce3gjaQEAomHFZ
pNu7QmWn5FrccM>S;-B]r.+-ak^VoIm!\;Lpj;a]rd*p^kCDcGl[J2KpjDg`pj;XZU5?gFm"OVUon3*m
n:L"Xm==VSoR?.\nV$Xion2L\m"+PSmXOkXJrSiNm"k:hk_AAVnV$dmpOhjbmt(Ffm"k:hk_AhcoS)Ua
pOhjbmt(FffoV2TqhtB0lAFe^on_phm"Xn]rIk*%oRm%!jbi8Yon_phnV6srm=k=goRjE4[?LKJjc/nk
rJU'$l\bCmm>11coS37'nW!4$oSi$ml\bCmm>11cqhFs%M3ct`qiUK3kE"kfoo8a*oo/9rpPSErr.t64
o8r-rnW*F*oo8<sm>L^rmtpsui0f=frKHc8kE>M#l&b7mpQ"^%s,Hf4o8E""kE>M#l&b:n!0?l7m>^n"
o8C,KY+4pGo9K$6o9AO(p6+d)pQ4g(o8`C-rKd&?k`k@rp6+d)pQ4g(o8\p)et;l.jd>7uop537q3CZ<
m?@=.mZIF/r0cZ6l^.U;op4p/p6=s.plb'-r/g*9Jti7=r1)o=oU>$4opG'3pm1T<q3CB4r0.&Kk*u"3
l'_43o9]9>pm1<4mZdX5^SRj)rLW,Ar1*SQl'q@7m$[U8m?dU6ns00Fjdl%6l'q@7m$[U8nsB9@pm1K9
T;T`-rLrhUk+D=<optfIp71K=pR:N<pmCrFrLrhUl_"*Ioq(H>p71K=pR:N<pmCrFp8W_En#H>^o:trP
kFqRAl_!mBqOR8LpRL]AqjRJZo:trPkFqRAp7M&Np7CZBpRL]AqjPg4R'#hRrM94akbIgFlCmpEm[s6F
pmq2MqOI#NoVC]GoqL`Fp7UlH!2'"WpmprFVQ[e=n#5lVoVV)Rqk`t]m%a<Lm@j<Jpn.DSn#5lVs/,Le
l)"'Km%a<Lm@j<Jpn.DSrN_$\kd(2fjf.mNl)46Pp8.GXpn[YZm\9KMqOmhfjf.mNl)4HVqkj(`m%jBN
m\9KMqOlBGOgP+iorR_coW.ValDaKUp8@;TpSISZqP<t_riP=aoW.ValDaKUp8@S\q53n_n"ffTXgbjM
s0)!rkH4EYorIAXp8RJYpS[b_nYQ8hnuhbin?)AborIAXp8RJYpS[b_oVMP`Kt60Qs0;1"k-+H\or[M\
r2]arpT!V[po*tcq541so<@A\ore"j!3POfpT+%gmA]lZpo!qbgq/HUs0VC(o<RSbos".nl`TuapT44l
orIkfq5OD$o<\%okcsfbp93kds/u*upT3e`po=.h]Y:D[n[8"rp9Xe*kd'oep9<nepTF7mn#Z>cp9jh+
oX+7skd'oep9<nepTF7mq5j=lq5]aqd_PC^oX=D"l*U,is0DF*m'6>ipTO=on?)5ioX=D"ppBV!os=@t
m'6>ipTO=on?)#nK#7B$!4h4$oXFM%l*^5lpTs7m!3u=(posOspoXV-jgarlosX+mp9ak+q6TIopTaLt
pojIq_o/=g!5%@(rOM^6osj\(laHMppU'=opp0\"pojb1rjq=)oXXY)osa7qp9jY%mBchuqQfn$pop7-
bJjOqo=X7uoXa_+qRH++p:'e)pU0Frpp9b$!58!:kI^`)pU^%.laZYtpU9h(m^2bqpp0J3K#mQ)o=jA#
ot9t0ot'J"pUL12r3uF/m^;hso=jA#ot9t0ot("1o""M)pp^"+m^;hsb0$6so>(%6s1dd3otC(3ot0V&
pUU%.pp]e%!k,PFo>'t4ke?`'p:U(1mCN&&qmcU7pp]_#!4AQF`6@hioYL.7l+[54pV-@7p:Te)pU^.1
ppg(-o>:.9pV?aCl+cr+p:^14mCW,(ppp10pU>b"jNdA8oY^=<l,!&.p:p=8pV#t,pq-=4ppgC7o>L:=
oYTk/r4r0Ep:p=8pV#t,pq-=4ppgC7g!G`*p;[-Po>U@?ou$%2p;-I<pV6L;mC`M4q7QL7!4qgBo>U@?
ou$%2p;-I<pV-^Bq7c70pq6C6!4oG`[F4]go>gLCp;I$Nou-.5pVQ[@pV?O<m_8M1s1J!FprE<QoZ$RC
ou-.5pVQ[@pV?O<m_8\6r4W-CM:CA2kK*;9oZ$RCp;HL=qnr0FpVHU>pqQ:3s1RU:oZ-UDpVm0Op;H:7
pVQ[@pV?R=n%Sh8i73S4rQ=HKoZ?dIouHaFp;QC:pVZaBrPAEJpqZU<kK<G=ouQgHou?^En\k@DpVZaB
pqca@p:n,hY1N?jk0*\FqTAKQouQjIp;ZO>pVcgDpqlgBs1n<OrlaQLoucsLouQjIp;ZO>pVcgDqni?L
pqd!GOP/4<p!*-QkKEP@p<!'M!6FlSpVuU>pr)pEq83-Ip!*-QkKEhHq9&EQp;lsJpVuU>pr)pEq83-I
kLtOArn@%koZm*RkfibDp<**NpW3*Lq8W-Jpr3$HrknEToZm*RkfibDp<*-O!6OuVpW)^Apr3$HrklM+
Vqh!mo?[*T!7'iRp!!-Qp<*-OpW3*Ln&G.Arl"NWo?['Sl-8nFp<30PpW<0NpW!9RnAb7BrktGba5-I;
o?m3Wp!<'Or6G#\pWWBTpWE6PpW2gDrl4Z[o?m3Ws3LGcl-B"IpWWBTpWE6PpW2gDrl4ZhK&?%Sp=&Z^
o[3<Xp!;sLp<E?UrQG)]pWE9QpW3$Jp=&Z^o[3<Xp!<*PrQb,]pWWBTpWE9QpW3$JcJY)JpXSrds4$\i
p!WN\p!E$NpWiNXpWWEUpr`KUrlP,[pXSlbo[EK]p!NHZld,=NpW`W[r64rZpr`BRrQ(kq^uG+>o@<K_
p!`T^!7CMfp<`0PpWiNXprrNVpr`QWpX\rdpsf8lp!`T^p!NK[m*GFOpW`KWpriHTrQ5#uK&c(TpXf&g
o@<N`p!`W_p!NN\q9S`[pWiNXprrNVrQ=ldo[`Wap!iZ`p<irgp<iW]mEbOPpW`KWpriWYe`;kRo%<cj
o[i`dp!rccp=&``pX/`^ma([Rps&`\lIba\o[`]cp=/fbp<r]_ps9#fma([Rps&`\Xld1VlIkg^p"0&k
r7:Pkp=/fbpX8f`pX&BTps/f^lIl0hpXo/jp"&fdp=/fbpX8f`pX&BTps/oarlp/[iTL!ik1TF[p"/lf
p=8ld!7U_lpX8f`psAKUr6G)kk1TF[p"0)lqptJkp=/icpX8f`psAKUr6F*]MWjiio\/K]p"8uip=Arf
pXJrdpX9#fr6b8co?[3do\/K]p"8uip=Arfr7(YopXAlbpsJi_o?Y)6Wp0?7o@rokr7UMkp"8uip=Aug
pXJrdpsSrbpsAoaq:tu(p=o5nl.Pa^p=K#hpXT#fpXAocqpGDjpsAoaPj6]^q;1`!o\B,op"Jccs4R+u
pXf/jpXT&gps]#dqpG5roA0&op"TH!q:b,ep=T,kpX])hpsf)fpsT&elg05iqX"%8o\T5ro\B,op=eic
pXo5lq:>SspXT&gps],gq;:i$o\K/pp"T2om+DBlpXo5lpX])hpsf)fqpNCLU[@p9oAB5t!8dA(p"]8q
p=eldpXo5lpt#2iq:,8irS[\5oAB2so\K2qp=o;pm+M-cpXf2kpXT)hqU:r%bO55coAK8up"oAtp"]Q$
q:kVsmFh6dpt,;lpso5jqVh&(o\]E"s5*G)p"]8qp=eoepXo8mpt#5jqUG*)K(&="qVq/+oAK<!p"oAt
p>#ArpY,Ap!8-bmpt,;lqUPH%o\oE"p##H!p"f>srnI8'pY,Apmb%<dpt#;lb4(qjqr75+qr%>/o\]>u
p>,Gtp=o>qpY"rdpt,;lrRLntqr75+o\fB!p"oDup>#ArpY,Apo[s#mpt,;lqUM>0`:3ZaoA]E$p#,N#
ptl#,p>,GtpY5GrpY#>on(7Bdqr@;-o\oc,q;Cr'p"oDup>#DspY,Appt5&eq::/fjRN-.o],Q&p#5T%
p##K"p>,T#rnR8&pY,Dqpt5Anq:>H(o],Q&p#5T%p##K"p>,JupY5Grpt>Gppt,>mg%(-nr8mh:q;h2.
o]#Q&p>GW$pYPZ#pY>MtpY,Gr!87/"q:GQ+oAoQ(o]#Q&p>GW$pYPZ#ptPl)pY5Grpt>Gpq:DnC[Ia=Y
oB#W*p#Go.r8RD.p>GZ%pYPZ#pY>PupY,Dqq:PW-oB#u4pZ2#-p#>Z'p>GZ%pYPZ#pY>PupY,Dq!8./#
M=fWrr9*_7oB#Z+p#G`)p>P`'!8mS/pYPZ#ptYZ!ptGMrr9*_7oB#Z+p#Gr/qr7>.p>G]&pYPZ#ptYZ!
ptGMri:VitrTEe7o]>`+p#Gc*p#5W&pYY`%pYGW"s4dD)ptGMrrTEe7o]>`+p#Gc*p#5W&pYZ#-q;1l%
ptYZ!ptGMr\Fm#trTNk9o]Gi.!9Ek7p#Gc*p>Pc(pYY`%pYGW"ptPStrTNt<ro`q9p#Yl-p#Gc*p>Pc(
pYY`%pYGW"rS.8)ptCi'f(SUsoB5f/p#Yl-p>c&0r8RJ0pYbf'ptkc$q:tc"!8?r+oB5f/p#Yl-p>bl+
pYkl)pYYc&pYGZ#ptGf&kP'T&rqGpGo]Pl/p#Yl-p>bl+pYkl)pYYo*rSI>*ptYZ!!8?r+o]Pl/p#Yl-
p>bl+qr.M4pYbf'ptkf%ptYZ!!8>3^Vt^2ToB>i0qW@8/p>u#/p>bo,pYkl)pYYc&ptb`#!8IM;oB>i0
kiVU#p>kr-pYtr+pYbi(!8mS.ptb`#!8F.@a8#Yuo]Yo0l/q[#roEn9p>bo,pYkl)ptti&ptbc$s4dP;
o]Yo0pZD)0p#Yo.p>bo,pYkl)ptti&ptbc$s4d8BK)"g0s6B4?o]Yr1p#br/lf@g#pYl23pu2#+pttl'
ptbu*s6B4?o]Yr1p#br/oAo`.pZ)#-pYko*pttl'ptbu*cM<k's6B4?qrmn?o]Po0p>tW$pZ(u,pYko*
pttl'rS@D-s4mY>oBGo2o]Po0p>tW$pZ(u,pYl/1qV_/+ptkf%s4jLI_"n#ro]l&4p#u)3pu_S<p>u#/
pZ)#-mG[iupttl's5!_@o]l&4rTO(@p#l#1p>u#/pZ)#-mG[iupttl's5!YMK)4^-!:07Ao]c#3p#l#1
p>u#/pZ)22r8R/'pYbl)ptl#+!:07Ao]c#3p#l#1q;qV;p>ku.pYtW"pYbl)ptl#+ebYF)!:9=Co]l)5
p#u,4p#c#1p>ku.pYtu,pu)#+s53V.rnRS@oBZ&6o]c&4p?2,2pZ;,0pZ)/1rSmV2pu(r)ptl#+Xo#[+
!:9@DoBQ#5p#uD<puhA5p>u&0pZ)#-pYko*pttl'rnRS@o]u28s6B:Ap#u)3p?))1pZ2)/pYtr+pu(r)
ptl#+L&9j+oBc,8o]l,6p#u,4p?)/3!9Nt9pZ)&.pYko*q;;/-oBc,8o]l,6p#uG=puhA5pZ;/1pZ)&.
pYko*q;;/-h#*'-oBc,8o]l,6p?;24p?),2pZ2)/pu;>4qVh5-ptu&,oBc,8o]l,6p?;24p?),2s5a":
pZ)&.pu2#+ptu&,]_nf-o^)28p$)PAp?D86p?2/3pZ;/1p>br-pu2#+ptu&,p?_hGoBZ)7p$)/5p?2/3
pZ;/1p>br-pu220r8@A-rSEe:derb)o^)59p$257p?;D:r9*h:pZ;/1pZ)&.pu2#+rSR87o^)59p$257
p?;55pZD53pZ2)/pu;)-pu),.lhuG6qYg'Ro^)59p$288p#u,4pZD53pZ284rT!\4pu2#+r87/6o^)59
p$288p#u,4qr[k>pZ;/1puD//pu2#+r85EjU]'lQoBc>>r9O%@p$)26p?224p>u&0puD//pu2#+r87J?
q<de?p$;;9p$)26p?224p>u&0puD51s5Nh4pu))-S,LP/p$MD<o]u28p$)26p?224pZ;/1pZ)&.pu2#+
r8727o^)59qs+(Dp$)26p?224pZ;/1pZ)&.pu2#+r87)DK)P<>p$VJ>o^)8:p?M>8p?;86pZD84!9O":
pZ)&.q;M5/p$VJ>o^)8:p?M>8p?;86pZD53puM20pu;,.qr#WrSGr6MoBcPEp?_J<p$288p?;86p?),2
puM51pu;)-ro!e6p?qP>p$DA;p$288p?;86p?),2puDG8q;_80pu2,.UAi+1p?qS?o^)8:p$2J>qs!h<
pZM;5pZ;/1puD//pu2,.p?qS?o^)8:p$288p?;86pZD53pZ2,0pu;)-qr!)*jSnl@o^2;;p$;>:p$)26
pZMJ:r9!b8puM20pu;)-qr%29o^2;;p$;>:q!%eBp?;86pZD53puM20pu;)-qr$0,NW/\?!:BFGp$DA;
p$288p?;55pZD53puM51qVqP7pu2)-p[7Y?p$DA;p$288p?;55pZDA7rT3h8puD//pu2)-Z2V01p[7\@
o^)8:rp':Dp?D;7pZM;5pZ;/1puD//pu2)-p[7_A!:BFFp$;;9p?D;7pZM;5pZ;/1puD//pu2)-M>l?1
p[@bBo^2><p?VD:p?DA9!9j1?pZD84pZ2,0pu;//p[@bBo^2><p?V_Cq!.S;pZVA7pZD84pZ2,0pu;//
i;\Q3rU9[QoBu;=p$DA;p?MA9p?;86pZD84puDG8q;_80q;M,;oBu;=p$DA;p?MA9p?;86pZD84puM51
pu;,.\Gr`3q![kCo^2G?rp9=Dp?MA9pZVA7pZD53puM51pu;,.q!\+JqX4"Cp$DA;p?MA9pZVA7pZD53
puM51ro3h7q;IG8f)PO6o^;A=p$DD<p$288roj4BpZM;5puV82puD//q;M,;o^;A=p$DM?rp07Bp?D>8
pZM;5puV82puD//q;LN:K)biMq=!qCp$MG=p$;>:p?D;7pZM;5puVJ8qrIS5pu;)-q=!qCp$MG=p$;>:
p?D;7rTF(@pZD84pZ2/1pu;)-^]153q=!tDo^2YEq!@\>p?MA9pZVA7p?)/3puM51pu;)-q=!tDo^2><
p$;>:p?D>8pZM84puVA5s5`t8pu;)-TDut3qX=%Dp$MD<p?VD:p?D>8pZM;5pZ;22puD//q;D>3qX=%D
p$MVBqs=%Bp$288pZVA7pZD53puM51pu;,.!9!SNK)b<>qX=%Dp$MG=p$;>:p?D;7pZM>6!9X(<pZ2,0
q;V2.!9!_BoBu;=p$DA;p?MA9!9j1@pZM;5puV82puD20pu)52cMs:3qX=(Es6]OIp$DA;p?MA9pZVA7
p?)/3puM51pu;;3qr%P5qX=(Eo^2><p$;>:p?D>8pZM84puMM:q;h>2pu;)-!8saS_#O<#oBu;=o^);;
qs+(Dp?D>8pZM;5pZ;22puD//q;MA3qsX.Ep$DbGp$DD<p$288pZVA7pZD53puM51pu;,.s5<kUK)b'7
qsX1Fo^2><p$;>:p?D;7pZMP<qW@S7pZ2,0pu;,.s5<eCo^;A=p$DA;p?MP>r9<q=pZM;5puV82puD//
q;MA3ec1d3qsX=JrU0=Fp$DA;p?MA9pZVA7p?)/3puM51qr7V7pu282qsX1Fo^2><p$;>:p?D>8pZM84
rT3t=puM51pu;)-s5:$Z\c;TroBu;=o^);;p$288pZVA7pZD53puM51pu;,.ro!_CoBuJBr9a.Cp?VD:
p?D>8pZM;5pZ;22puD//q;M>2L&^-3r9s:Go^2><p$;>:p?D;7qWIk@pZD84pZ2,0pu;,.ro!_Co^;A=
p$DA;p?MA9p?;86pZD84pZ2,0pu;,.rnuT3MZ<VCo^;A=p$DA;p?MA9pZVA7p?)/3puDG8q;_80pu251
r9s:Go^2><p$;>:p?D>8pZDP=pZD84puM51pu;)-rntHhWrIS~>

%%EndBinary
grestore
np
958.546 584.137 mo
957.898 584.137 957.222 584.069 956.536 584.002 cv
955.85 583.935 955.156 583.867 954.471 583.867 cv
954.04 583.867 953.613 583.894 953.195 583.964 cv
953.015 583.994 952.833 584.008 952.649 584.008 cv
952.226 584.008 951.79 583.932 951.341 583.792 cv
951.79 583.646 952.225 583.567 952.648 583.567 cv
952.832 583.567 953.015 583.582 953.195 583.613 cv
953.613 583.686 954.038 583.714 954.468 583.714 cv
955.153 583.714 955.849 583.643 956.534 583.573 cv
957.22 583.502 957.896 583.431 958.544 583.431 cv
958.808 583.431 959.068 583.443 959.322 583.472 cv
959.65 583.509 959.901 583.625 960.081 583.792 cv
959.901 583.952 959.65 584.063 959.322 584.099 cv
959.069 584.125 958.81 584.137 958.546 584.137 cv
level3{
gsave
clp
[-2.7113e-6 -62.0273 62.0273 -2.7113e-6 924.021 645.459 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.7113e-6 -62.0273 62.0273 -2.7113e-6 924.021 645.459 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
164.648 647.792 mo
151.449 647.792 li
151.493 647.631 151.532 647.473 151.58 647.308 cv
153.331 641.301 154.789 627.451 155.081 620.527 cv
155.373 613.604 150.608 614.724 148.273 613.094 cv
145.939 611.465 147.107 608.003 149.343 605.66 cv
151.58 603.318 152.455 600.161 151.482 597.514 cv
150.51 594.867 149.732 592.831 150.413 590.59 cv
151.094 588.351 150.219 588.452 148.955 587.637 cv
147.69 586.822 147.885 585.296 150.121 585.092 cv
150.924 585.019 151.688 584.933 152.362 584.932 cv
152.364 584.932 152.367 584.932 152.37 584.932 cv
152.375 584.932 152.38 584.932 152.385 584.932 cv
153.577 584.934 154.479 585.21 154.789 586.313 cv
155.275 588.045 157.026 589.062 159.068 593.644 cv
161.11 598.227 163.055 604.743 163.639 617.677 cv
164.191 629.939 164.832 640.639 164.648 647.792 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[20.16 0 0 64.32 145.44 351.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 42 
/H 134 
/M[42 0 0 -134 0 134 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLH(rre#YrXAi:gCF/kYn$^JYnkq-r#`3df-'u<!%6SMr$L2Hf-pJKZnL#cq)>]?f/`^lr]f=*q``h#
f0T.#n4)t=k!no3f1G[1\4tROoi/J$f2qfPqci,cqHD`[f3\&Wo3q6"j^Iaif4FMco4R]/jCe*uf5'no
]l)GBq/c=Qk]HWAhfRIpq0D^\l$E/Nhg34ip3u[aj*pZNf7WIDpOr3nj+R)Zf899YoniI#onrO#m"tCm
f8fWcoT&=!pl43lf9>rloTS^,pQFL!f9kfgqNgiAig0;)f:;&oqj[;Lig]Y3f:hB"qk*VUiLfk;f;828
nY?#WpS@MWm%a<Nf;\J@n>H5_pSde_m&0TVf<+bHn#Q)]p8[,Qf<P"On#uDford>Yf<sVDs0DF+i3N-a
f=BkJ!4DU1i3i?gf=^ddlaci&!4_a4laci&f>.$jm(E/-s1A!:m(E/-f>I6pm(`A3rkA-@m(`A3f>dI!
lb`M9rPA9Flb`M9f?*X%m)8b>r58<Im)8b>f?<d*m)StDqo8HOm)StDf?X!0ji[GAqT7jAf?s35jimPD
qoe*Ff@/R$qp5&_k0EkMf@Jd)qpG/bkKs+Rf@]ZAldG^[p<iidldG^[f@ocDm*ts`p!`lgm*ts`fA,oH
m+2*do[Wrkm+2*dfA?&Lle)0ho@O#ole)0hfAQ/Om+VEmo%F&rm+VEmfAc;Rm+_Kon_*usm+_KofAlAU
leVQsnD*?crnc8gnD<Kgro!;&!8m/#rnuDkn)*Kiro*>'!9!8&ro)Jmn)3Njs5NM*s5EA(s5MYpn)EZn
s5`Y.ro<G,s5_etmc3Zps5i\/roEP/s5hl!mc<]q!9W_1rT3M0!9Vo#mcEcs!9`e3r9!M2!9_u%mH3cu
!9ih4r9*V5!9i&'!9W_4lf\?2mcXK2n`\To!9`"u!9`P/o'"]q!9i)"!9iS0oBFltm-3m%m-4?2o]k'"
s68t:m-F]9mcsT5p$:6%s6B";mHjl<mHaQ6p?^E(s6K(=mHsr>mHjT7p[-T+rp0"=mHso=md0?.!;>(=
rp9%>mdC)@mHs?0s7b4@rp9%>mdC)@mHs?0rqG.@rU'%@mdL,AmdBN3rV5.BrU0(An*p;DmI0N5r;#.D
rU0(An*p;DmI0N5qt](Dr9s(Cn+$>EmdT]8qYK(Fr9s%BnF?GFmI9W8q>0"Fr9s%BnF?GFmI9W8q"iqF
qsa%DnFHJGmd]f;p\WqHqsa"CnacSHmIB`;pA<kHqsa"CnacSHmIB`;p&!eHqXO"EnalVImdfo>o_deJ
qXNtDo(2_JmIKi>oDI_Jq=3nDo(2\Imdfr?o).YJq=<qEoCVkLmITrAnbqYLq=<qEoCVkLmITrAnGVSL
q"!kEoCVhKmdp&Bn,;MLq"!hDo^qqLmITuBmeuGLq"!hDo^qqLmITuBmJZALp[dhFo_%tMme$/Em/HAN
p[deEp%A(NmI^)Eli-;Np[deEp%A(NmI^)ElMg5Np@I_Ep%A%Mme$2Fl2L/Np@I\Dp@\.NmI^,Fkl1)N
p@I\Dp@\.NmI^,FkPk#Np%.SCp\"4NmI^/Gk5OrNp%.SCp\"4NmI^/Gjo4lNo^hMCp\"1Mme$8HjSnfN
o^qPDq"F@PmIg8Jj8\fPo^qPDq"F@PmIg8JirA`PoCVJDq"F=Ome-AKiW&ZPoCVGCq=aFPmIg;KfDbjC
o^qPDq=aFPmIg;KfDkmCo^qPDqY'LPmIg>LfDkjBp%7YEqY'LPmIg>LfDkgAp%7\FqY'IOme-GMfDkd@
p@RbFqtBRPmIgAMfDka?p[mkGqtBRPmIgAMfDk^>p[mkGr:]XPmIgDNfDk[=q"3tHr:]XPmIgDNfDkX<
q=O(Ir:]XPmIgDNfDkU;q=O(IrV#^PmIgGOfDkR:qXj1JrV#^PmIgGOfDkO9qXj1Jrq>dPmIgJPfDbjB
p%8.RmIgJP!;#[OmIgJPfDbjBo^r(RmIgJP!;#[OmIgJPfDkmBo^r(RmIgMQs7>^OmIgMQfDkmBoCW"R
mIgMQs7>^OmIgMQfDkmBo(;nQmI^PSoCMDBmI^JQfDkjAo(;qRmI^JQrq#UNmI^JQfDkjAnaukRm.LAL
n+>u>fDkjAnFZbQmIgJMme#o>fDkg@nFQ_QmIgGLn+?#?fDkg@n+6VPme-PMme#r?fDkd?n+?&@r:BCL
me,33r:B@Kn+HVMme#u@fDkd?mdpMPnFc_Nme#u@fDka>n+?YQnb)eNn+?)AfDka>me$PPo(DnOme$#A
fDk^=n+?VPoC_tOn+?,BfDk^=me$MOo_&(Pme$&BfDk[<n+?SOp%A.Pn+?/CfDk[<n+?PNp@\7Qn+?/C
fDk[<me$GMp\"@Rme$)CfDkX;n+?2D!;$$Xn+?2DfDkX;me$,Ds7?*Yme$,DfDkU:n+?5Erq$!Xn+?5E
fDkU:me$/ErU]pXme$/EfDg@~>

%%EndBinary
grestore
np
152.37 584.932 mo
152.367 584.932 152.364 584.932 152.362 584.932 cv
152.364 584.932 152.367 584.932 152.369 584.932 cv
152.374 584.932 152.38 584.932 152.385 584.932 cv
152.38 584.932 152.375 584.932 152.37 584.932 cv
level3{
gsave
clp
[-2.74771e-6 -62.8604 62.8604 -2.74771e-6 155.837 647.792 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.74771e-6 -62.8604 62.8604 -2.74771e-6 155.837 647.792 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
545.906 645.792 mo
529.446 645.792 li
527.707 640.448 527.741 634.257 526.884 629.901 cv
525.604 623.394 520.763 614.495 518.112 613.349 cv
515.462 612.199 510.345 610.764 511.989 605.215 cv
513.636 599.664 513.544 596.507 511.624 592.967 cv
509.704 589.427 511.167 587.894 512.63 585.023 cv
512.852 584.588 513.136 584.237 513.467 583.955 cv
514.379 584.697 515.639 584.931 516.887 584.931 cv
518.171 584.931 519.441 584.684 520.306 584.487 cv
520.963 584.338 521.337 584.15 521.571 583.955 cv
522.054 584.376 521.946 584.83 522.499 585.023 cv
523.321 585.31 522.226 586.651 521.493 587.224 cv
520.763 587.799 517.839 587.032 519.391 588.946 cv
520.944 590.862 525.058 597.271 527.8 606.841 cv
530.54 616.41 538.947 626.842 541.598 634.208 cv
543.013 638.142 544.454 642.314 545.906 645.792 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[37.92 0 0 63.36 508.8 353.44 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 79 
/H 132 
/M[79 0 0 -132 0 132 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 79 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
Jcq8?n-agUU^Q&lJe>C&c5;-M`YcB1Jf`MbX<`BCkTlWJJh-XIMD0rBpc!d`S2]UnJip.tej=sT^-]e/
Jk+-WZqZ-Hi(]tEJl;,:P#m9;!*k+\P[*ZcJmkKaJnC3Yn8!VkUhek,JoJ,:c?+Y[`cSn=Jp>mlXF5\K
k^AqOJq<`KMM6tBpkaTZS;HEgJrQmlerbQH^6-C"JsFZI[$ZH4i0^:0Jt2A$P+RB!!2G.@Pb[]EJu5BA
JuOs5n>q5CUo`IWK!2SccE`&-`j3:cK!j4<XLNklkd[+oK"LijMS4q]pqVKsSA==*K#=_.f#<6[^;\(3
K#c3X[*"!Ci6%h=K$<c/P0S^*!76>EPgJmIK$pLDK%-"6nCE3BUt4GUK%RK`cJ!m(`nJ,\K%no3XPJKa
khV`cK&?C]MVsENpu6nbSDr_lK&`unf&_MF^?*>rK'(DA[-*&(i9-m!K';agP3R\b!:,7&Pj@f)K']?#
K'echnEtnrV!d./K($,9cL?GT`pg\3K(7I_XR^u6K(=Naq=9F7Mt?`9K(PT*kOjH"K(X`g^@fJ=K(dOa
[.f1HK(jlknb84AK(srmPka_CK))8=K)(W+nG7b5K)1)q[JJ2GK):/sK):/sK)=d/S,@m9K)C5uK)C5u
K)DbKf):4!K)L<"K)L<"K)L<"nbnXMK)UB$K)UB$V>c)GK)UB$K)UB$K)UB$K)UB$fD_lOK)^H&K)^H&
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)_\IK)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&
K)^H&K)^H&K)^H&K)^H&K)^H&i;\<~>

%%EndBinary
grestore
np
516.887 584.931 mo
515.639 584.931 514.379 584.697 513.467 583.955 cv
514.379 583.177 515.639 582.932 516.887 582.932 cv
518.171 582.932 519.441 583.192 520.306 583.398 cv
520.963 583.553 521.337 583.75 521.571 583.955 cv
521.337 584.15 520.963 584.338 520.306 584.487 cv
519.441 584.684 518.171 584.931 516.887 584.931 cv
level3{
gsave
clp
[-2.74767e-6 -62.8594 62.8594 -2.74767e-6 528.307 645.792 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.74767e-6 -62.8594 62.8594 -2.74767e-6 528.307 645.792 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
756.018 645.875 mo
734.141 645.875 li
734.828 639.32 736.036 631.227 736.563 626.941 cv
737.375 620.329 737.014 612.961 736.832 607.01 cv
736.652 601.06 739.359 595.015 738.998 591.52 cv
738.637 588.025 740.893 588.025 741.344 585.947 cv
741.543 585.029 742.059 584.406 742.752 583.996 cv
743.628 584.49 744.786 584.659 745.943 584.659 cv
746.607 584.659 746.985 584.382 747.158 583.996 cv
747.526 584.856 746.962 586.233 746.225 586.428 cv
745.248 586.685 746.936 587.36 747.566 589.818 cv
747.387 586.037 749.102 586.039 748.561 585.473 cv
748.372 585.275 748.215 585.021 748.102 584.751 cv
748.207 584.862 748.358 584.929 748.561 584.929 cv
748.692 584.929 748.843 584.932 749.007 584.932 cv
749.796 584.932 750.878 584.858 751.514 583.995 cv
751.738 584.313 751.907 584.732 751.988 585.286 cv
752.35 587.74 754.908 590.618 755.234 598.224 cv
755.596 606.631 754.152 609.656 753.791 617.118 cv
753.488 623.4 755.486 638.455 756.018 645.875 cv
745.853 614.755 mo
744.5 617.305 745.223 629.584 745.853 632.984 cv
746.305 628.923 746.936 617.871 745.853 614.755 cv
747.91 583.995 mo
747.881 583.635 747.954 583.317 748.161 583.148 cv
748.022 583.422 747.934 583.722 747.91 583.995 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 1000 ]ct
[23.52 0 0 64.32 733.44 353.44 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 49 
/H 134 
/M[49 0 0 -134 0 134 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JcLB&f`8#S`<3g^Ym\tmSJ(''M&Q46Jg'b0O!rp7i@j[Qi@jgUr@ZGMi\g0]kV`5pmkiBKi]QZkr&j.)
mlSlYha,(EcpI=oX[gr5qad>Rl;$M;T2Y_gdo<PSn6++A`*_;,csYL:aCNY/ltNh@ctWQ!TPrk0mVne?
pN>24WHn5`d!EBRj*f:'kCW#N!.j<bl@I<7kD0(lm"X\YlA!ZAq2=a#l&+\_l&+8Too/*ql&Otgl&P7p
iK38el&t7om#q@2d$3d]ka(J"r0H`9d$X'ekaM:9nsej3d%'Bnnt,QHlC[72d%Kj&r1iGLlD*O:d\Qo=
lDEa@lDEa@k,7OCl`0*Hl`0*HqQ&5Kl`K<Nl`Kc[oW6EBm'5ZVnZi"sjfm+;m'Q#`rNkjtjg3=Am'lr%
l*frfjgNOGr4;I1jLOZhjLO0[o"4;&jLjlnjLk)uK"h,rd(m3.kJ>N_c,A)LYf=Gtd)bn%X3'#;Qcna?
K?XDBdEf,Fma.6Ig=!gel-oCUo$lRG_:JS8j43_Ohpp-,n^uaNo%;jOjkB(To@`!Qo@`!Qq:j'HhV.SU
lItpb_qj/(o\KK$iS;?.i84Iio\\K]d,FZUnDEWjp#+W_a5[*Xgu7qcgu7#Kp>kr-gZ%qegZ%\`ioTmp
gZ/"gh;eOq`TGq:p?(o,lfHLWpZL8mqWIk@g?-cHpZUf'o]Pu4g?6iJq!%Y=i99t#g$$rOo]t2qq!6Vu
kj@X%q<Zc"q<Zc"r9i,'q<ci$q<dA3o'F`lqX2u&qX44IhX/\ZqX<8.qsO=LfC%#Uqsa+DkO8<;f'guV
rp]pVf'iM*f'hSgnFHMIeaWM,eaW8'h"1I7ea`S.h=:=2d.I;.eFNS0nFG]3d.RA/eFEV2rq"Y1d.RD1
k4A$4rq+\2d.[J3qXiM6rq4b4g@t@9s7Oh4s7Oh4me>c9s7Xn6s7Xq7!;4_6!;=h5!;>RJm.Ja#!;Fn7
!;H?`f_3\fh"J\[d/!2*YkQWCrq`8]jSJ9?TD83Yg&%fEpA!#3^A-^_d/28ecM>ibk4uUad/<b9f_GOB
dJ3e;h>HpCdJ3e;dJ3e;nbh>Cdea">eGB4As7t%?dea">kkaWAs7t%?e,'(>r;,(BrqXq>htm$BrqY%>
rqXq>oD7JCrV=t>rV>%Cqu,%ArVG%@rVGgYkPj$/r;+t@r;-Ele,Inpr;,CLp&"[`d/MVnqtg!_iqrWL
d/M\ps82]if),@@d/ND/m/-YUfDGF@d/F%Bf_bOAfDGF@j8SKGf_bL@f_bL@p\rnGg&1XBgACsKq"rG<
g&1XBmelGLq"rG<gALaC!;kLJp\W>;jo"iMp\W\Bp\W>;q>B:NpA<VBpA<YFp&EeEpA<VBpA=@ZiW%^2
p&!PBq"t'fd/Vo!p&!hJq>Bp_d/Vr"o_\F]k5=lKd/Vr"s82Neh>HpBd/WS4nGMnThYd!Bdf9@IhYd!B
hYd!Bk5XcIhu*'Bhu*'BqZ#1Ii;E-Bi;ETOo_[#8i;E-BnbhnSnb^]5iV`?FrVPROnGCT4kkt;TnGD2B
nGCT4r;>aUn,),Bn,)#Bo)I_In,),Bn,)_VhZ)X6mec&Bo_\O_d/W/(mec;IqY]dYd/W2)mJHn\kPX`E
d/W5*rVQ*]jo"KBd/We:nbhbNjo"KBf`1dIk5=QBk5=QBm/Q2Ik5=QBk5=QB!<:IHkPXWBkPY;UmebB2
kks]Bp\aU[l2/j-kkt&Lp\X1Pl2/j-mem"\kkjWBkkid-!<7Q~>

%%EndBinary
grestore
np
749.007 584.932 mo
748.843 584.932 748.692 584.929 748.561 584.929 cv
748.358 584.929 748.207 584.862 748.102 584.751 cv
747.997 584.501 747.93 584.239 747.91 583.995 cv
747.934 583.722 748.022 583.422 748.161 583.148 cv
748.261 583.066 748.393 583.018 748.561 583.018 cv
748.693 583.018 748.844 583.015 749.008 583.015 cv
749.797 583.015 750.878 583.093 751.514 583.995 cv
750.878 584.858 749.796 584.932 749.007 584.932 cv
745.943 584.659 mo
744.786 584.659 743.628 584.49 742.752 583.996 cv
743.628 583.478 744.786 583.301 745.943 583.301 cv
746.607 583.301 746.985 583.591 747.158 583.996 cv
746.985 584.382 746.607 584.659 745.943 584.659 cv
level3{
gsave
clp
[-2.74767e-6 -62.8594 62.8594 -2.74767e-6 745.08 645.875 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.74767e-6 -62.8594 62.8594 -2.74767e-6 745.08 645.875 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\753\740\744\745\753\745\766) ()
%%Title: (Set of male ballet.eps)
%%CreationDate: 2/22/2015 8:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBjVOqoD&>?T+CB6*[h;Il+%$qab_Do!o>=8aT.Hb`#S4AIIMUNs/P@UR@_MX\@O\DkZnLcSj)JCRd-`GI'_G'ef'nNk22XG
%-*tl27ENn@b2U:dd^.Yif,<&7fW=^_]LMY"h5kjl:8(g/[QBtH_G@Y'3H-Y1)`RB)X4NhjAb'uQEXg@Up5H=uXmVIDm2NO(0s_3e
%C1m2.RgqOa*T1S1\'F\bT^(1qG$u<92iW0kS!SoKWF8s/FD@fAe2#6H93:)]%_n!%b@:CYJc@7qq==r:PM7nhYfC(nD7eV-ZN1/F
%Af-bDpbGe?0&0dHbNG&q>J\AJ8d;n0c+Ie"9o#;q@1nNV+q"@.fg1=!ef"H'2XCBrT@JmddJ5bWLIE1MjUFm0UDr^1.NVuG"(9A/
%9bM[E`4Ka6h6'6QBdcU)aK4u?nfN<j3$2n61*p]rNh'<sQjTrHgW?IQU1Vtn.qfq)JbPr%rO&&=k.+Kq/^?E/mN1!Z#A4s*NqhV4
%=81Ee)RV26SOmr65E(5,eZ2(7Y_-uPV5'AX9)jba-Z8h0lN4FOlTI@gc&<[%o!3JGn,Dqj.[_.7<Qf0J1uH_\f+"9^1^eV^eM0e+
%1Cc51\?LJ-J8sdHK2WMu@Md[JhmJ/.F9lj^Wa36<2)\m2YXN"6f%FrQ<Xg4>d67]JYktM=_N-SDK;7C$rs,eIfUHd1C\Z(_l<3(2
%_A4GEE/]u226)Am%3AFQs3,gD9gGCuo29rTr^#F-(VQ,:/QJ=SCr-:^#'RYhn</96T,lL0nE"Q"fk]t4/t.\+bIMBZgrmA'.c"\U
%%_eBWFoDjL=NN+dC8uT[REDM+_uD(Dru2<K"/OHIBf/8smkakLh%F)!n3J)p2PApbD(H(k%`Z]'[FWKfahaRV]aXoVSu"[1pBCOk
%niW!;TO)%3Vja@Nq;An:-(LI@E$;ep"T1/8p^I1,HA;/oCAdSdbnc?.J'>E^C?D)ADC(^o@GPe1m0nF5&#XFa*eo*O1iYM'@9HWc
%*sV^q&(0>=Vf`eFhQQm.fsh#*M5C`,dt0BNLT!qOKWtu^Y7_<+G-?GpG`?J$T5P:Ipk,q.ptP;m#CF7A8i!a5T/YrXHED6Uo3u/]
%o%qh0oFTkR<?R>8baEYY*skq&&tUd@21!9X03BPh3U0W+/T?i`W&#-T9JE`)qqLetNE6S'dHt9'.Wa$Sf)PPXX'/$pBK$%oqR]!h
%M%F>KiO2m2'#6C"K`2o@#TE`ofeYp>/QG'/asT_#VR%)F0=^\$mBZ,fY%j6Z])Yj*[m&'e,S$i4\be4?q=JpmieGZ9&](IYVSlQX
%HjH&e(]A4@'dH6-/+s:0maE\k-%bkq5&jKr/g)V.)fi)..S*@4<3:`L15$C&CifN@gT=^lp1ri.[pAUF0HLA^Mcp5Do?;3Xf(HOT
%`hM4^qoi>^$0NA@"G$U]/M1'gG$L=o%]<a*JTrW%O6c+i$W\V3ON#E![TfkbFLmlCIa_u?2]t%cMCO^NTqd1h+?QWlI!'Gfe)J7<
%ie$auIM`jaObof%MC''$.)pdH#0"F\4^*^pMA%L#;=[ZnU(jSkZ&$Ns5:Vu<"f>/EW>JT.-l*PeMF/Zp,u:?KPTlA*PVO"Zgu8BX
%XARB=(f3mU().!G%S@d7JP$MH#te>Pe!Ap6n4/7C5QU6^+NB"B6ZJd[TbO.6Tp247[5)SB_aehH0qan1/DZ&DK9D!fd#1^mH>.@b
%0C*3%@%82HU)Wl;6Epq(8e+JM-pf@#-.m\%'%MYL5c<8YJmt2ZPan.s;HR0XMbm#XfdpA*YS\u/V@A`n%!Vc%Cs.BmZgpp"<m`B_
%.FW8l>G\(I1h@WU@iL0,/_d]S.QKR$V-k,,&sT\-VIO8KTsuP3ma0Hl;AObtEL`P_Vc&%C>[25?<6@s=!"6]>aD"UmRrI=5'prMA
%L<MZPi(m[D!gFlCfZ.6R8i]u8@$bLlTd.k3@HD5#o7e[#AU3!_4=r&OpgnFgT9BW^.>Uk9V'J[$Qc4Y+^Dh[e8*Z4*ME7tT",\-O
%d%`c)[j;Fnn2lZ\6SKI*j;;3t,3*s)l\(?4QA;tf#.P^^3`(J@dsZ%ni-DP;hD,#JE?.=e_3qMJ-piaYK<Q@<k88,n@Km[1TT.mO
%EF*$8:]ugM\.BW^`d0/NHB.S#Nq7qm$7smQ`5d-g:;^CC&9uMeZiGf!h^Ht4E;WcDs,dAEFX<[\3MHQY.S'Yt$36:\WIRH;!,6sZ
%"`0n73MHX?*=+(p,<DJ0/MMtf&01b.&>]M#$]:Gi7&YYT:]mKs]Pr2T&5C7A1]]!kObugIQmbhS^hJEp*B8JO-2IU+5S7O!&^h&t
%'VjbSJA6B/`::;YF$lH,0is;'B:hQg\/XpN^u'S^?&IPmP;'HfGC@+53&TW4'&;"^G\[\)*TCr[jOV+r3PX^dWt"%?Lq>G)Ec.ue
%bk:chTSNVJ9CQbX\X[`-$%%*WXUEoA#^<CTi31JIM,Zl^3990@Mp#3*%PsNB,9?sddUT^[4?XM@kTN`'pgFAs4iCr2?o5o83,=Ag
%LR9(EnJmmDCl[LrLsq%/JA7CLm%?<M8\k?Lr;IN%2skVYHXqOnU;"ua5M_UhXA<&3RT^8cO&%brh;kpUjC^b)D*]%f8Z!bHTIQl]
%8h+'j.<+QA<"4>=T(s9p&Z(LQb<T7MknH`+AKo;gR7okf6n+otAJe_eg4BG!V$NLjP%tM?L]p=SYb4LZ'hB_^TF)0*JeBV1,@%\X
%^C*dC(9.G=RXfU-ig+-umM^m0(*J#HARSsm.M,2c8<?aMMEmnVThm;)?um.j9KE_P$NpV<*mYW1`F?)O/-F'mJJd^OhY?kM*qrSO
%;Mon!J-C6MLm!g`S5c#OfKlco@Km!m3LhPrX,E^/U5HfU+]]LTNrKfm'WCfl"">j\$\Dc,'$LM6A-!tRQ&,C'Li";KE&PiV2D(/;
%N'@IqE$1&H,h-dRMujnOL*A(%`0O4'755RG.2T#cKP?WhEnC]ti#/8fKL-TuI3@euMa7Q$$k=."1/qf,#h4A1[':q*NppKT6.5+]
%G(hIS2(jNg0E>_3Z;;ZV.#uY/PR+^:a?7jmV"6Ka!9=IknI(>$#Xd+:""Vb3$cIIT'B,!HgrUfIeqnII`5r]Q<nuUW8Zd8I.1U;_
%jG#"$7ief671Y-i'-'0n#&YD34&;s!JYr3P!qr:CY5qEgCf16m9!l88=<^Ml!PWH6KPge)f19dlVIBNqVaE&Q(?PWfEKW46F;#o+
%PUSGN/sr=DE0]@K$F!Yn*L6_ND?7Hj+Jka4U&kKp!:WT!88iGU\=kobWXX!0#rG!sg7\Q_;#i.?E6nd@ll7^#>bD8L0nA\*5_#0$
%!5Om##RWhfEj/D[eg/Y25YuQq@k(;3"i2(-":km=+)DJ76^T:K8a$/REJhL[rhfI[ibs^h.K64>3t_D@1J;BV2S#!8XCWdsBU:U8
%/8U;0-nl\H?Ra4K74=Un0mFZS4Gcp9B=E=Dhgs0!Tn7%!['Q393>n,?Co1lSk@<4S?hn0pEq<ROM;;uaYa^XN5r[Q%/#0kga*uPs
%VW:()^LV:'iYI1K4UsA<>*38e-13IG\JV![g]0.,mm7H<L_1Fj`0i"k/'2$&a:oOEj(:rrcac$V_<AKPKF&<</5%T$(3;@QSW/qO
%`f.DM!^l,0Jn3(6*KPNb%5HN.(jA.NpES#dfpiq(5mC(TiIY#1(SpDNZiVUch>j?>F/J#SciQ]?2e1RYN0tJ/bgDGAe$=M6LJEZP
%Hs$f8QSE+u3?Y'!aFZ*N$KhLFT[75K8)+UW>`gb-KC"C&N0B/-&P&YQkD0OP$,`9p0c))H3.8FI1?O$*m!Sa*>`[@d@m%D4S80DW
%jb"`p!W2->@#>eF_SiB\,[eLWVg/C"X7=OC\U`Ha*&_dt3/AJfOjJu1J42^2JYr*=_Yd48Cah[OI4?(RjT&#5;aNQfa7dnIfqgLG
%W<3;,Xf-<]l#Z71WF>#E)<fiV.[cW;TlBP+^cAGc*B[i%ZTo6A(Sh$?1ZmW;7iXX&5olA4ccRCL@?:\4`(6Oj.H]@3I)h6Qe$+Tf
%B*5%AbY`E+L@/4%3L^sZ,mV"mJP%8.bJmem,9='=9q-EsQL?@&1p%HQStX2RR8/a,-nQD)L^rK,TP=AS/2#KG;_o2/9h.OkJ>S%g
%l-M_e,ab[*Se37NRO1+ra3c\$OIfU\C^2f!+N\aW(1&>ARn,hW_]@;nbCHJ3!@Q!'=r;A@]<&R3f`@P-P60*adlJ+d,.XcW\Sm/=
%)JGT+YZ>6Dld/ohLRuT4l989,d'Q*4-S\]q!&sQn-["^K:4#Z]r*;Gq[;ZN`D=2K)6][aUKtJmSj@99Er/`9j5g^*.(>L-rI!+EX
%^*>iq*;O/3q0b39mCVnrdSM=*ju`)^SB,p6F#Ui"`:mR4jMWD^Ib]M3kIq1iQ65S0QX':&*;?pdgY_Sb+#kI!'^0P$ZXSaf@RqZ]
%)g]a&Q/$oLoG'GgKW>3$m!!aYNfTjs;UM;78jt^+TLTb7bS4bQ_Ok:6$A4in<1M<$ZFD#;8[t8.GEhm*'%pDCaC.sVL8:H\L!Xf@
%,o:Wn`18:2I1eS;<8W6>\kj.Y,WA?Z8.i!=iCFjQ8r5W.KKEab+lZ=T]2Sj0MK#Q!^ni5:<Ut]>`>1aW-HQq,@tb)HPnH)Xd'\H9
%NH;1cD%,JSP&hpFc4q_d>g[-G$@u<9*%TgPiX".n.9nAAGHLB(6fD9!#j7(4[QZ3\X_>Fa"j/O>MWR!$kbSOAZ,0csZ=CjtX,phF
%ga[<A8tS`[kcQ_uV'<HKL,i1Mmg;d'>"[7AR[2C/Pbt96/Z!/19hT3S^JE=U-KN-$ZPMorfT;GE]71gkU(.ZY;?$_A0=03hOPlY&
%Ds/QfljS's87=N2bH6D>TZ9?:q<%qdlh#nr%!#&q/du\p%gpaIh9rSZV_:.;H7[%l%Si/h@)Q9cM[T&+!9AOq&&S^E1dM+:j?;GZ
%9gYLSZE$!-bkQ,TqsXI[DuBM$qhB%dLB0:ZFL;\EB@>OcVJmU>@W1us.@>jFdY'nCTo1mP&'Jn]4-DZbFHqNq1>F=qSKPZ4,7KUk
%Ds7(L0k!n;s%^9M$KHoXa8mu'n;AC^nm;lPRDg5f"=5C;CWG;V90rs*34>O$@8sJ'![\9($1]52AOD7WksV)snGjSd#)YrZCL@@2
%d<Q=gL^Q;;IisKb1*_Ua%cd17FBJhL3"c#-*S!FTJ4^.U(^[b[.A3:<_9[_K?.2KiJ.Mq;:jC7E66s&fI!=;#AN\&WNb>)==tJ!V
%#VDi3E]L@c^[E$%2NaQQ!@<DnMt\?jpRO;rUoXa\30p)SnI-abrfUppb^cpaPbu]!O7Pii7Khu^RT<;jj`]l!dcm+]qSI:tTn\3\
%\`((C#3U9:JYq*&6?2k>E2#@!6>GY<h?<X[J>UF$?'l_N%j:Kj3a\1_'PO75=Wo=F@'JRE:C"]nEYb!d5Y[cGKm=b6.;qkN!Wrfr
%kR=A)@F.[b0GC9uM?oC8"(Y(Kjb9*B"pOt)1$WAh!al4dqkYGhBocthZeOMZhA1j27Y>LSlkm"O(kPiY?lC(YirhY)4G62c=YPYp
%kCV%u*]Of9bt%jkI^"d'm=GSbn,O=I*lEV?G]jH9(kZ6O4=CD$@PAoOT.<ef$jORV(^pVb=;1afi@g.A?SM*uO's]Wr\3PIOs)L-
%e`/5%428nn1Y2(PoSqmNm[p1*+R!g<)sGnE5gZ:WmfX!T>TWD.ZKqW2huHqcLc^-A3.GJZO!Zl9qV48m$f(+_F8:cAVcf3h4jeJB
%(Dl(L23Wrrhn9]7Foo^EE9_D/%X7,e?pu_IEHdH0bR*09p>9<PhdG$VJ]":mQUAe&\nqGZ,>K3Wc>ldpY8h]7BRuA%]4c59F2eLB
%9i`s'(V+,JdTahJjGXBc0tn=@Ifl*#?b#-M]3VqqKthWO*A6Pn+_M1n>0tZK:)7rVTS!F(/*L6[O^eRN.OmGYd%umMGD\]3PY&HA
%VlRk&VPQ+$V.hAQ91gjLTuWCpV)0d#C%F^@VC(BCf!:=2(h5p>ipH_baGW5Aj@)j3?N*c^UN4QU6K!_T*$rfa1H*p/s80lIo?<08
%1)%<]4<hsB4L;o'$o<p.e:)XkRDJ>97fuj%3Nik1eFa'ON4I)?e3t--a%,p-YrNr+I;qe3M]l_o=^:GLYn20nU/tHM(Ka3o/H_0e
%7i`\f>Jm_](-QVb$jgg6'%;WP/a2tk"'hR\O/Pu9maCda\UF`"&`s,tNXZ8:)&DQOk'Q>'GY(8/-I_!,WSPAV>/LI:'"E02M>e1L
%A/LqML9bS@aYHd5&\J`rqo5f,)4$Utn.e,1'pPX=B%Iq4`%pJ$O0N,@nPC!r098ffEf[qB(>8KkMFNO/7^)L3,o<d+aVclg^B-HI
%622Fa6`W&Z%GVcT,),ha=^`'^+os<K6<p6N/nQXB9HQ].>`eNkaE\Bo0C.lKpG+GK91m\4jW<TEV?%-Y*_0k2)+MdRAXFWE-8Gc8
%cS%(6;q?a4aZrT?R9+"iPp`=Z49:o%+3J'cjcLDpSu`D3:_pUG$;uC\oVrS25H)QI(aDUqH5P4rLo(UfDNSsG8O7\ge)ULqrXbE@
%O:)S?0d:$YIKgVrEs]#pMrXks#J7pl?*%/2QSdbLm4n!JqKko%2.fZ]M[4)ADSs"X1pA87D6\j"[fj6M$;tgN?7Zru\B$[=E^;mV
%BTNVJ!u#9tZ%<B<,6&&4_W(Au$:1Tu?JSKhJmIr3o7^h)iV?fsCbIp/V%D^5R;A1U5M>)a*?W2B/K>stj(%.sbK1bKcssgXV#TiD
%\3n1SmLY4#fh_,:nsHnQ!LOW=`k8u)Fbu'+F.#E7k]-6AbFr-N\7<I?hcF,h(uuYSQ^WD'@fF?#!A9O%httNX`;G$YP+qkT12(*F
%;LV!C9&u67@7#Fb=[MR$lf9OXSL)-Y6<?5%j>)QO9I,rrI[JS0Giq%>3DFV<K'GEmjEHUNi'$,!o7Xkc*55^["E,'6pPLEo.t=a)
%$!\mG:>ZDK.#d"/k&1n(pP?_rLq+bL$/QbqCds(BfjdY';OWp"[$7F^NWT1Y*`JMnd^579rKh6PoRsl]XCJ:;6=+-grc-#;2)s[9
%8jcqaK0@6G`r(RQSA7/VlN'!JhDPkl/Di&kB12`d`J("R'*c(>a1>t5DbM!ij+lF.?-Pam19hr@ISksg>a?DR^)L\:qo#0i=j@HY
%A6$na,<8te862*3Hm\,2QF"DlH,'hB'.jhL_jr42JJ-4Ui*W"->h!t_0IcaSE;]jUP;Bt0E0qd2$P.jr6XY-=9Jk?o/C-uS8kFAg
%r;6W(lZ6M7](7t/l.p3Ieg'b+5`bFHSAG":I(/e<]J5$7;;R[RQA'S'R!??4BQf)COGuW$L,/.[.A%\c'+LuK?-n2o`H&k`+P"TE
%@>[>tKkOL(5CB=>\=.^,N1:>H30uq$odM$3^VSU-r/a2rOp;BVHPEj)5X>_h>[.Oi^P%r.p_5D#*%:!b)O0J4%=(Nl*:u#t1i5MW
%Qj?D*'S&"7b0Jsk@r0:,'+H+DB8h]1Mi!/t7Y>MtP`f"3jlF'U^+:)F&JG?TQ6_>'b&Tak,Iq7\0UcZGTH$-oMWBDPZb['IBn!8p
%&!c+)1At1s#VO9\F=doOk5"u:!,/"1'r?:Y/=,&:kf`W3a_6sf['[l\a8\tsK=FlCGfJneE]09tVu2eV<=?ZT7'MUUQ/PdmdIg(!
%M>>+^H*'We(9&ikQ/q+WiB]1::e=#bIc1;^--G\33F=HO"uEul'Ej'a?4>'O6K'R7r8NLG=<c'!#/-g8?N.VZ'018SmI'e(2jD@m
%HZ&_@Z;YrCgc_Fg4JUb/(@E4,1$[gkk27-I?Lm)BT5,h>fSRA,4T'V<iQS"iO[EcAn&gdM7$c^tmXGU)lF[._CN1NW]&AYgIKb8j
%ZLQg8k3e]-c"$1A;.K&7_l=sM*;f.A(:[tdA&``9peD^a,pU09CiW%iiW?f'm(6\R-Ob48nC7@u/O):'GX?k$]:dUV>qVLr?bB;g
%S1PS>m>*]Y\YGulC%h(&@W\j4S&@a9Y2FZF3k[se'(6A>QO4]@It&<+.;;8)J$6nWVPQ+$V.hAQS#7<+R[2C/Pc"D+1i7P*?EE\E
%0%TJ!FKl&U]%C_ibC?b:1sdNXF@cR?IebAYECP;F#H)MZk`Q.]Ubj[jdJoU>R[+/hUk(-I9hTh,Hi.gSQj1/"$!4unZcCRHOucE;
%#>47qSu3W.R[2C/Pbt96D4Z&IBj+-X;OWmU]):MP(YooFkQ99gP5]A(\dUL9pD_]\_]csHcd8G^6uRK+#7`jj(qRs70eQoOR]k+L
%NQ,^[,%fA6mYB/K+Kot`8kY;3L::CYQ21f;jcq=fhsY+;_cT_W98P?_n0Yi1q"nTn'6PEA7*%CQ/dYFH-c0[5.5lt^1Es=T,-XU?
%Oe<mArV](+FK^p_e81VW1:JM(r!Te@7e4@Y_OF5j(OsWlBjRm6R%j@^CORKBH@7W!8P0]4!ZpK:7H7X3B10'Prl$P^':d7<62XWJ
%GSr&u$pF1/&lHK3H(IFtOF6B397C7t`(JFl7?R#IP(XRl60JOiW1mt"pcjMC0>S'7_W!b-S%,1;mXsIW."jNhq0+:WgL9l:$@]W$
%pQWYc<QH&'\hU5sps&^UA%;8,%IVNY++Cgg5.Fgj/4E"tgTrRh^g(+MmT,/#X2'-trk2Gs67OA?RjDMHd#Z1b:uJf1@#jb$jVI%,
%!U)],*j_AmM(2H4EK#S10i0bs5@NVO.:39];rM*mb!0bG/EZ0Ea^UqPE5b3dE\kd)?7Z:WV2kQFDbH!(<Ri<_'6jT_H8G])$?&u:
%mhXp8-f<'t^[i`4j=%KCT(!Wf]#6<BH5*i2Lq"$c>SO(CDlY3MbJ1M2N1dMQRlg0Alk\e[[UK6?/;Pq+!m!4[Rlga3/5ZUs%XX'A
%G5u%ujcm5&YIkOa)aPFcJHKh)bEKl#^'B@4c`;^'jJ)kaj3WKhE=dIeE5cb[a:Ui1]/b,[M+,j/NZq3?!fA[1]hQ'&JI57JSLWX_
%/:sJqjfN/!/bR&Z4\@r_kBkr3P`IALJL1:?h-:+H3`<58,&XBRUnBh)-ng/c#]?Gq_P>NnIQ=(Jagm^A'WFG-@_eL1"W[q8YXB+$
%5E2T_glAEJnYL?%5`X$`/+]R2"e$o:/F(TI?@Hol<#idYUKi3uPBMpW7LQRW<$XcXQ1!#\a[UQe;?%tKY#tNL8%Es1V]?3ZNs\;h
%F_hKUnF+p;&s/:1)($JcVBE9uRs)\+Ua8o-74M1B6F!>.UeFBO)?ai7ZCqDq;1C%79(3MLNpN,%DDNXg[O@FiVC4oqHIbkV$_eI0
%W/B>o)35.AJubN$[O=FU/s;CK%NmHY4FfJC=Wcdj^sGo8^faDf3(2^uJh;!>EeuD@$K9,>L'T;[.K:IO&>FPsb4XT2//$PA"%<Jg
%Gli-G:a%3jAH<bcK[Cu;@V^WN"DfY`@iIasJ>#4^*=EE'NGEt)2<_=F54[ZE[6`r^=ScX@F^45gU^]5V787H9Wb*\WoAW*TI+Eeb
%pn79'@<1LZiu-e35Qf^o'3^!Pb^]kZPfuH;l+^Fb(SkQL,e2G/`/!iB,"*\&F#5%]TCF@Jld<$]1caT56Et]E>08T&X_JaM?tdFV
%PdQn[J/`sQk=t`pZ)in\AIW8)P"k8oqquNl<RXF,(eC871WAC?cBuQmLYi:SaD>)2%-YZ^VC%73S+,0CdS0XS:OG@7V5js3ZV4Y'
%*;H0T.W[0+9a)-^6Gjg7k;n%sD4kL&Xm_nTPJhEap9N@2CtBT]>2sXCiFRq]@g`8,q!Dt0<pt>72B0KqbU38\ra>b;Zg,s$@]e(\
%2&gH1kErH]1<Y1)e/Ro=]%cV\CZiC6f3-4s6,Qs>mDdm[Y%mWEgM9Un27'R>k_<I(5M_q`O1nk"Q<#a[a3\DX1>:fE>ORD,5DM']
%ZQur/TmuXd9O\==]sCX3;,0E"3Ro\Z'NC5o9ioWmpm'C0$'p=*-FL9-a7FM,2>fVJ,lg+T=N"RSCA03o6:AHM?He[9]=dDU=H23W
%;TidGJ+G/GI'_G'_E@G7@A"mJm=Im^RmsO78[-!$la:7rR5P]2mBt9\mn;F$o]f#ngi#0O1WSVLl<^7FNF*BLC@%+8c6ooj7e=,o
%lW/a;%r"$EC3NRVHV%U(dX#@2!!L@4$TiPo?FfHOn%l7UiRY:-P?OJ;IV"Mqc)XIgrK6<^jMhL_c*3&2;%k$I,e]C]==2:>o_))A
%A<*.mG/XQg[rk]O,`nc>8`ZhiA;OWUAIO44kW758/S+'?9?V"W]XHR3[M,_gCcZ!P.5YsHbtbC1$sikZ/4`k\5CnfgGELQN27n]Z
%G'^1AV4(\ifqk-CWnGM;\S/StrRP=6CRnG6RgIn'JVeD:<P&Ab3`YQFeLjkh;UmC"m;<:\>VAuP(BU-5oco0?2@T@bKeEmn<uTH,
%AFQG3PpgB\M$Hc&Aj0I2L6=9UUf-VX,,QTm:$).!QK-`V:%LjVOVcSP:UVSB#tfoh:/)K20ub>m0Z`!C9W-1?/QKnH"9):UnGa8O
%L>Q2P'f1<(oJ$X\q[Fp\::L4hq_Q'nJV)NsgBgkOhK!Z!O9FmKp6#\*e7rGRnJH:"XX4n\,u&jT\mk%S[DG\>?>Cf/IMK=u3In+4
%.gqhA:):!Y(U_8%TeV.!/^Nf"'>^EmG#Ctc.Fd0!c?Ha$X`\DHq-!n8K;Ohge0KT2[o2JHo]g<,>p.R?U+2,VW8/_fne>j9kOkNn
%0h]AH2d5;-XXeT*9GY_[AS1;S<YF_7[HRRf\N$3Lk#o7jK^BSfDQhNg\W-OV;k".50^Vt`CW#8`>PotbAaEE8(nT%t4\-$MdmsWT
%f_DV5@*J9H&LN'Wms<VI,AU]9]nTtPZcF'W$!IQHX?fLb#&RCsmu25+`"MW7n\t^i2D`S)D:c@#2dSG"#kO[#P-aA.\0]MYL8[f:
%9Fnf0V2(O#8ImGG7I!73<Zc@6QT:r"b`qsc,:cH9a9-W5oca@i.#D8@<S:!#SuLUlJsp-52kCVr0m\i8"ErbRDk-Z`;nqk+-k**4
%GiAdQl8P;D;cr<DSo,HCX^,3(P.XCFojhH*4Q)&,A7eBJ:Tn)Cr\]-jFaTYo)Q[#/ogJNCp]D2YLD"8fr)='K#3]ra,cB5f`"]D8
%6eF,l#"`@78F),#*"qb;?MaeWnYF?c2G_D\VMuUl(:*23ODu2MFkQK$`YNMSD[Wr1g1>?k8$,qg\m'$T]%(W/NM4X]e9!ShVDD^G
%9P93,F_X-6m:WEs/@D+pX8S"1#olt5s(XL+7*1RCQBQnV1Vn+E3rG8i;BrT?YaM@j,:.(h=^n;:5<0>(lLkDYS4TrW'15Ejj]-g4
%[c].n*u'9O[^>r?CAWZhl3S4Q!;70tV#El]qW,S297OE9ijmS@_adVB958_I]ugtV=h*EZ=CK;MOr@Y)_b4`h8I[>Pi?^@oUkY3B
%&A^@4=\&umW<)7L'0-g8cV.Q)DIn-^H:-,n]p1[OL9WRD`ACJE,`*/24^gdB6j[SEMWn6\ZmVrB\&@[U_i(Fb0@jpp6anu'/3Snb
%0hkV%c-.oek*.XA1n2st&E'PNMmq2dB8/@B=e,JDb]+EsmC*)J1kS_q_.ceT]$BI#MHBIM1JEp:b2aG<0Fa:U_O%jZo2B)o.:)&M
%0ccN&E`H8[7$CdEp*;`CBtk20R&Bgh'.kQE&(Y+G4QHL3X/$R'@jmkRZkj%O7SV?<9TTT<0.o<B4G8eA!46JRnZY(1pBXiaLdfi#
%b!gCB;@LSR7-h9_9c2=J.n"ZG`9Yr%gn/JiPq_EGlD`?'^"KLX&E_7/\m)`%b4)ECbH9:*5<"jD+qFH*fdf8!h4tgUnBbbVNQQKR
%1PnPk/%=71X"Yp2Pa!N=,O:`uccEl?;:D2LBlo>.H-jgCe$_9!Wol%5hd9HAhI;r0(X3VlUhNH9(c\BArMJ!#9dhk0(Ul(M_$R#X
%920t_G\Z*$9%30$N=7Y9D\^O/*&P/#FqUllVUOqf,+m531#:.1]Kr.37&`kE^-OsCZ;LH&q(0U5WNgdg.7*e7H2<\/q?Hcn#)9!n
%OA@`49OEsPB',Jp6(TjPoF:B`%J#`BVS$o+H/gGZOFJie0f`+!jMB^@:%E![R6O("BBMDVkU^<Y,3J3Gn<72U]N=hG8^_J%%'R<W
%]9TO'J(^nLdIm<V@i#l%5G@H&a5'q.1<f2&H'&9bS^cq]DMO%TT%)c*8cm&n\_HYsD=;f^J2PGALp?XedrZ5$CQ72q.fe3DM,$`^
%4CM8GQ?Z(^-"e)aPX1pnRdoQ"1O$+ZL>#Edle7&j4!Of\As%/j\BnN5<#`=.=d.D&lHT%=W.dr)R@#XYDbaX\964W;2\N5?ORT,2
%\&A,*,a\:I<i1^)k>ds]@[cid(.-_[K%^Vm9@36iMaHN5N[035_JU:V_<lbil:HT?S-6#ac4'9JCm(--;Lpl?XM5.$hHtNpEio:q
%N&e6.'^iQq8PXIVg_X]PJJjsnr&1N+2:?ffe>1l8</tRRN6DrsAZ^oSR<L@>9u1Yo@)h?$R,o\6*'u+b^(PhAFrR!1,W@DN+jAh=
%WgS/VmFL`Xb_4r-YNjF?SuLs!21:;V;oi1G?;EGK?U_ae`:D6-=T5!3bgkfHFRKdI`-k"a\5in(*(h=^:4;DgoX:(hRoGf2`-7L(
%HqE/DT#AiDCMC0HCdfj)8UMasZnc"?017<d)qf.V2pEEN0G@RD0\JY0$0tM"]GKtt9p1c<ZcT>f8jFtt8SD[VEiX0FJ%7e!+]=Po
%Fkq4-G/d`]C.UmHj]%Fg?$WJB/L(Q*Qh054UVET.N*TYhrM3IsY;JF$5t]de>H]#'PA%=$dn)-keu3m2[76m,Wbns$\_U^=Ga-oW
%C2#AU\sqdR%C]NCF_aA?<Wj+hVN[2[)bH>pWUt(SFZ50U0@DhRi:1I(+E!rtPA&*gc4Det05;e2]Vf%JS[Z7jWKZ9O@dO#\:0"rh
%*WNUYq:*hf2,iVGZKh_Ol)sO\VT,fTa8^;D/AWhQ\$<KgU&pdtgQ^^Q^P[(='^L%b\HH,ui`q@^_f6/`a\k+$R0n-S)Ff7(_iidQ
%LJTP<(:;n4Xd?uMlo1H9E'I-TE_!(]1G7T-1u#.5B"`JX^b:mL^>D]]b`qZEfRf@YV3EX0I+(meel?9q4Kp)f!19G2T9F19gP3l2
%gFSb/)k=!6ef!'\r@]`#/4hD?Zj/uF42E1F4XQQGKBYrCnQ2i]kiOMFDRpX*jX%P;.VLf:_SU\sT1X8-l-.*6V5Dr1p)GDNfJMtu
%Vrf/ee=>;U*9Lt-ge0bZ$J/oMa].naj3<8O.!N6eP?frfgSLk?O09CgY:CUAl`AS$X9U:qk-)*tB+"R\]MW1p8@47'=7"PhA;B]i
%"O$St`+=nFAhC^(qVPn`;_K'5>@cgmM)o@Pk;6(eoKl;e%I&S:IiOc/"meY.TM:l9b`=:N(*%egH")(EkC8gYcCtr!)b]XIVBq\>
%'1m-%r.D=Hj+2Yp.*_ZYaeT6;I_R%9b/M[e$e7f;%WNDeObRVHTc3O]Df2HHK)I(HZTiMrh<_'DdrmKrcj2QlLQ^q;Z_4A$1Lk.]
%_]/k0SF_i?2VI%_H1]+(]p>AjWRin'MoN-H=fFi"MCf_Q?6`2s)A>L[HO_SF8_/u,1o==:9e@9i_J)r,`jCp!e=r(/1hO\#0fQWk
%<0<@Uo2%.?g!E&)LM?=$6C.;V'<+^nYt_j,6^];p8#!tuQB$6rFEDlso/X)cFN7s?QS1q(VoC><k^5]u"O-P(;Tepo.@%]%n>EIS
%qGYi.N8L[tN93jJ@:\6O+&(S#9D,tth]&<Y-/aud^,IVn;QB2^qHg2jr>WpO0+jd5NA!T!pl$\M$!*?AHrE`2;M?c(pelfa.M]\j
%6ij,?U%0'`eNBjWpfl?=pbMh3%r][pcU7UcRjTfVO/8+;[Cg5(nrh'!dnWG92So811Nm-P]L8"aTb,G)X<kRUBPR4K,YD95`hj17
%Vk/.XPPm9`?IMQ[k!GQ,L\)k`@/ERu:&iJI?7'_5oC/o.+pp4#Llk*<RMC";\he!DSXBKSB%3B>+Q=elB243Bc,7^h$.dHpH@OFT
%095nTYgF>-.47E@R?7]6&ie;H=)OeleW7DT=%T:HpHLF4p#QgrFDnq.r^S<ZD2P_rX6s$$)m@XPE*KZjEY@"*VOllt)8B_Y5-i8M
%nVa6)8]2[biA=KOl/teJ^i*i+qMbm=-#d)G<kXtJN@WorZj3?A2WaRJ*o=(k7&6_%eJ"Ikbb09F4(\GG<+XO5D&7'8qd0C,f0ufJ
%:DU36TB\5HBK'jmXFls9C)mWMY1lXeO.$`Hn:jMFZ8p4B9LK"P]1FTnXoIM^9X#KZEF$&EO;RPS'8*LlbGcg[HH9;bC)I=+[^;]8
%n<Z!3YtL"_T@>(N[>*ik80:rRl]m*7P&+<"dn)-km?&Tai6\LS>.=2Md<Pmi-afsDZ]SciPtLMB2^2ENZ7)^B6o>@];7fCVjg@<1
%K/lKD>+(:>P^,eM3tIH%8Y@Ml7/?S;@icgk&lGU,7uT8;-)mk!NC6?:WSK%$8K*LBXmB[A@SmboQ89/3nt0?d1D#J-">sd\*_9d<
%dTD`J@6&BHMo,GqYpbH^KrO61Be7DO"YYj(q$-mX&$[O>M"K2lH5__4gLF)m_+QSB0f=fd`[qa>P%Qf0(M>%O,tq*Dp9I]Bc9_BU
%=\Ni?F-Y:;&cuePci6b^!3JJ.^Xk#WZm=e?=im0)#;9#GaEkMmE)Q>c8ir4L\pm35'&;V4mt<=0(8QU9-$1T0"%'J]gLJB/WDO*1
%*n;-1FnW,o3.tVLd*_^$W6\rj^\l@9_TUL`5ND8%Ep`:7pLi=J^cB)A2#h=;?[,\rT2$tMSQ^c93OMNi53VbHr"#Dopd/'?ZN:*D
%Dp/%e/&snn3q;7a9rm[c>q)1CplFkL_"-@$RNqST$QZ/sUL[*B0l;n6.&s;a#=i4"/foA3_ZuS/f2)>13ILZ-FamtiOu^U2qQ+5-
%Mt#g?SgB=mKrH''Y]/B9H/fq#0PTe3p[HP3HekjFQZ78AI,;Am.cWUgX*b_+fJSTWhu4,N#4*HbnGWC^hC!_bET+,WBQoe=/]DW<
%-YD<D1;@t[:$;JR(@T9X-Q_O<0H]^iYY2G-^AV65q[3DUJ!@U@?c35c7f)]NkKS:YNa;TJ),"JI_aY21.lJn@FA3P,0'qQFfnNjb
%pjdi`W'40O/7H?G_l5.C%d<5ne]i"NAJcFo3ZH2_QHkd<1cf86gid=G/3ed,pr-?d,FD1QqWH(@<MF[eTO#66\b=%#V_f(%l.T)f
%n@V6de&ONRTImt'Z.D_@rY!IHDZ2_Kih(/385Ws_/D4(Rh"(YgTfA#W-TuH7\33^Ar/mL#@,'oGG[+mXfBG23VL\UC;%VRM\0sik
%%g>'h%]TI4hAhT+bMqENc[;F,kMiZoJF=AKjILV!1-];sSLKGZff8QXqM7"i<V0u05Gs0FO'g5cp`;WqPcQ7[&LG"fLaE^?.l8JD
%96S8cbsK!PBF5NAfuQ+AUK2Qpm"/KImp1$B[;-)S9@.5G+.=)[JnQC<jO-Iidih'YCR^3,gj!,6$Gt>3R#LWt-ZcI@/0p'[:21dq
%Z2(uo<=p#(8tG^MRV)E`>Aghep;,/:`pI$O;5VfWG2quFHHc\.b=B6\X-OKC\u;Vclg8ZR\\1\>f55,[geQI:fDasPHd1q<R?lUu
%g6k]q;A]*oC#P1a'=Zd\Dn>=NVLh[>IKNNT[@iY#F"4\Z+)^7$*,GB!JQJuHDDF^gVciKI#bRr1cg<HQ#n0iW=nZ$e1/+M02.0I?
%D6MuB1QkpX)MVi4SQ^bZg4?fM:j(;0hGhaiLSm&=m:G#[!-%9EDUWSb?g1Nt:OJhYe6q%dXp:MDA:<sVh[&-Oq`XF0=2?oG3D(5S
%H@Y<NZZ=mgF^^9S?;%ZUPXtPPHJK@D(c/t[NKJE^Po=i#DPP[$g\Ac61oaOV*rjj48nco]'($cIk/@//Rjh?Q?2)!4YB>6oN.nn"
%%pAdIj0IiSHC;Z_.p-O#T21n-)4dO0*[-<(^Gc"nGO*Lp[smDGHM(%C+oNU'PSkKgok/.Y-4)L%g3^dKI6Es;"`="''t92O&SWi+
%3'f,*L[N&kVOee1FlCa)c0F4ek)%4&bLEAp'%i&nqmttMc=cja+'sB2BdoI.!0mT#0Ki1.dqq%I"6R8?oW44@?e;g5m?N%k\pn[;
%]f,:+Hoh=a9rWWOdB-tf3c8Rq_a+t#!rVhkBEoJq#ii>*$7;\("ZSV3nm;1))cH\JD$`6INJD@?b6R%h&$OeUX+!=h6i;d'd3d(A
%s$:QkAH:4bHMM^E.$]+\"fR3"NPC%i>f&[Z3[q/(dVN!ul2XB"CqOS-UYkqkZk)cL$+/P>%QkEc3d;K%4:I'S8W?\coL^+AE<IJM
%@EhQao9/(#R`'D)3hb!\n\?#2komJR4dKap+)K``.ADTW:c.#'ei_7[;%/TkL#^*Ud84_o5,MKG]%/nIT^[Yl&>Aq]"SrAap/8d+
%JN^FBWS8F((Xc&<8"\X^`_OBh.8OJ)T^_/7IGR*DCKr\P;)/oE/WF@u4IKB*i*>%ZSP\_scl"-FoKd9o&ZQrbl6q6\1>Yo5c71d0
%EeM\-&Q\&M]_O2"THL"M)ca_uj4lN/P5/&R#crQ:oFs$u^8I.8?O54S2^4,-;;@EqJ[ZT/$[o^Kf\bnYn`I=;1]CL.:&>ZiDRJ2$
%DCZf[/_I#e?+Bl,/\k.%,HLZ^N&R$H't2Dnp998`h1,6"@sD4d`FHr1KAW&U^[VMFqJF;4BP2PlC5fu@%">7iTc\YoaKHr08!iio
%A^Ci9n[/dD'j8VND5L>Z09.>6d:r:J<,ZDf#09&l2XP7fftP[jT"&Ip]5<ojZl*F9#^RHEnAhKl;l`s4noFrHnOAd5BB5@FUFsX7
%11T[+grl2QC^21,`\feI)0/uW9"Wap1%1#i2d<CS:M4(1:@C;IRl4ra::;4/:'WX:Y9Bp,RWBk2n1NN>BAq3<Q"HdaDX^M_l3t4g
%g[-@dZ%ef"(V"BK?eLNQ..T7.:*1@>S,M0cp.:6r)PPM;@eS0Cfr?mL[HNS'!GYL!"UsZq;d#>a+_d[s7OBBR\jXjq7A=;aq=>0o
%"G;]-"!E<5(A8Z3OT^AA\W''dRMjLh//tPCaHU?5:%gQ9H0:_#mfS-FRQ4Y;IeW-sF=$NG*O70YT[dpde,jGc#EJr'O]Mq?&_q,U
%;8af!/!>?e:j;\N>(ZU//`gtq!s](IeKb&1PnEj>d-9,0DF\_N+@m"1(Rp>+dZKN&gT'6cef2_DdAi5oPoj>bda%-q\8L[<A8.\i
%(Ytm(])gG<Ci_QtkDe4//$q0N>i4<p5+W9D7GbauS2fACT]fbU3jm.cCcEC;M1Lh//hH$-qkTN5E0"i!G0XmZ)g<"D_R@*SH[nh,
%TO7bA*41VVRUSc](RkVD#j>W\lVWX5:-aZd*B+(6Gl`TnWnIAYBPAC;N0Ko)DaOXAQt>)j-'2Y*_bm]EZ#HmtAu<r]`HaUTP]WKA
%g;6^0CYeL@Z`5_klEMo`2(Bb(_/f$U;<t?84uobdRRoO_?B.#g^+QdeS\+:7W%AHI,/>Ro<[;?!;Mt[;gJPe4>k86/0Sd*OESK*9
%fZY#9%VMB+YrqU\bp,"d.*tBug?X"&Aq^Y_UG/*/S?;KRZS<*Q8]JA.6IH_R+s=UFh3_kFU>@#DW80t38E1`?oJ.!j6W&lmY\q31
%CN)XYRN:33RT\H11YQ6).S:ff$Em_.&uLFZB>cVuio*qeb0A7pA2\8Wls=rLIop)bb5(F9"-[O41d^*9@I8!:Id"0m][.@8CG3Rb
%PJTSYrH:Zg6'&(%`UXo@hOoq'd66Q",>)j/c$Ctg*X>%Z/e<:gBJu<EX*4(=E9XP1O-T%;RZ*\e(j<)[WV6sD,%D./E4l'U+LU_%
%bjuL7@FD]0pTJ3+3^8XDpeU=dh4KB4ab?3o['l:U9/[WlrNXI%F8JZQH:fi*NG=(:Tj\<s#PsJDG.YC/1(&Hj8o_;u4SM[,c(-eC
%$o!japGn):o+.merZX[I(cRr,Y3L#)/:j198g?8(61afsOjGU8FK#lf!>qf!^q!MMC/V[B"U+OB?udMIrD>6hhl/"ZWp1/$3FK2i
%+A>Ra8jc?f`3[193`g#Sce\$'qpT?\)T=`D`2M&kN=h/aPpSND55$*D'&!R%R8h9t?udd&Jc@6g]fH_u0"n'KiO7p!bK:CRG%i9?
%*WR2sg_LD5W-KV!Fh]:g&7C0Q&I]".]f0,un=-#VCGuJH`$QVIa'H/OFkbHbZ^%JlC5euOR!8Ee&eC4ks%:/h+EM<X$JIFSdE%9b
%Qn%.L8?q6cGE)q2,5VtXJOCH-6R>r$S]%"X7hXk(3!4Gb,Fh:J/P.i#GM2A0-We!No7gJMG7nkWR%,@;gQ2`%$^_c^>@a$en3%X'
%C,]hhNjpS;oAqr9T)V('lN"B)a\Y2#6ptLp'dFZ-C5AYR47>(tlSa?^:.l52C')`b&8S\n[1&sr%kSNkVB*T6,\Y@m:TZ?D*=M?<
%jL'3gq:hA4Qd8gE24@d/8qqC(j:eC6q'(fs7)g22Tqdc5RW8%rX.g>OVf3E):CmUa1:_/k*7V;0RROKOiI02M<lh<m>tBbGg#NZR
%)p?B[M('TP$ll)p@#;@%K3;m,`_=7BYu\g"OVFk^;FeTt94*XMhc`LZGf;;`N00l>RWKB-':\$?bD*ci@P`,@Yp:"HMD&B7^1YEW
%23)OR@@uL']Unj63FMkPI>9^DU.I&5MZYkJ0N]!d)D',I'+@@.<Ub9FUeTIY`Q:hg@^I1N*,;3>R9Cs&9b7(0%`(B0TIWI""glot
%'KnWS['eAfd<^1K%"Fa14N%b0L*udjl&\D$]mML7Qs,-I:VtT=TWo#5NU8#XBQgm\j\thE]@Im5eW(37jQZk\Qauf<c\C<q=I:YE
%NLr\Y`3>M0L+g&C=9t^*h]A#cq6lsOEFEe32MtfE?eE/4or"u7Hs5?Tp\<^5qgRqCp>FJII]'l+F1$;H\F[@\B5RHQU#orKpWYYC
%9'3h3SN"/V%eQZgqkjr8G1sWe<A(6Up(GjIH]$6#IOea-.JJ%p^18>QCp16-4.R2Q"q7iE[=>+A[sHoU?TrhM^U(%ha+`7--^A.!
%qs^n0XSqDh(sjauQStt,]A;JUc[#KLqHE<a\_kNr*I"\fT:#A!je@5(?2e(,iB%mRGbI5a+5#=rbIOk6^A`5C4"4^t%Ne\g\+t;^
%qmu]NB=!f8=Y6d.oubIieI*4Kp8e*+fR*/Jo/eI0hl4BJ]Z=H&$WknL(>4hR%uM+1s*\PWl,._X,FESNnE'46'0\SS?JMULh8ukT
%hsTZffC(Tl,i6/`*Xq(V>@+Fr.`Uf9_NfSY[@LOM*j"L2Y'jU3.6MuV/pP'":Yn:MGI:GM\C^MT[T^8p^Z%U:A](q0[JO;iCL<Z7
%oC\rX&(fR:VnLmbnUp;?J<c\-k>rQ1@rB!Y]T[,1*o<t^51nSnDGD;*/8M#%U#k!n4go[Maau,q`TNf$Y]JA_c[)K<e]h9+_hCHi
%#EP5'f=ZLe3kXEepoqN?;qTj=pTCmc(mp;Y\G++XpV\O<^T;=fXa\u'cgQ:ZI\/H_?qF/<8,)LT5+1l`f+$N8-i*'CF'Se0gZlMi
%52SFMDReF3b'-lN[W*,t^\C./:_O[83PW2(diYVdb1kq)p:J`\hS-3pqT=.`5H&o/_=*Z>-Vm?MC@UQMA'r]9a4jhKD_JlPBa-AJ
%ra+[qIi)jaIi_;BF#X?3r:gP%GrjInGOi^/g2<Q@:Nc9(q5ofA.=PJQ?>R:L??4kWp[dPCS(HE@MJ#_*-WcRNmdP\e+EsPp#Qd$P
%o7q\^;"\>_rR[s\@$`kB7\KFtFkE0hcaKJAL\@EE]JqNDBhP.,G@gHh]rcMVPd"d;VKBgYhraV+cc\E;p=1+1oAJG'3[NOZ[7rWs
%7r,1$VXl+JS'e(U>OQJF5@!O^L=oaYgflBIlR]5%2`BWe?)>P&H=EI)GIC8XGB5.X]=n4"N1HiQp&=3jDr8CB';T@"ZaF%cX*R9r
%='g@&=t*^E7itCeb4_U)f5@c@hVmLs?m^7kK'h4Jc(."1"EW>`?d"820=&R1DjDoP!'aK\q"r<ogoE+(K6#r1\ZN(PkLFUHHLl\9
%l%!j-c.C4\n&!Apmf)7-q.D)L*lfT._n\CI=2j"],nJ"A]oBs";_Buc2>cPUDc_KcCYdgth/gV>h9oZMp1.sBe%@*Y3]3*lkPD)D
%FlhK:ZZ'2ShWBG0_!.U/"L<[1a3Qt6pIDnZ"e)=)[nHUZG.VD;S)!PckJ`G7j5i&bi8W]O1O!ld]\IdZZKINHp?VH,bkA&73Xp8.
%<Ea1P<6Gfrc1c2H4f;8irr0\TJIn[GE\dUOe&-U,Q&d$LNp<`:EkBrk1E_A^FmJ8V;)\1._f5d5OXRfui,%SpHLRr=s8@U>=NI6B
%`J`Nh0+jLh<%afFgps/5!!-t^J6Ks<lrtP7YebI8o14p,!k,\p/?PIB*lCI]IKq;#rr22Ha/2>`k)S&:)MMA^FVP^:#Fh4t?bCWl
%?J[:P/+bEqk42B%[m)n*=j#?g.p5!<:EcHM4Ytu6lT9%22lso0+-,i_2ZVBhT4ec'gs=rWVi#\)IVKbdLF;B0rGP.$QMrTXQb,aA
%$s"2.%sUVoLJP5I05dBUQJ6S+9q*#Un0`;HT.R!G0:U#Zl66/u)LD3W@(V-k*'EpAcdnBi3:nQkng4UZ^t]DpY^25=$pO2iBS(V8
%a88Y=o.S[\?gV79:M<#[m0WH?>ohB"_7/1K"GX_s:Q__Cp%Lc*j]__3F+V:Lj$I)$0^@>hLLlkFHTjV'R)?p*35V_8Q\(4PTdIj!
%n2oopp;ZlV^%Nr.\L7AY`Ktrq0LCd(%*-D^9Ap.5:O440C`A+#3;jgli`Tg,*^9slO%-p7kh3kXM%9ZmoaP1HT(G3pb@(])7U:aA
%V[fA;j[Bm[Nc>p6K.e[(6L)Xa3U^u9(kt7MZ_Td`SI^=5T*?;M_R76738[)<)NGPXS:akPRK8MqV]S7iP7Y/"eI^M,k_(>#O!OeZ
%>N&,/+Q53d&1C%-q'iF+!*R%[f]c&u,3C./2u3[7"<X<4?6VW<:cNh1L9:I]=1B7N_bNI?SdH%e;]#X;!O=kF:bnjuXT;5TImWKU
%:A0eCOER"`c2J3$Vk/<Q'koPa0HgQ&&FkFN"*C;:%/4]XOE7Ye1lZGE8I4K!Jcc8sO27Y@Cs)AMWK<14UStGBLlRPiMu&EA(&dAq
%JX%%;q)3R#guY"pHl7]J:9K^@]"!+g,4LLkN2,K0hS*Yg0C4"/C%i#Y_H8]B!NPm?BtJcD4aFE@V&\>p/\QT4b\+?LpHt&J'b<lZ
%M(<ai;c7,8N!2PbWh`9C#P>&5H1N28W%4JEBn%fF:!;8e\6mNqfCto$h@a,B.Od2to=8=qf%2PHies_lFa9APR?p!M*5BT9GP>uI
%X8<jZd;S>)9R4Z]CAD&[d7U>kne(RZSUAbs.c_*B+n-ha2kW%'YS^ZH,S4*_PrD4/&Y)$L.R%c8qDtR9SFPt;?LGeEf,quehCMt$
%G$]H2+enCoH&sRPZ[o!;*MhqmA.qN'8MqOTc*H2Rp0JFd??_DgC58D]8k\%L>W:$Z]:WQT)[T=Qr@O0&jo[)?*4H<gcb1eE^V)]Z
%e@q=i>8K4kQQV,L@^%4U^*7l,8(Aq]E'4orKZnjLs4lMdYNS8+9N"mSTBJR_2T\oA?Onn6"a5hP`QRq>VgO0Lg68]_:VM-W\6Ai-
%fVgrY]ID,6p'I#$E2t2*dkr75[N+T$Oe"R]7RmHRCA6*=Z-NGX!2q^fXocEnrE@R#-QM,5<&f8+IiE,Q;,p%G;Wlb\;1Krm=3Fss
%SiF^F&(X2KHDRD]9iH9/K6Y/7n#W#hd]34B^V2=,]NHP\%G[U[ii#E%20)'>;m7q0&$G.'7*g;rZcZW=5IsoK20rW[-0N8p&D1=$
%^[]FS.f7Q`Y7Ghb2'6^B$G/^p_c#pqbN$(ni_%c$,)#dS!sJ`%\p&V%m(YMuKt;]f>bZ\[^/qg*]sG9GAG>H7LTf$,35b*@r:RlU
%kTP]t+nBNFOm#I;>((dR^@2.a0OZB!eXO.%XQChsq8_H[RbJ6&e>W0+,DYtI\<VKUqXgoeh&kUog=^fBi@\fV=*LD)6LL7'hQ;6Z
%Z[(>,GM_+p_K0t7gf$?=]F4_Xe#Q6):>0t&oG*)]L0J"Gl'0Ism!NI3c,6Vnj&:s6h5uUliO@Ua)tsFiK'guu>q)E6BJ?2olN+,J
%)df+]\Toog0!h3VJAuV2W3@YeA1cl"A'e=8Et=/k\p#-g0bKn+Qn1r91&:B=H0)9E<A#13e^Z#h5!S?$EeJE6D4SO-+n`H#@<-hs
%m)n56kIk?uW4K^Lq=<9_^p?e[]B)LJ(cMHuf3@.%[Go4'XW;ma+(>H3N@XJ@=5;>dR,DlPYoot5*ZN2uebm[m-UpK>H)]t6osBda
%f12C[l6GmeZ9O)jLX9Sg^\?PRF8+h/n$T9UBBPUCS+"Nn;K&'OE2/&,:+Ud>m=Y4n3gZ5EBW!DJ.RplKBD?JIkd=aaPCR)ugF'YM
%C:3irjPXo8"m^#Rrre_He,,stV=D*@EDjFtXYgW83FaH2WDkmZYJd4b@9gKN\d%HbgpK0^0Aknep3.&c*QnE:2uW.*SbBYDb8hX@
%I,:rQYqP%nh`[,k*mU8sDZJ/N56@87oM,-tlY7Y.WqtfR%35!$*Se$j:FfcH*?J?:B:lXcZg?B"2,OT+D4fV`^0Y,`3\.Hgf_PN<
%)Kl\]>Fb6,omH^-\Y-9SH2Z-<ZMEe'c;r+srJM=`WL[V8DE\upA@#H&ruPsmn`JkX;/nc`//LG?3d4JD=h\e2ZP@WMHYmEeea'es
%+@0i?@#:C*O"9Z`!V-p8E^qK=hdZZ'LUl"ce/f]RFuIN:Y5-Rp^KYqcGl'=Z*!KG\f.*DMH^1AD]`([np7;2LHZt"(.'Lh;c_'Ve
%cVDYh+WUgMm`/H1[hn2XMu1&CioRl"]!^56(-kWp4mMA#_J:@RIG/#<^N>2q^0NeWpt1Hb>PQ/'P6^iCb@gPjTI(,+>WjZeq:;[0
%+glg[GIs^Cr1iAuK2q;;mc<HFSHukjh$a)8(H+/P)uH.M"KQfP4WOSPcgI&+\^)B^md.V?(Y;E@_!9&)lWiUF-TT@1\odSJq&<FJ
%?5_7G7!30sXMI>2C1Y)`FqTUJO#9b/SmLl%5A@gSf,Mkb!I]4gl\F<ZH2YY:2pWP;l44-%<NIOQ>Ts,93a0h#k3LWG00qNG2.ZnI
%GFHSpT;0)C$.)ed#O92s-gY6)flpaH>?goBfZh,)^oGg05CW..>--R?CQZ.Z"4;U@I2Ppm:6M)RY7(_K"'5o/]rNfUhh\-icg/RA
%8$sXUs(ctnS?"U:P#XFF2rpUdHs,)]/\ZJ7]tjk3p%@j$\\p+dbF?&;]Ddr,>6[Q9Z=,pLkFUbZV3XF(.(?q?7uceh/$M=3O-$SX
%M_Fel(1Lsa^",:C:u5'\B5m@"oCAGBCCKjj2u&'$!X<@G!?%N`Tk$O%c_KS:Y(0\'eed3e\$IoA?uD6rpMP#se`k8(jl578EI"O[
%".a`#?1)D%O*ZVH68[[%*K"1aR`npTpBiqUs4P]kH?Nl80\GI&0&!s6Th.iAa0^3F3INpfVR5,=s,7)77D--X>tSbs,FnoZnbS"a
%_]8..eWl%+lD'D:4FCI(`VN$+H1gG7WE'$b8$Ot,Z6PGo!r[Zhi=e4.n@[8FHb=]_MT=05B,fdk\gOoSm[$-?#jg=o&OeZdc(0Jr
%p=7^%"M@OS[:]6^b*iX2OhLse`_N(0W*>ilGq7[-k4:N/V(cA]GcI(=f'X#Ep&"Q0X*RWLI^/4[a%Z"!qXbhX;((>r]QM&59%CS$
%RD6:JJ!1#6SS'O*MBTa.@GY_QY-ms!eR@mUpI=P:5`Bl+n#"Y:-C2D4V6FuG2p5P=QCQo3_5kiJUV]<>s5)ZipB;#\Bl6mBkKRZ*
%Z$$0)KM>5`]_brS^[Bq&hlK!Y^p=,ojQXk^E83<"/0WSELj_6Vhf=jq>b&W55'uoB,kAX8&gdM-Ie^YTT\&c*H7ofO#Unbsl:t&k
%Q>IbBfht!5mG$SpENf3WYAPaP?X>@[LNegV_K'enL*WWopVG],J*;H(mJ\6e<_0afHW>a5[G:(<B,.5hKusjgM=^=F=5!JX]0-EU
%5]!EiCqfgfhCF*SU>@#gBgJ]57i@a:Hhm.c(ks`9DoRr\r<_,qqrQhVK@W2lqkEttHreR28AirkXBi]"F<4SS?WN68_6k1G)f;FF
%JWQP:3W7pSVSh9(5fFs\mrl8Z)$.&"T)3u7Zh"*5n\t+Ghi$@bQb/AIql0bE^1[Nn3ScAJcX/h+qCEGU^,hp;4aU3nl[E.nml^5;
%U-?Rn7.Z[u6f?NWlW5tQ\@0$Hd69QBSY,!"'ebOO[?-Q*'J(SO"JgrS/TE<f3YCqa(9Ti<IkTspG?UI@SR+*e8i4f]bW..R$LW',
%;/N(;D/1H$o^QCoKHT3B1o]"[i;R^6fp/&5f<]\KE3dZDfG!lGUNQ/#fg`O)bE9:,22ECdf8J`[mJo63a\)PYCO9@./<TqQep.So
%m^RI=%Du*grP$"82ce'?V<V[_;Bh[kgQQtnS&P*7aW385^R@s4Y?Zje5rK\;l28HdrR0E_r#L#e]a6j6ZsUV1:M]I\UZ]VfpYHLT
%h32K`+3n%sM-pO$1h>o@a9Zc'@9e0g'RdZBcYU@Fp(V&3Va.InI*^"4rp/Yu6IiO?k-2Dt./RVY]Yp+%]7,18<d]AZ6KrFD6LJR%
%rI0kR-;e+'[l0"ahCChcGhFKO1dA1,TkU1Y>>Y=3N@*bNh-RP_-26EZMB)]u%!$SpWq>_.Z!TZC:)n-<q,[<-mHnLr^n@Hd;R;FF
%bIr9T>[E[;U._,5);%I&gs%^kG;_.2j]1hlmDD*O]E2!8q:pCF&?\6lCqg1jpn7P(GH(KKq+[M@JHkf8I^]$!oq!<;?16W'<R03r
%W7=!FFZ4Ldi9?l-'Xo);OFO]^[_Aj;E[M%V$oHE_B]0or(sA%Wk.G^o6/Ia4SD2cNqYV[Y2>0dInakjT20W<_g$j=j\oCgU7'(7C
%Jg2ISWVg.J^D04EAa_a#0UBU5T@Y^?PP#G.e^C#]r5Ma3lJ?_;hmHn,cS-YSSeZ!a5!:I!5,ru`.ehO6`:AmLKguRDKq#]I%(nUX
%7<@c-e,JgX@dph*MJ:9iY:,X?P:9E/><bN<^M+V4+aDcJ1)X2S''@8oFX8D;(%8]4@CWA7q[q,m1;6WCjA3bDT?/*G!Va?lr2S>X
%Y'7J19!]>PNVi2!mPV.'GaHg>(N#5h+5T;ehQ=3N?7qO.:<l-EHcNSV2M._g>6?3$?+q&c+))%"=Md6;V-BDP*A)`*(DA`WZ-57V
%KHj=3^BW9WTAqe/[,Vj09+f\lI3l5WTY5t($qbU@B!2Jeg%XDB4NR7g3J/^:";qqoqIb''(0sB&r\'dFXqb2[QMbVUbV@E7gtuL<
%rc+Q;ijCGR%mL5)kKh%m^@G>bqXU*[k#nZq0)_ke]!:8P"I@RI>7!6KT"803YZ*!N-jKX`mf-_R3;="VXqs&k5!NlL_JNuBmNsZJ
%R9<HcNQetGCK\W]<*VZ=C8S+"X^u,[N8iEUQ8NKr_($tY%,6@`-#6UV_^Yjtl:)!=3)-Z`L1+1\CRSC[!WHbiSol$2@21WK1jE'K
%Z50c`W&!_@Y/7[PHreAC[Y`<KHIauS4/4i3<mrm3A(o;!l56`H)]S&2-nZ'c<?3rtW1&aSC0!2#4ep_+f$YOc<n"A$[g#i5elENe
%;XLQZMe?l/2FaNHR$M5l6QJ3BEIKD(RV?/pQ=[:%;AD>&j-mOkBrLfRWj8_+.oo-I?ko[gSqRA,4c>f1CUg8N^LscUbKM_fPi;O^
%=G<Sa))G5uAZ;nnoVe3iMU!^m3&bLU*F!VN:h?+W<jAajBXe=[AQ@lkr)$RO@SoJp%ZhSI=kcbHhGDfU4qZO'B`o(Z(VZ\X@K0"^
%Ed6/E9W)O^+QurkX4_HT1hDm0GluPUQ4Ze.J3`5(fJQFW@4&)l^/K%?9UIoj*Sq'PPs5V;"G!B@>+3*=_O9)W_k4=:JhksccAX*j
%pe_ap=b%I2CgO0A"u_-5[N1gB![dta5\d,T=iW5kEa]Mbdi#?s:"W(gFL%o=Y`.MDBRC]Ap3Uj[0eAogJnn9b8ehJ?R%J9Fg&OV_
%#N<N&>d>2!9S"jjIsTVeC50lU-"E60UKWs1*n>C82f>P1<)j?WB1AALE3&O9l\9$"@9<_`1oLHieQ'=.L>iJ(<a^,f-68/,)sd!G
%Fc^tqU;5nI%MXe3nQc3ldUCrER&QI[8\bW`L+/(c&K*2E"[f46XCZqO6nD=(g-j'`oLkl@f+9NVS*1)uL`GZ<K:!c<VPE/g3f\q/
%$*%g$!)JA'<>F^5/6Z$ZCCS&`';,d@%DWD$/Nb&ki+IcpZ7S1-'@7O,%rp$.-9c/'(.&a"$+&5'H4l7e_/74B`@t"m"i(9U&*Sg9
%;hGu_j2aS\e.f[KYoRK_)l@B0;:>S5LP3c+2'S>GFb`mq%:BUkJ^[dqf3r5e"VXCf79H<BBZqi`roE9G'gPEc>/4,AkD*3GBN1em
%N_U=X8gFs=[%lpiM:eH<+jg;B;/hGe+\YhtKNkc#NX>n*h^*t+!+Jmg)[4\HQtl.C[W!6hAa0ag$Zidk^-I/bYHX+7M'j0'J>_UA
%)4WlJZu&ts*3@F:K;s$OqM4*DE9qtSE#'e<j3[m@FiWLjEsRd,H41Nb!?k+dM%jY(Q&anoB5QkQ`b..g('K%[a$gPW6^@$=BOR1$
%dN30`'pYCC![\m9f##]783fNb<=[Dika9^*kJ[-"p`n.l#+R9K"g$-\p:)BsVA"Po2.58YA9Oup/3[_)&KEE2LMVs+3Rg)NSe/]J
%c"R/s6==f;%,>`[\q;KUY_Y]h%?VSs/W_!(UbF/UDOkO0.<aAGS=i^gUp&#$/6K4YWPU"lUp:o2LVh"4C_")$#7]Cd!o`\5<SDTr
%*s2d<#$7Y%`-i)j-mkR)\,ur0VTp-<jdQPP5Y5tXNdu9naIFKH"]iY`J[VGmgK>$67A/P,@]6["2FdhIZ>:A.[b1/=,G6)3$C->L
%Q;#q?!Gpe\@6"PP_]nob`G.8<B1r_L6^J\/"p7\ccOY1?G9$Yo"<G2``@s9"6TRWZ&bZ45(a'04k.SU&JTP@"Q*(ef7:?JlQ6*G]
%@1AM*LP?7H9/YuE!>oKo#2_,@\PRn1Ns$/h"ee=aCeg+0,[D>065i]`,l0d3TE[*qYZ/nqM;mKX^^#Cmq^g&Z(iU0S;?FM88d!4P
%EouL,-KCj2!1.9WL+4TH+>&3q^]<.;"_C!XblC*0d6a+4(pmCN5s^'_T`]q"mt'pO_0.#&(<VLmY6'a(+,+dCR<Xs!!,"RX@+BqO
%d#"Fu+2fXjSh48[$;,pkRL0?l:i#*WiCjC,b#O<NpcIh"5m:#EBgb:\f!;9G.F8L7AZB@hKN1qc<Ucg+7g48rM5[);NM86fA=O1i
%EZ"I]Lbj_H-5+[WfI&it=:^5@cj]-3AI&m"!Id9K8DoLP%SQoo^`Na<eo]<dTP[R-.9(<<`#Q%3pr_Od:it7G'+U'):Cf?Za1Z(i
%3)C.f/XhO6CsgCG%%T`hMII&;K-QFe!IjN4JW2q."LJ3M0SP<pU0^aUn0FYIL+lJX_CD8.JCJ)^#f[@kUaiB<?0nfTZ[H1A_V'J?
%-Nm)e;GC?0C(_p]Q&Rn(J>2HKN8k)CeY'l"%\3bo;9W&YmBN?h6H023VY_cL.)+cC4!n=(@N'P@Os0D[2Q8MA"[,:^&+1Kq9YR<W
%LhGp<:'Z%TON5B.+]6^,KH"L?.4YP,$m?"`%"p`/NBfP0E"&NBbbX8bNX`(Rj1CUWKq)a9aE_US78=VK*EifU"WQP=;NH>@.>jKH
%cksYCBc@>GMT6//#0<,X(^RApNRSb;j._:F<<4@^66nkf$,ZdX;gm.b`C!/P$Od)U2pbT":>165J5D'Jij=MG5SZs5a08FF6(SSi
%>+bj&[Pf3CZqlSf&[9q<8FoCA9eMPgW(nHdOq=DK)B=NrSI0"6NfIi\iB>'r,;1oNH-u/`J\P+u=/L*QX_f4^!79Fj.<JJe:a/4%
%!:ocnNcHrt%Z7hg3e1t^?<Xp)W!Z]hf##G$Xs(2?E>_$)A18JV9*_.(VIKE":/_um$M\8n8KbbmO8sG-PLDMSjeAU^r59"e(lhN`
%;-:jFketYsjT?T'(eUFZ)W2#=TnO^Y<frSs5R<TE1J!*!'bB'8.B9>5A!K?c2HGB8_duQ@F]=SBF^%C=e/QO.n/'6H2H=a/Ur2^6
%;MnmSb5p[V,Bijjn-q(-"sYH=F!\ITOAZohpOt97#6o0;Rh8U"lJf,Y<Fqg^#We!";`=-`%&(?;J7kgrU2Y`O^]P_cQA\Zr9OWZ0
%1h$M;$HI\VS/n8]i&Jg$%01ec`>+UZ*/%)i5/8F'k*_ZGDa6+tUOfXW!$XEs6UAWA)<"i,^<QkBEpP\\D`;cSB*c@fTO@iN,#W7l
%e>!F?Em82nJ]+c4A@+75kb-F`<>Oj1W5ik(#ZfVPJ20YJ-Aghd$]kd$$59X@+u*mjK-4TU7ig)(Ym(csnjfNTTit>&V<K/!0Nrt1
%-+8m\kZO_R\2#"[.oI832b`%nT/=nsJbW^t4gB\j?m$ttl/LYFc3CQt*$m(B>WCjM+ZqDWR0<4;NJ9]L?!$\mLr[;?OT642A:lKF
%15.&_&U)#LE*/pi)Nn&f9T9?\e/9k\Zj?b/^]\a`-j#it":TWFDQ/hCL%7"Y$@ic@q6:Y^G_SPN*6Wh4!T:n"A0<qb#FVIB]K9#B
%6H'YZ-#$O2CB2@RlgPo]h+uF3?VoiOq+h*5"UkL,!bQ@j"[iMOL@f'[d22NWeTJo%rW[BdI%i*d6)\*...mD(L\<9J)SduP[YP?S
%o4S8:+E%6gJEE@YntQqq*1+aEK"MVIdL;I'ODH(B(s&i$C;Z)6Wbbtf);$d=n+80:!SF?d[McFSZ3,JQJ0OMXZALCoFm0k]q-q6b
%Y_=JbA,!FK0`]9B.N%fVDe;Gn!KMiQ=;]k7/<6B`JkQ`UFMqgj1:X<6->]?cOT69D!&h6k),W[VGp,Ntdk7.T#Ap1='gA^l7VJYd
%OdMq^"3"'31<bVXCQK=ZEROA2<-U!$bGd-#;kVl***EPraUUi]aY<5R"T&Lae0&a_N.V0;6aO$iO93+o!'a?r!3]h#*2LGT!&ss/
%LJ1#90+cur+>\f-f+;BtmOR'>"OeST2E5t*Rh/`F66&7#0St`2;K:DDScuM22\=<b7dUi.#:T`-*^B`r$`Qb7.19>oi1WK='odcT
%a$Hk<'.:`S@tl=3kpS^\gsdD'L5qQ/1lLAIBTZ,F)ii7EJ;tBPr]6Kh*(A(S&LLkL)[r5;fpp0GLXLlBQ36?r-3f-T$"H;k<`-[u
%jNu;gVB`R$AIrNA'bDZ(?]e9U,]Fk6An%rq*_A/,CdYM^JTqQUe]\HkBN3'&1=C51m+B2B@&QhoNd&C;5$U]^M0'](0(dFc4&F%t
%A"eqE@$T%1^BtcK//:sMT`pYh,+?FJ+mTQG<C%QKR[d2^Kdt*EfL-P'3/"RkBS%L\,*`=gMB9an'TJUOaJQjG9Gb,_[.TP,`)O*U
%3>q855bqs0)*eKNa?g%fd&k1g=[YaaiXS=Q"5QA@Zf2>5i+2?b:@+C/7N:kCOp,AU:og=*D/^,D-7YqqDT.u1*Zo8l@jk\=<HsEu
%85Z>:i?B\kH0AVP[Gkf9CnSp;=iJB1%Im6W`ab3s,,dp0P/:Klgk*Snk/_Z:+2JOM[a#s@b:T18V-6=gKUi-3;@P/dZlQ/%2:MbK
%DO."Os%tD\9+;cm2JC+oKjmj\fOCeR#)#&*`]t84E?%.YbAasYMKh-VfEC+U)nW!;AXQehV+3Cbi]4Z;`,.?W!tc-'73k:!'kd^S
%h[pE`$.Gm)Z7K\pU/eY!;N6Yo#-(Nc@dtNt);;W?)'E&6AD&na3\WZ:,do2dO<B:6*UtFM>V%;Viag0,!SERsS)Qd8q=;m+%omqA
%6U)X#7HP@^Bh?iA5)E#[JiZ7bK-m$9aGe3]/h;mSa=(&Z5i"[=#Kt1gYgX*)0d.)1p]D2gne4s3G"u_fOJ=$H!NCo0bXB@R:@sWa
%@SinALQO:WX#^gm&5_jU2>#k]QDal?AgH%@R>!,`=j.<DQ%T@?27U>ie7lmD3/Q&0J#]20NrW%^30j(]52&&^/C8]/$B@F1O(a6M
%T"m7umVp(':b%$5^e=aDR71"#feWZD*"m9hZpjcpePV!18'l.+*'Neam7ZeZ\^V$o@p99bXb47flf8edKHO$k([?,1><i?Z+j1PI
%BXHBd'[CQB!7ns7\bLbC3#ZWGqK9gNH;Gr*WmMiNf5Qp7b3A,%UP[^AK8*,Q`ATO-Nf<NkQgcP(XUI$aX]l&ANf`'+Z-sg$JbZ'_
%m>Xe#QEUp0)^)6WTZXZ;nK99KlY*XJHT7*fF@!()FW%k<L9U?PRqT-/KI3U:(CsOJ,>kEXpG/3d?m%fECFhXanXug+GCrIZL>j>(
%23A8$IYOL7!?e(e"R2[8qNHB8DPEatj]2b_@\D+:j8+XFgEb7b#O^fq"T_%8E=d8?`\#lD8a74EY/,<b-h3+R\Df'd_a76B:)RUW
%PR2%d5W#%"_D]Y](QtrB7"i-"BcF#1U-[EuEm.)('J'D&//5cliRaddY]F?5BQ2R"MF00YmPj$5e0llT^S9WqK;cAcAm)ji&AP&U
%"TqpV*8l_%NK4biNCp);)IWVrL6A-^9FB;V$n":iNtr'-"\q;dY3K1-\tFrD!3%\"@3+K#OU,Vj!`ibAaH5S<%$ZJH2-;;/#9;6Q
%'j_2-MG;)]ErE)'TWU(+=`]GV;E-S.FV:88L&a+SoC*mN.u[8+-U0GL8MhpE;V1H#5`;<@<PcQb[)b04JdOHrRg<J:+pI8/=\/$Y
%e'`r,*(1L\2c/I>*4-HCEFR`:KL87"PCYbUC-3Urd=]MY9rc-DJ6"`%=p7J:cm,9d3niJQlE(.UVU"]t$kcFBJ(Qb(LM@$/1f?*U
%,_o9YNYKC^"Q>"Ega6s$qM:F#[Y)iS9bcBFA71\!!.88kf;KRu.4ep#7AgT]S:'md<B>[X6Sgcl3jFPd#bVNH#fc+`DW8KQ7Y*W,
%@#BRrLqcnX8iTk6i(hV`.ehH6$aI7k6mp"l0m3_KC$5p)S:pi]GSOA$Bt6/%R[tgT4'!ejcXj$kkukCC>@L\k#n^B0Mmd5,3tm$V
%S;G'"lVsX@9pQsPTokle7Co-*%og(ZNE)iF$lXQbW+^YlkNFUTf4ked2]B?n37(3)3#5N1p\l@e#P(/;Zs)12_7#!S$EsRgT;m#$
%nj%^\EUMe:e$]7L.\*L'4GX3B8;!aU0`X$d+aE!dd*WNRg;(0Ls4gFh5_[D$i!68+mjV9tL2$/F/5p?n4NlRXN3&+kl.FA2Cb]ST
%9C*-o"Lc;nQeB5aJJ,C[!i(A&NbO/G\q:FC_>/XSLG]ja*:eIW3lc`u_9f6*TKG-TD-1;8fU'Lc"].]PLAWt?Y(.JBJ7J_t6!3ga
%!Piq&IMQSd^tE/R5l[L06QQZ3`UYGaI%_0i,hWNI6X/SM=)e@;imnU8V](oI:bcLZ]<;;?VFWMm$PaDA<LZs*7fFd!F:K7llf(_T
%1e=CeKgMek64u9jEN;sB_0#5.O!0,eqHIe96+!@/H$3"YFbFPS;?_nr5iS'0HrLhjqR%*--QODl%bZn?cVkZ@hh"lY*'$q"-_7@Q
%K`R''qAmiaa;_u#WdGR6eNg6&k9?uR_TBlAW=r$:*!'6HFGempCp(Z)a9Y$mb`]8kar9ogpD7\nAF;fF**AIt'V,<U6Hor.'u7uS
%l3.>,&1jIi7&Z"6"&^QL5>K&A#f32PaY<RB(n'A?60C+6KO>M=KUtHm%UD4oU\!D$*7Z`WmjrSEgO-7Ck[E/=+`*WB&8.//R%[nq
%j$j4''kX-f,:FE*c4j0p!B-W=3(\k*Ff7AiDXpBa*+GQUZ5Ua%"Op2gG6,o"QAZ*(K+ng?QjdJpaHV9'5(eYS5T,tEKnuEW@MFjF
%d07K/Eg8s+`[Ekp)7R^d9W_8o"La]]Tcm;BW6%jf-,[5Y4)[49$HGLOLql&bT`[oA&d+TG.=)2_@uN1K\SmIZ!3s[$;7EgWAZ8;&
%-u^n7kB7GJ`?a+@Or6WB56`3kLh2YtMZ-#*-Mau=CInU2N$N$fSdUsk(s,<^BSCN4%E<W;nog18`3Qt!O?DW<b5l3K9@.t>%lu":
%7Sm]lUK6$oTjp?&`_YC:0QP1A\YKU5Yf@UUVnpZI[crDO'4DQQn<9CTJH/Df-o3iq1LsETf$KAlPunDCUDh,Rf^p<HTkF^.oDnsK
%iH@GM^FYTB'#Z@_@KK"4ALa4@BlJUOIG5rFTa/g(J4r:R=B4;*!e1uA7[fU&L23><$H3XP`8U&JNmLdWHRRBG*,FM`%<@P_Q7gP=
%<7,mMO?lO_7-lP5GncD+)c+i8%)?Co4+YXIk-[WC<6uST%N4GK)&OiX\fJ@k\J5r/$n%_^Qr)]rD$cWl#^aoD:8\@n."hR]*\??L
%BTPN><^Vol*o"PkMKV,1#8ufrQHI`4T]u`:1%$iqTJR-g^pb%AE8Tq+&VnG[;+K]66jtrolA1I(NWG.T0N_<%aZ9_`"kT^"Zq!u-
%:o.YYTM=he91,nfMU<Q80]]4!0UJaennC!@Aa;5]rr8Ur\(S//8\-G8%J2aC=MQMM:3Y,H%_Y1:coB$&PQ8CFF00<)F.t,beMkX(
%`Si--oH1DVgU=N@n0NWk7oE$Akuhh,XWFd1D.j)>'(^S'^b[J-&6%J=WO![2o.Uk)!L/d"NLM!)og4,R.Kc$e1c^VX73lRPMnQ@J
%(MINU2S2NfQ9b=*M<&JHG"`nf6:gJJE9)<AOaJi*TX!]jJn]7_!T)trRN/aRXt3rmZhL_VA^2H8-T2qX#nBX34d^D#RfrlQY;N6b
%k$oGC@__Y>SeJGE8kQ7SN,C<%r"LgC24gr5p4jH'q_K^05P+TOL;f2Cd>BOQH.g3RG26L-$Et#@"uIgNIbTcYniN5P+)rMZ"YASV
%4,uNPfJ='+h5O-T<6VFELYlSEAcpXEnDa*CJ0<YqJXK1IYt@,]7&Y!hi5f?[gaW#g3MBgnT3'J.RgE2WA"!5%G&Gu*SF;'@?jk(+
%mIK#G5QbHMZ_eC-,0?$n+-6;IHL<oQjG`9m]]/1dF&)IBBTf,u^h9ig#O>nZ^Jd3d_D+L]+:4Y3BghV&fL`S[TL1g5oc`oo<[V='
%*I@g/c]O^`q"(>l(+.ELLCpU;&aI+*@_bej)S6biol#,1?iTle`79E[faOH#k*]//YOPDiOFdT:=MsK,(X<khlua$3Kr#ZV?-ke/
%J?t:]c`,)0Ce+%&r9u^XE3XsFa^75Yh.%@T=o`e;/j62ci#]Ddh#@Fm"UKTOCuN\eI2sj.Gd9YKL^TPC@IXOs(.a/Wn9,.'d:.LR
%B+'+dSC`?/Nh`cE_1!KlT)?Oi^?=%P?1=o8Ns4RR.duN-m/!VnfbMBf-05^Ika@'[o.PC;";"?3'JJ6W=lGkXcRGEL3MpjO3DVm9
%j3TL:)fa+/;7^?'>\(loC*2cL`eDVIa5T,7VYjrE3P9IRfr:*+qM7B"#K4"$?+2NTI'7DB1#70f.BF]Mo6ATZ3rIsX%m^JWHSKg"
%qJbWlI;e):b"(s5qAQH]B>_u$bAabUpGpiBlV#)iA]Xe41Oj:p@+[>Bq.?2dh/Xs+)lM*:YJ^H8ZfGH=cK79F-I3qj]iq-^Y4\cc
%HgI/+Qj/>YVJDUD#<eq/cW&NAr'`c%ftE72rVa=jql:KYK\$8NDb&[/08O=*1Tl!b>XIImP_nSl2,nO:G-Tae,i,g)DHp].GN7>k
%,eW.6DR6N>0Ce_=+XP2oHX:n-'QMm^Q-1ELXh8hkfCB)lqc`!,E#mp+CW?f@EKb:J_:Qo@1N,,;rV55d*9KBf#a^d$nO#JPF1La>
%20Fq:j"R#o^/2M1QTdLN2YIPnj.!CB?"QS]4lc.H"WfsY`<T20e+XsNfdFK<)(sWgBA:%*PG;(.L)J..o_delS+np,1toc&qfQI)
%].*a)[[__!_m4,ag+/f=W*FT\G*lc&gl./<&NK6)Qo,tZrRA4X[7iC/D?R(*a[-WF2KG%SIDis3q7Af"$og7'-Lg,X2V6^?H!Bdn
%iN^eO7pO^T-("2'O`(G-I#hccgFHVN'`W2H^T0&B4]iWbf=WeP3o>2p%.;X*+4H]A*jEZc:2Kf;Pja2tIcj7LS.;Zrf(`n9M;):H
%c`^fh+RID)ehA&*4P#Yb\6,:LXu](DT^W+3B7=NLY>[N;6pT('3*"_>*FFI/o(t&?pn"m:Yq6H/q29:.&Z"J3K@2o>pE6$Y=LEQ^
%l8^V[_D(c^:Cs+K1A\RoSja,6\#:k-iuoHh3kc\h*879VHZ^i_]E_-=N<s\ZL^e)ZUWE=fCWf!-B!&PuPDhQ/\T<t:k?oC>b7dKN
%5'`=Lj`L*^cf,L"5#[KX$c)V]QfK]EB$eN8F?\Pc2F9#BmC0]A>/H,S6.G5P3;'u^nV??8V4JODf9MLYHE?7k0C%uFhJ0'pkYmF;
%1I]0I\%UcW3<hroR.A.1&`,/YO\)\I?ikIfmVu+FpUC^bR4nCRQnmj`Q,-l(&s'Mm=TKae`_)X<)`mCW9g*K89]XoP/`t#9lO9NE
%lsM2KrlAF*-K:uM/0d&a^S!]jR9-\iXgYa'<2s:F"G4C5;-J-Zj*R6">jq:01i('m^Shr38'NKV$;ARqo=h^&9E%R+L1RgPY^#P@
%%`$+fKOU;.s)AfMgc']D!Tdt$eu#V+iWJ&u!1m=F"F*-#ML5L);P!_%BRBl5YJ1TE74&MnQ61]KE[eu;jWb8Ae_Ui[e_K+d.)pDG
%Si;T$r9eR8RY0,ehTJ@CCQ.s\kg*:fkm<5[p1%etI"gT12fJCnG4/u<3.G;4R2D&ZT.$c\\GHb#SpTZaI,);+E`ehrb!E2R-T7:\
%%drUggU"9XI%1J0p6\>F/>"BMM7JY=cPVc?_(jr`GF@"_%.#t5-\&[8TU+2cZXU*31M-4iggq<OThYH;B,'O?1dh_A!Bk5dOmnDR
%lDO5!.5'Q)ksX,JfBZ<Q$Am^,j*n-OETKC@<DAG6[C=Y&@&g0`A%H!URlk%`C8&TYj$k_YWFD@YY$noaFZqSFf)j%!@+.::*;Ac/
%0,'Orqq"+\%J+n]`^gnseEd)t7nD5gb,[,OfPC6CfT*"U7Z)im<Y:&B_aO_tgrm#M1A':,TdEEGG6uM=oC^ipQ4M1<\ss/e?_<aI
%b)(G,2UAr6>[haERY>.\.l\KXQ6"u!CBq*EoTGKY!K$&!quluLQb#_Z^$g<YLV%Po=6)s49!RE%-LtVc-J>5.*F8-<&4JO`:jbjN
%_Q/Y1F*sk('f][(.95+K+<?+rIb;e2F\:t,gQW9_[2(WtP126NnC5(Q$HI8bZDl+V(\%LZXCL_j(S<_FpR+NH"F5t==+R9]%?<)_
%b\Jhl$>2AYlZHD8]q/BRmm$[jlc[36O/:$ILhm$.&")A1Y76XJ28YgX3o`Kl3.aA-quq,^8,aM!F0c/L]f(ZDjLF#.jI_"1Y&p*b
%,$mH7i&V2EgN`[[$1RF?M(L\m?N4RLc%<<3R5uuW>g_/uZ&WJV"<OZ?Za_BDBs%]o.-VsZ.>t32$`XW:8tF>-fL=K"&(sloTm0gg
%=?A9(^K*m#r81:q'J6gS5J0c*_'B#*!']3fg%Im-iRhJo,(@Wc]c$#2bB/KIG0/j.?hV]?4ilN#_W%]QI7q$.j/lb<R<?Yo_N#S]
%]f>_E99LtfAO;Cb1JY^TmN_QK(GT%X/Z-/LG%[kWK,XgB&+oP42=`FLXno\W<P[1n11i4DhXMKY]AlN>]78)?nThB[F`m8I6(e:C
%C!5p9..EVL,V?bP%fE+n3F&%_a;]lAYntg[%Q&;e%e`$dKn%^:Df_u394B3e*g?\`NkZZQi7N'aWi#7`%cUEla=U;76ZRD@!<B?U
%+4J<)O(WrH@t/Dc,59el1!34m,a8OW%U\d>P':I6r^7G6(?lcQY./\%PR0I8`A'f2*SFpd!QpXHeG&XImDQE#n47HeL-$Zaa4)m&
%gp`i;#!7[i'ck%JBgjr?LOOqi-Qm"4$lG7XT+o5hj':44G9/8`4,]Vcj!f'NkEBumr/j+&7CA#)dt67]h2oUd?u'!7c;%r]'g^ih
%h;hTtK53dP/LA"S,3(9C<Jc\]DbG%X9cKG%1`O8':abZCT4$Cdg&!$U6UX9J^\QE'"G7h#'*nBh(1]>6G"`tDVj.SVo(NDV_mLIO
%<hj"9h,,A(AFB_Bh(@gOH+i1]4b>G6D+f&sVpV\s?60EJHGG.DK=;n.g\5Pn4;r`j&)E&jquIi\hLQ9NJ8:/$Aq_"e&oXfgUN:Bq
%$c'3`g9YMMZTipK!JA<_A4Gu8bNQ&\UL&nNQ2\oPMj=$d(>@rTopukt*kTl+egadYOb8f?Rd`W5Gs^]6e[QgP_@SrpR1),cV89V`
%^)"='cd''q+>-UQ1*'[_.qLorXM8CM_t7)]%EACRP#:6')7Yf\.d,ekE=g\mkfT]Lm_7;?#^/+fb<-%Ra780PFm2pd!1qBJL.TL;
%Y>bW'loKc*";FADJDdbqnKfGlK2VJ=IZ-8+f`0a'F?_)p%k,(W)gDB))XMEs^dr@GA\0j$2PPg"7X:2LC:FItPEbkR;E=dEIj#Hu
%huDU6LKr_#,b^BY+S>QoA$n3>Na,^+3Sjo7VJ;`s+Xng+WbEU_D-rqc@rC[JP8?`,)-&E$V2\=,^t0:J?K+1cCrV*0/]HEq^A%N5
%4$iZPG:]eUZYJX2jM4]VmAG^-.5f,8Sf8gO)sR-R9mf/\ahiIi%gipJq:#4D`Huln)p9X,YkS+,nlan-O"U%PW2bihi`pGN?\akT
%Uh#j6IXA6Z+;prU<[2&\jarnFDOR/befB:9.M0::X!Eh,->EmGK6?7hNE#mP)Wcq<?A\nkb8^,VjX/F;T28r>.IV],)U7qs3aQ(G
%AdR4Zn6d?k=.s9`pMkjCNHiH5jaho$m1i/jX7`Ci3JA0k!s-AL3`T>R>8.Un#DC6jY=kD$%r\I>2'"YXr9A('S0F$F)l]W`nY"Z,
%dnJU1Y`#u`/j_k#9+otO?E/Soq8irJf\\-,!jLdsafeU<!2=c\d?MLoj\`#r"cL<;:$tjU[A\9dV\(MaQRuJ.%%eV?56K6&6#D&M
%gX#*3N6gg&PH_kPD7n!#qk/ORqAMGi.P5jXY=Gu>)<N8$<V[OT%'X;Q_URRS5`-k[n&OP6Bk9.>:Mn80p+i&'_.9C/na!p8HJc/s
%hc>sW'&S7W0r`9GBuRe/bgAo7.E6G"!\6L!A[aL:4e?fJ'YhQo`ahW`'2oHd[kj@SQlo8S[&n7>Y)%1HoQa+o?V*WPH9c[WDbB$a
%@9%"-8*]*m*%*Ob=d"!\[<kdOTC93mk3N"[Xlmg6>K"pZ(hZAYn9i9)(WMM@^mF/R;j\'pINu;%3JB=61@pe7$)VBL0tY\-ES&"W
%XFg-ceW,lOD6:#EUH5SQU;CVh1ge*7S9;hkr[Vp!kJU9<_'.oWpY&jAJ0Zg*ZO!'*<,^BbOl!WR-7iC:p$OTG+i)=YijC8IFl\\Z
%<JH)?O5eLC=e6GY<h"uo8U[3m++keIT=Hip&Y+TriKnt_moEZG<?%IO/%\pp1C@'tCGn[5?M9Fq6fEDsGAS49[q]'1I#LTsQn`1+
%1@/XC"@cRu=g;Wt8WrZc2`7LF*KbRtema%sI8<-Y/?s"#m7ps^j"Zl:f;bW@:OLIaqHFS>E%Y/5&`3ft[<T>kARPX,Em$i:1S-<;
%mM2P/5@#JSj\,3Y3>J8)fsCBBeO0G5,h*u?K\QUI%=:tl7smR(GI;.l'](th>#3K\cqb,+-qOir0$ZQLVH4>>466uX-k3eO1\ats
%NBM6Po-lsODEH3qQK&:iR0H9Kbp9=oa:cVQ;uVKe&]GLZ6<3J)XN]ig'7F?2,)$dO']k]uPH`@4L3!2SbuT*\&TIBmcp?#6RQTSm
%]6Snt)o?.ZF>I?[-[eYDH*UT6D>G^l%l5QN?$"J5ip'F!W)Pd&7fu^ghgM[_h0UmuUcjp"@=u%2T^pd5@P2F!$N&ph[iVH87!4YP
%"J>0THF`q+8J,s]H.ka(Suj:P-#Ds?Cm!-CM[ZOHDY$ltE)=nY-'2iPPqWJ863/Rh8K_?82pQSo\W1:[cfKos>&#D%',-.[F;(>"
%jj'ME`&$8'</Gh[U"pGr54_2R$"/EWJlnZPfoD0soNDl(5X:XR)p#,I+Qt_$/t&fa,FZ!UEs/4,Eh=)aams*#oh7LN2T+a*kqNh%
%2Ms#V:Y2UI!^W>Q5kf-ARlseWi0tsgV<IhimR;`5'VpRu?7BB_9<T+%o*@55ldEMFpl`l/[DAJ,7chALd^-TF8\138Vq<Fh/TApV
%\K;mS5L!-14.!*?@B@7WT(e`PpT`5.Mt.?F/0`c)DS[+QH21QTi"Y#jF+47Tn/;&nLXH2^dW)DE4fVk-@5VG;[MS7;`2E=O6)4C$
%N'LcT+Bc5IMMm%M!P5SELekI2+$P/Y(O>H3+7FGQ\dpQ=(\:JmcT$Hra_g![K/d,ZC5m'6G.O`Z-P[%M_SH(s2S_qu@W+76T>l2^
%YVB^_hU5;ncg"r7Zn[WRokZc4q-Np-'fm2D12N^T7j-^;1V)4I_L!#1=L&WkR_!W.C!Oks4=3Q,!?e9+Z1FCrebks?3AN5U<3TIu
%al5mc!D?6*:UMStO`Dqdb<67>#;ZmN!u99^qj<O9^$hA2oJ93%[`bB#Q`/8qP2nFV-3#u^iINlZEArf38&4*F$S/7Lpue=R=lZW2
%4J>/p5\!E:27M#`WG;ru"5q!r`@[./#BKs=feT1+8IKq`YG<L@&!%rgC%5c/j<C98k^tQ5+u=R&@<[,dIBluZ*f</JU.>P]'DW9V
%GVk80o^PDF`fND35PWBSXIEi8qjVprog[(Fr$86RXFT#NEJ)U*88Z'3r'r`9I=Z^>BHi7<YLj6nOeT(cCP_J'Y^]MFUdT@].$<89
%[9SW58mt"O*agaXB%C5Q@.`DcK)eTaRH;HV'rd^OH$H-%#]Y'RTffO:5#Ep,<ZhS)3Dr[G@DOGnDFrPb*j^36699iq$j749'99#<
%-=-6QQ]/j-]<q:;T_GrHD:&8.fPe9YEo"9[e%DZ2m+KfS2$M)^>u81dM?R=4V5ikQ)UQGd4d,Mcjohnbo_]Q:EKnU(d=rhiU@\ll
%(Oj<gF1cOGR:9d,?_ojTF^+'^Cn"cr>iX?-<>"`@gS0:5MM>!]m_ZWR@Xn>nOKm396<UD>p=_S/DENEf/]`>#=*bu'9;FgI9]V/>
%1%c0E*aQKA5<Q)5TXTEkk^Jj6s*q6D)*'H,9=K\+jt*Q27J2r2+PEr!-IigGn!udHMsJWEFHd]Aq+[_1a_>nh=d#LS@'Woe$8Nu'
%/r5t=p!Yir"&1J7S.:>7>kuG/eVH1O&=)?!!A7S+O2]NWk._(AbT/E$Z.16L3.6H"!FD%BOuR,+_;n-`[@h<lIB7+=5lBZ8+^I),
%;Z50;AhP.i%o88]&?pC1=Z>8S;$GKV&q?E#llmFZ8f9si3oME5Pq0uU1TI/>E'd%*UF+9=*[OQ)(kF>8DIRJu@a,JHT%UUgC8F[X
%\]YUu2..X8Fkn4rkhhgPRj"^K^0asW9_]/j0<d+9CI2Q.Q;cQO]f\(+nrhn\PUNj!KpEO6n$+l_3UJp/[T/t,XM*%E9\p%!1F"rI
%Hj-O[gq_tJC6'`i[`GAt[?fIe5D,L&EQtX7-T=aKSA75S-$P(#\0Wqb!WZjO5>3XMbK0>QhlNo\]DqU)rMT/]c.QVaLk(s%)?5XQ
%>0b:%4[pt'PbO95loFeg19.2eTi@!@F3o`<*r'%_L6fi[h@-57kX\Qc4AF#<Q+=M!E;/d$L+&.,B5fONaYo5I3O:Z-"!=@RVar*4
%?JJ7K(TRhVo@.26ku"t-h;kYZ1P0BPn83/uRMl<%ODDrl2rh9M?:Wn_.X`!TFI(e%Fa=H`MCs5m`UE696deP3X1E42,1l#X4`51'
%\EDQtP&=ll,7"S?EogJ1I;;I[-RM[;NMd`76C&Z(jfKe16oTh-^$As!'7+H2+ZKD$MdojgrAY.QA7,l_70UB6U5+N8TNCpe]WK\K
%`rlX]F6tCUW6[Ps^Xo&#TKLek-6c\VQ'go>BdN:k8Q0h+EAO5426j0R%[3!hK#rTgPu36rVY)`);@#)bR57_okGaM*Ig,j6#:0-K
%KAC#]e2a;;]&d.8/_b.bA[Qo<:sUQL#H7j'j&G_;M-?0:CSLrJ\5\DuY@]cVnka^lB8U.:9?WV0D@7V'P.a^:"G'Y"KF-dSAdA8q
%'*JuB3u1YJAQU$f[[!ZSWWYGuhg>rW9L;&Z7phW%C"P-JoGY\-kU^Wl4\R<giKNMG@M5?uF1c6Xo?Fmi3+oadK\4\5h;[PAfDXne
%Rd9m=W'gr=UHL,3__BleNX;PS6C>#,Jp[+!HbF1A44L3/s80?J7GgdBJNGh"]2B=?C9@7[i9C;85r]b@<^eLn7"H*[9`h[aM%'8g
%q)D"d[qCFjo4n.DdtZI<QQQ*lNqh,\pWVLT+:L;99WNB-[*\;-V<7<*r[sDd?H+8J^I-k4?lbF;Er_+P-<YXI[pPP]+b]DR"7Ks'
%!"f6-U6$$8l\mXh`PKKmaOt'oT#YmmT]uOC#(N4T.&N.e&SoN#&Nhr,0TX_E](_"P:I9#ahIA4t2D<mLH?&6`,+&LeSs"m3"3+#U
%1(cl7!i7sr.B^0NjF[!/qcp.gjO+;ck=Sme=l*d^UJiIJT<BOu2S$N&a+9#hJ25kj3_#%8"?#/ZV<0"KQhZl@kR*p@Ug5S\b.s9e
%@_#KsU<."_!XHtO*NBG>O?j(F"TRUc@`+4_cqn#;%.-mcRZZ<.b"I,H,Km><'(e',.olK\jSr6Igi1[qob(JHEV$'3^IRT3_d&T<
%Xj@NT>5#[!45p8Qq+%+)9951>_!"\Wo=;m\ZggER/JC??m3]PM.hH*+>EL!sX4S>f;&i)"2[@_$bmV>-A74Z0KPCjR'%)f'j%0=-
%@%+<=^)qVG2rM*Mf^`.H,KF>#VCJMk&ReJX'ieC]gHr=>h5m:f\e';a!R(@SBe[J0/7GaZQ+iQ7'P4Jr94n7Ai'?teoYsi_="WL.
%g5OQf;_-09[-8!;S,*momUt!V1nS6sc`af@ZZ+[#/WKj.F.[52W9,$M%s):5^O06,)1RJjC%2FRA3t_d=W*<@*%qD1DMq>NfW8qQ
%^0b_&7%#OI7-D12<OY\p#l^R&QVS6DN?gYQ%Am[:0I^r![8k_MFe<<$jc!e(]lU\og+d'?JU\1R;P7W>YSsD1_do_AF+$"LF6T-7
%ZC`;jJ'Fsf$:a.b^O/$PFTLmXF<3(=P;+r:L9S)4!H2CXO)C]he(7RM_nFp+/D-Xr0SHn`Aa4K,c&(T:Y@/cIhXe<oQraVZ-87^Z
%bkB'_e@qGB!t:IBoPBFobG=\3eQ]<Vm>hS,9"A')Y;mDs`#V3^Du?Z_!86E[$8K;9DONTT>(^P&/if::k%B>Ehu)sl#A>O&T[OY<
%kHJih1QmEdXhP)<f!RS9(iNY;c8qbGNsP5!!%e4r[T-m!/@uE%Sh\=SV.BIph^P.na\9$Wlg,Df(<PlM9OS)[fl>["Z9/Po#H&[Z
%2^pHcaj2.E9fF8MdG`:AgD<N#.5fjCWuk8JBI1;aFIKsGZPK/EJd/+#Tr+rGhVQkV_f<teZYCAP=apiM3.f=`aWl0B\tr?eLmp?t
%1q;h_A#brK9?a-!2D=D35/'5Cl^dPp[`7>Be=u%-2o_hR7lW&1CTm?YmG<LW[j_6'.t`UD13u1R$o;#Pj^X<[Y7AZr/.@YIIRe#>
%f&P1_<3j5?J.o4ne%Lk>oNVUU41!WK?%F\:?5$Og2/&@eebaAZGp\_[1gPc%'E;7%Zi1R&Zm+sQ26cN[2o\-M:/Ys3SK&?9R\48)
%p4b0tcFWDV@ULW$cUKkNM?6LG2%g`$XtV<Xa&niRj.0^-Q9&\Q^<`/jq1^!!LmIY6"LkRH$SXR>+ZJ=]R$F:?i\EH4rMh]EjIB,#
%%[;#.KR1i!(uZr@6r4+d]0brTg:`T_c_a,g_V",V<`mS)i3C#LGX'Oflt,3s-T+W)YDniK7,1gV2j^]3AH+Z.qq_F^5&QCo!8,sU
%[#6#KJ)\TA>c6WJ$_48k$)XeqZV#LLcb`>YP+hLf\4230\K4KR$g`,$FXUUR.r(=7q%0lC^%4,@Jr.E*G1Y?V26+HVO)"rc>Nh,s
%II?iC,bJhT,u!(El\V<*j:AD'Plf8*r&(lW]UsM25L)4]C.eUg)l7(ms1'Y)/WZW`nE2CgOmBAs=eFm/Pjam#q7:GC<+sU3"SrAr
%-ROCo=pfchJcCf?[#E^)0qH)e!`(^h)p4/i&#8I9,<J6i\[:?8[dd"FG$6A]-3/CQ!>SX^I58D[b\LpOn0H&Gg/P.r^+Hg).f?^#
%ms216$M/u&`s!%j]_6CXpgA-`^)X<+@,]H-8@-hdd`[?6TSt+$5-!-6!08E/50=L>^fosZq^E9F0tdAl("2+HEm)M&CVr%OlG_]K
%J,Qo@a>6U.^*fsrM%T8)C%BD1+u@]rUDscG(Y[f`[T?Gh=l\[.<\3u_i99lPrp\aD6!k;MiWt/WE%PICqL%4>K9H@k=Y(mdP".fG
%mo\e2Qlak2$<W+=28KpbDujT[<"Mc58ojk>dm`%_f,s2M2Tu\IUN1SYq@-Fh<Ui0fn"X&_F<<L?U-Y=_R,/NREI(R]&g`mTElX72
%$E/2"65kjFT%(ud0%g/_&rY`:'kMZb"!&>G*BEh!HoEFV,#H)%B;t"J]%V$oX:gQ(gHIuNAX9>[$c`UT<_3)($NRHLe]*[@pq!H7
%]aSdknQ0X"pBgThQj$FD97TFr.5l[X@.\O)?%#="Xg%c$cHSd8O.sp&9'>==mqi`hs0ms&Y>6na#@aAu1OQ-N`qQ]O$$_UedHbF-
%qfeE9r$HMFRnjbp"D_-0TT&CU7[4hp.jj/nd<Wq>+7$n2lZ$&EfAR;BMZW8>47,8&@3!ok9tmK33DZt@!_;8Q8oM;S`VGQS,;Y@f
%^uc,[oIK*.p4)#-2FN7G3I<:n'5`4T9Gp6roPN26FB`a7ru#V1]aI-k/Cdt%_#%l)jIg(H5UMaI2YP(h6mk(FqVdPQ0faOON4_6u
%YM,@G;I6@Ses,u,c_aAKQG?7Go^8/jBf;[Qf%mYCLHNqeC+[GXUr!e,g(_1q][\?^eImd#Mi[54-@U3Cl?,GNlog;@FpLU0qa5fJ
%hG56$oltsB_#Ih<N46so!fb)!hga32fso+L89S&>--:8o_1gN\5.?X6>3M%/[T.`06:^HN1gN0:U(g_M4KTVfMP*ejDPu%O+Zui^
%?G2u;1A`C=#S&I[rQ*ZaB-eY&:O_0mi.U33KK_BWC(^!'+@rAQSa4<Gc&\k3G;uTtd3Q#f'LK>[B&:g7ph7*9abelp_)T_?DQ,')
%>QDJHh=_$=[Ja+@3'q)Do':@\Q5lFIDRe4hrT95R*%>ZWhYVI"JXE>6e@39e1VI5X%M*`^]7F964?2`)Jr=6Go2W_+^YQ8o95t"J
%'A"II9:>%Ygu'8Im\g7N&3q/Z^(4(C62IS%lt,Vuo8"=#>rls68)W:R3l24elj'\2!XT07$1NL'+fDDT-BnCcPX[tNU_8q$8R/OL
%-B-`H2jJ1[\(:C]9EA'8i/2(C.bMcWVQ.l0ab5[!;hS?TLl=nB%EgoC[Ka8-"*:H@.7Q*2?'rC6-K2:s`!Eo5,7<JD7iFa7ksg%X
%1FI5O6gcC_D(?>Hlcpt'AU0Qh#L55VR*K9@iX9C><.TVqPsiNY:8pS<04l^>V_Zs%GnTBXKR-Wr.#e\uG$;U.dW<u]?XI;=k)a`6
%+q&GGKkit0,pNS#=h'"/5&5<lP(P3_E"TPDY$MBhBFYF3Jl=:f[C'15c<]pq5U_b8._JfVn1<j['Z+Pi[kFT`?NWur.O<+&Y1*QM
%bc(`?_XSBa3%@C+;c/KCHJo9TA\;!-WOekdPeJHi4B@,J;;U_LIMD3_%E!V/Oaj`m_]`Mc^!``_`A9^rEIt+JCT<Sr.X'\k1)nqE
%%%SC#k\6kh"g#:5WKD*<)Yg6<'G$Y(S'4-*R$%d9c`'d;GIjo^?t)L?GYB\%8#48ZTk8lSdT4e7O@Q8gQD6F74R`bFabJu3BXF<?
%;u7u`aTq7!o=:mH.fmI;p5IZDs&r'(=O)WX#ootp[hVJj5:4&1=1!8l;\]ABlD@P4AjKU10lse$oqfVkDACYhV]_3UXc<"d<Kp%,
%6@djpO7TGQ"4RYPE*!p?:r]\Dg/I9&&eP-hhnIDdSMF0pUIa>t!R+i"-=nD#N9WH2omU](>#[&Eb9J"hQ"R[0&gGm%Zu6PCS^_]K
%UIr4q9?hgrU1.?TaVCrefjhg-3),T)FSJ6#*Y/_B7n>%/Z*bj#DGS!Un,R['8s6ZRbW7p&/+U7E@^>nANFG]Bpcc!Y@<)i<_Og[%
%`at`D'=/AbV382lF^7W/I/U:7nD+&c9pV^)o7*-bMq:ig%J?Rk(dkDo9mN?LXI*MX<_R=/?'@C2Dc;]Ejg?2r)=R<Kql$L[_HQ$7
%EN3$X)b1K[cBS<`]#S95l-bJ12T*7aehW<Ja__>LmT*=jmKuDoGAFC#GU.WZ\(-BQ%s"pG+e"11Utcos/I%eL/#1%9mpl#T7;>7(
%TTNm+q*13W_!mA7Ya&QnCPKSj0\QYqPch"`/+I;T(*X-fQqEB(d<H!2H5.*l$R"]Zcu[NIVlYDuKbu[6J#8N^MJb6gSQ2PqMq&(f
%/;_`Q&>.RG;=%=n7NV_2F:C79ZSc.6.-p43>$q[s4'*H"Cc'ZV3HQ&E8SB*L$[E)3=\P]6Ia$uZ?mVpHi5W5`,uF>9R8,1>We,W0
%]U@3V9JbNK&faCnK=Wnq:-G..i4e(7.)t5t>ED8*cag3lEp68;ZjaNoPfZJ`?=NFhdg9A`#%cRb^8[4]'au89fm*'8ElG9O6C66C
%-lNWId_K90ic"=siuUb++Ip3eC2&MHF&`n]F3fY0>*AX_`'(MK(fBHJ'Kq5q-S\OsdkTNf\KL[Y$Hi^j?j\mAX*4FhnOOY5gHI96
%3TIi`h3^m@qL$/Lgc$(VY'-)"hJ`"#AruhjcSE:H)f&cTam7M4lp9-Hh<9qoRqRh@9<t-e5m$u>eI(+NV"3*N#);ffo!Hc?QR#LL
%*4I-,Y+FE$qSe<+X3MO^.W22b'KG]nlu#V?H+^8,_6;YH>k9!BGPap#*/UBJkZ,m8Z4Ep0^SQLlM,_u_qGG+nC\_+LQiRWQ)n<6"
%C4LgQL0?'oC7CY<omN=.cJ,e:Zc-bp->UBA!6ZE8ZK:!O'Kbk8i'<aM?56*mXs.SU`D&)E(4rS;"Z[J2M:=su\I^F,i0kgNe'[$I
%$n3Q@9oD*$Pae8AGP6TRrR[0He_NTi(\kq^=$>XU6+O/A9s&X#[d4^;^J*('%KJ#sCeUNIJN&Athm3&1<IoJUpGtl\@/(f0:H-*L
%mYo[c$KU()Wsf@)X%_5/1QE_0E.k;LrE/JsADF4*i!7<aXBiusi(+pV8c.=E1t[0!<j)";pI^J:g3p'1G>o?G3jU%,NmpUGXjE:/
%722@"F3ja>C/S_c$XD1*ofW'/Uck+L?4/)%"g5]Mh$O#?\)Kli/R+%A5`=5V>D/)V9@q06>L.^,I4T'<=3e;>Y+Zca.nSPIR<*Le
%3_?]%iRoNa(nNM<f6=j2)K$Vb,H'HAX2UA5<S6man5l1Q@C%cJ[ZC.9(7MbZ-U@#sakPf,e>Hjk8]/'5ZtB9J^$9[hdIIiXHt4Gm
%d;6CE&m'a`m_.]BSW6d.G2HN#Y5Kt9'o>pDq_c"%:J)1X=^pDD![JA+VF/JD&\gR;@6pcJJV[(?'j':!%I=3_O';4U!>bc"oW%BF
%XCdL[>+<c-24C@`:-'p'Z>rHt6uauWCctcf92ROKHPkI8V)k7a'Qo+"bd!S<"H3rd!)Hi71*eYRq(sDJ6Op_0Ks8B25cNG(Lj.g9
%NI+s"ZoEul0?HB$ZDfcpI>`W8onk!5N.sHi=s)YE8kcMEl=PdXaAm2^X3`WJ`Pf3,;3:O<C]W=KCP`Ghj3\Oh=WPB4,i2(MUmF1E
%At7d@5KmQ/et!YUSWEJF$Y(^>$uf9baP6\rd&B7UX9Sd]LpX=RP'R.Q_.NCGEg<qr8D-_f'r-soXh`/Lk"4_#<^^CT5t)9#^(.\W
%,P$nP1p>[@<q)9t#,N_R4/CK(CnK=+m@?B*[(k!g[l$TiL1+%HcZTqoO(A)!Ttn:sp0:<ohNoY/=gGDG''-f</<!VJZ*-gp=!qt/
%??)$g95ETk%+2dF*INT$O>82-_(%%&U62QDL2U`F.XZX+ad6^g?0j5FTQ3iJ+gm/C4l2-Y1\8<H-=#>:<:Ju?Z"nTW0a$DHl3#+m
%q+Sf1MK3JV)fkn]Ng)r'.hUrAQqoeFPAlGaYD''bK&Jk1RGKFfaWL)P2I21^jph*S-)rtBG6T$@c-P3m;PCXc&J_DQ=NVCEP_$1<
%/(`W&b'Yeb$Bm]baZaH?]]bWF7=`=fD^]@A.GbB"jNh\87o#rm>co_^-4V_9-`kQ!b:<mMH"@n&g+?!-BGTYkQY8MhX+D:XbhZFe
%<2oAt,3[04eT*=^=D/G=>_9?cTS=m1o5E&7^]3c6@SK;C\WjJN&l\US0:>ttUGVSKHXU;3'K#-9FE);(W][A^U):#&,HM"8n;M0l
%2!jI/0%6!E:lZ-+KM-0h/P9dfZL*l[Z4G:Tp(q#%`cdZ^7^))!4$?:]FF<<-iIF`X&Dkh>kj)F,pu]M/<4d9!6I*a51a*@:70lcD
%W\B^LF0SKQ<:T'b.j@+(%-^gU%G.UCU25"#VBj>8HaU@GHO1Es;L'-]0I)$G\%Ipaj(`@<1FZh/o;LZQB">&NTAtr4!mRRMTboT)
%'770+qF`u@+&G/2-m;_\:IJ1o!_X:QJ$#UX10ft,Q.");_:tQ=X*q[u;+NB.q1P_'&(7M$/(XA7Rp[CloUK%VAnjtfR>CD%2'&"M
%9M#n-H$"E%!#`$(q#-As_*omF1tJel`@Af;9^^^h1GZtKdd<3OGR"5W/aA;Z3Mno"e2PYb9MZ5E9`V0$)Q2W@[=)U<^AhT%QcP@Q
%1O\=*H?r;WL.NL[lplqXSTT]chVo/),\($NI+^Y#.G&"7=Z7%R,Pj9"<Qj;2b#W*CCsMgCY-8]r%68==Q\?o)]l)u3a@&cFR4'q2
%>D9CX"]Zoa=Af=\=RXK[9rmiELAJGk!++8dJk#'l@Fl*VNG>_Z]fPKL,-iUONFp'RnhifjR*p!R>U3ma"ZTT2SU_e@$.Et&mb`r<
%K!]XHg#!]+Xj(Xn$0C>o8jW&rHn/#H9^+.NRU&=QL*GdurVDZtC%g.t:Z99$6o:;R-G9DOB$bP!pD+A6.p>MOVUPOuIrU*_4LYRG
%*iKtBZeO5fTW2TCd,F(IR"\Ns82*t6+]q,#8A0N#j<CGmUK>2jZDJ8e\Fs&:H]kW-Z.80'9hK8E[81Z)p8@r2)77)NS.MeO.k,Q(
%.Afq@"_"'Y2MCr2a?#<-Z#$CND\Y1\V9]r0R4?P5L;VC#df(2S'O<5Q;7tMLl91>rnM"mZ!]d*EVD:E3QM);@LTM]#B!_5/:Lf=D
%B&C]"=%U%fLL7YEoWS648s4KL9`V?W)[pVQFN'E[PND<,kEgpm=&OUSh(/$Cq;H)=m!,gAITbg6G5\==mDt#dEMk.3L@:,DAc(Ye
%*-Bg&q.0EiZDejY:\?%0d5,.TR&[1j`dG\+`/pGQS9OqU-8CmZZZO,2oYhU=otq@Z$qtmC!XKFS1_!f,D^D&p@f^HT5'*hUrCjh;
%XkiYmP=>l@QAk5LXPRa=oG6"=]e?7rQ_p%P*i?t.3+?(6N*)^=r2+6d][Q8J7:Afh8`i,3QcX$b6hETlBSJ(=VaYW]k)X[2r=$NG
%oTsrQ`1hP`"k(umGl_8i98,,!+RK7LGH(57m1MEoQq\@E@.QCtl>s#2G1aRd(Gh>BNJ<Ia7p/>3/aVfVP3JIpcge(7(mVkKYIb^'
%6IZl!676E?M$#<J!m_f(>Fn;oVR_W^`up=AH@n45DC+J3QKqkPr.Jd\O1./in:dJ']`'%/%!1OQPUEHb1pq)1W"S>UJ7QDDC^JCI
%PmJ>#`a4?uO>8!6iFc,%[>d$ebOl%+VOG[7Bt%/JPYpA_>a[1\0ZV5WV$lnV/?kUCG@%Z#$d^Z!)<\u(mcImJOW;j;+(WuGrB\TJ
%,G.CBU3gY"MmGHXpjnH?"tl4$=sC;g:9$bud^u-p."JoCI@*gm>-l;-Wa)U:/(q[3Ug9Q2IuYL757@$g4U$mYiUmdRhNC\re3<bF
%9.K?)ZNoRhGq:4*\Vqcg%W$JeY/AZgj+FtD^5p0R5_Wm/BmT$ShN^*WHVN,?X,q@I5P?XNf-UQ(q+H(#g&a2-\W(h%eZp7/Sa+"c
%Ds:6$QBN`tY(`oghfBDJ:(#_M*mL2^eZ/E'O8DNL;+Zl"/+VmZE@VhREd@l\/<c>V[SOT#I+cDRn_,S.if.mdSU"hnA?.KQQ;+DE
%(G_j4jX(hV*f,<,1W1fkbP^/TqcD<@UdjX^KI[A:JX.>:\TI@)#Vd?GH'"o!#Q2a=8Jc[\EDK(Bl+OcbV7Og`VX8h*+hk'75*CD5
%R(qFV)O5S&P8QC19D;%KG1IIb^!%HXSAfuFVBH."i%?Y>+hKqh!b_=M:P@-]F)Uf^L$[,l4dEd`/L3dQd8(F*Uf+/"_"9b1p%A;j
%Mi+MG0'>0Rk%CfXbH^,g-GB?nW7fUdpikFW+'Ss2#T"H/Sd0/,<+)]Eag#j:3Iiu"LqF.f\A9tl[E_a14qK'Nok70hWTl5sJ]H4l
%XaJ+7NpU"Fdk"WUG+Ps/!e,KA#IJ#j7V-1-&c8jIo$um>9F.mLTCersF564]^"oGs!PSjZHm'*&F\8uQHZn,J2B&*srS39iTKh))
%4tf2@WLF>NE1\FjVQ3bSlEdRqTJ3BMI\Hs+d)`c6D,(m]`RU98XG0.O87\#"O8-#C\r?`D"XqW9?EdL7c/H(67sp@WM+X'+&sBRT
%WS%@/r:P6Gjh8=\H&9%^r.@Ds,M,se]fg<>cr67C>-Y'mCprGG-_r6^-l;]!D+s+5fkD@fQD`D%n=1+N@cX0N8:A0'.E\NF<*F7"
%E4@kqgU'huq'i8k_$[nIrP<OXF0[+m"SGg&V9)8P:!Jt\JX>6d0n9ud7'(Q)9PMTL\.!32XT0Ot@PJX7rG<ZDettf.Z).7K^q*Nm
%2>j&d],^'`E``9I]X921!Bt;0/)JXZgE5\)Z@QW?k568$J6TS:[R9LbjkmB=2EThBTjTX-olD!KM_D7C%NfLCqnu5<F6KsWJ>WPc
%55lKm0Md,#V1r_alHW[H;phBeKdKS^#LS>Gdi,0GB;)-^k-\FIQD["ZZ^)b[^3]\J=pB90HQhZY"q!5>]jAR[q"4h/W2#/"b^gq?
%B&8a9c1JOWhc=_g5QDC3<]jWb^*YV"[]NFr'g'5AFBQh&$-RG*N2T=/fV6Z,[u(kN,6[B[m+b62nrtuPdd(,K2B>X&Fm7S0Eb5b_
%L;j-h)a$B<4u.PPL)>(uMX]Y4Yq<\J[?Vp\_eq>h<JUuY;=0[1GK(\+fMK=LDL'XR"gjH.chi>Ql>0"\Dh[:jbG11?cYZ6f$Z/[Y
%:%r<$QYqC[`m!t)N?X;M==l;fYGJ5/Bb]T<B&I6h&J;uSh`!#,O'&UTTc,GW9;n7I:2:hgLEa)RkUb'8<WIRV46#aETF75eVD_B9
%*)M+EXGlLOMAQd69?^MLRpdWp:`Y3n=`CbI7W$m,=fUQn$@r(QUpUr(TNUWH"[<ZWESKQR8Rj:ORVMY<<PD:5>Z6r"mkMq&i6oYc
%hm;=m[JH/('04-]U%sNIE+]iOnS<E5GqG^m=1m/!@fQd.arf(Gp"WnI*_jS"irE\2Mol"AlTV"/V8ea?_3?a9N21n?&rQd_hHb[+
%Km>jOl.Ocr'@U"<\+Wc?2Y-#_c[7(Mm^4H@36X44#HQoYc.W7&&biD:3)f!WeqKVOZ.=+e8`"&f.S?5fnN"$[!d?M%r118Ga#T%U
%@?Bm":CfGMBgf\eLF!tPb"8(^)"b\mc,0!do'=Sq]%i^2B0g+8hesp'FZV_D(cifnM;`c:\D@9dTY7fR$5$(gC)W!1\<`P7^a_C)
%HP*fac8Ibt>ifqYQdDS\?WXhL?*`DE.ap?@q-/Nl1JZ*kO!7Xaeaq7VkQj&D6-7oX<F/)u_=W*i?+9@h0K7_uqR[O:"rkA>MT(:l
%4?QT:l>a1'M7M:`jetcsq=$N7ZTY\6dak(rmlYMn!jGaK7Q):F3jAqb]TY-deMI80,Eq+oP%4MX54-gsLVa(U[)]DCWRXq+5mYhm
%@KbK)>R&[?YZi('bcs2b*OZ)6/3IY-Nbp"c$s\S0-ng24!R0t"7N'BQ1edkHbtTec?<4PeB'hCGo[+&:j'/ngW`P_\4802F!p_hY
%8ZNa@9F^'\*>Q*ZFJ9$u)qBef1N1US[oMFLB-qc__Q^*]dhAArCDC(e::XE/#ZI\mLOE4DFN7&50k9n3l<ZPm$Gd2mEZe(i3m-%p
%j31!Ep*0Gt-6et3APnGq7.Tj:@Q.qX)L2eG[CK_IXq8XQOA@=pQ3tK=`W%9S+N9+tm1<5_1RYsk(/#Y^p`8<CTEZCQpOQOA/^OuD
%Dq2^U>PlY6IBGJNcbW-cS`hh-6#%VBJ@C7\8)kjV(`h'<m`//@dm"($n8gkK!omIs:TPmg0LbGc9:r=e5o?[Q%"A34$q..m'/0/#
%SD_FEj(&&5Q"cP9eZ9XcaIjTR?)h[1?0]_oV-Iu"][mTtp8?$N1+!r,CGPmjgI>HDTPig3\];bO\mh$X0A"_"OrG]lKWoR:he7LR
%;)Fb^^Ob?[9kDj>VKS7H38:!gZ3/?gG4@`*\L)[ojt.d``.p2Us-M=@-:@t2=osrob+ieI]5;kb:P_8cSp79SNqM&nr%9W'kAdpt
%bA$W!1MdHAJ2&n<_p\J'"2^:#T#9PfUoK"=h5:be'lH0ch>.n7V?<+?1ZKb*2ATPC['0^cZ'aSD<Ej^GO4EY>%+D6Ok(ca>7Lu]^
%:Odid4$C5=:`h2")tu%VG.L&TiNV'>WCdgF'\;sX,Q$cVn5tf#i,'XQ/'Q8:G9R;sJm#(p7hii2^8j[Qo*dX-A7=T(ZNT'mp2QCU
%k@(Rj7/QTi99JjdO.al^"g,p'*n2[2LV:WPpE6tW.[K`&l=\$:4V/*sQ^E/>/3>)sn`Y^M_dG!_GKtqDIgn4C=n^@\A%C6:GC@rH
%Sp&ktC.UjQQp!a'KkX&S.+KCNKRgHBk&8\k]QVl+Es"PjEJ;j)$k]Z"@3]=j#OX:Yh2/.Pp"l`#k.N2Obl[_8B<,P#qrYXB;2ihd
%D.m13-`>2^YfMnY[qhn9NcP_^kSg9^qJM'Bf@8MbeN[C"q!1%@]BR0Q,Jun;C"Zdn8Fsc4Yl\0W6@6L6p(Dl,*Z+5jaE-"fq/LP=
%]@h37[%mkum^NY-e\cN6'"+;[SubW3SB+h#B5CS[G%X1RV[*5upsnQef$F&HP-s!`>+VtbN[Qf*$5S&khmQUSF?Y)2>:9rFAn8eK
%eVT7=(r]oHCdF\4o+*&RPDOeN\d>e3U'4?(j'o!V>*A#IhKZ\nq2>SI)n!dJX:8r8eamR%U6s_S?`2jZS"eSJ-8XAq]MDd'$_Ak/
%?&`k?#`EQ8bYp?%?-!4d2)O&/N1::MN/k$VT"fcO$h;iqD^E`Ff&Kp,gVu-#!+>E_&7@aH7kD(<T^-!$^-f<nGWe0s>juqnqHQ![
%J[?M^0p0(HgSuRaWkDm8ZBEOKORO=X8/5:QbSgs,IkE?<VTIu;AnZ`1Q4B)Pq=O,eT-l#TngnIPm'F)_X$M#SO[]:m5GOo=@o_c3
%(pEI7bXBT'AJ<df_fi1EDH3S&RY_g1FYP3=r*4A`G4;YI'B8K)X+#*7KUF`]5O*0TNX!;DSp;UhiBXqps3%D<9<%_$0-(7JcU1%?
%[)k=Xr<CdI+9!f0Na72&)(j"Vm$#rLm\K%6<e[ONk1N/p[NKHW(W=Ot^#bmMK>>3"k]eS_>"(n$#2R!Ms%7dRn!kZQC\R+^g7or&
%))ibF591'7euIl.P`r[iW>%nsC9$-i>s3LEe"[u:O!<BW:7&9MZ#rL%E(5rAM>SqWVKaQDUkHY<+W0UA3_*6:<2H>Xe&I&2oiY0B
%)K2mOe_6n\UL,GS[;hq1Br=`sa)-C4AVF;PoqbI1Z8AFF)8#@4NkD]OEkBULD-Zo]8h.Q6O8M"N;'WeE268(OEd(RTf`$qJ??Z96
%aO``<=!ct;=&$<YDH.uIp?IXMgL3-8^:/CEIB813C9!idnt@QM4[&oq.Up/1$d4RAOknT#reg6Ib%)HZW40+o(O6Q2CHn[PFbmXU
%>=Y[j]JBK5nfj;U8n;_HD7WVlP'(H5#::%:bG@&`D;Q-q%ukN)V-guk9"qoCX8@pT=&"c?j)e9%'XocqW9Bp48c1%='@M]30V!RX
%90EZKaI1qN(>#Y9*+&>fV'.G7o4?T2Hs&N`?bU:c395U_n+"Fj:O)TB897Qt=[J5$b49\@^>hc;e^k&D6.o?&RB`!.B6CfHXGrSj
%5500[QD6ICWjL.#gm?Y=TST.I_*&tUG+Oh/f[&*MEkl*FX)B8_+MATqpF4nNohUSmMGkm:1e]>F686n-WOau>H;q*m:s1"`108p7
%I.@k00h=@%N(s?.e.O2qc:7E9<Z*#F94$sgMfBJ>lpf['jEN5;_i%8II8<4`q:B8QFFo*FD`auHjKi(CUn[_SWedKr4oL0^@B'f5
%KBE-8=`IL4=LU3H5/%eLV\<B$s2kK6mfQY:f:.h)<@@%Wg5/bh?J36m?nBdgT\If$!qgW3W1]?^h$-605%p!G\I@Jo/\3"im#ScJ
%/V]dc[6'p2k'VoD&1[7*Qmu9UV)Qcq/Ve>b>3QIN5s%/62COI>F0H_-_\os&ODqM6/*Ci4KfJNH$_GDV3EBPJYS"NfAMjrO'R8Ye
%j,P,CRtQGJgdD%(.ufKc&W#1^B#2nr]%g7)**fN90bW%m?6rm5Um\&;7^F<Q&Zf&C/rnQ/aU`W;WUY>.<OHNb,1dPomDW23X%Ki^
%]s<(inZUP)(5D2W;#SdeKaf23)lJZ^ot(CUC<'U4mG14Ai.M@!]99$&?/)AFbG!P$FeQ1s2C?#Q4.mJE^b^H3Q%[!BTSXD8d3=cJ
%"VBNS7leln(:*<R,(#-0IS`1='=Gtj_\>Np9\[RkX%=8gbAM>l.bQPlBQ/o@4p7,1cFND3)*2ML@PVPsB<GXdj/W?hD"T4FT3F(*
%i--LlIg*fueF6rOhMlp6JN=d%_VZK>^V@?5*NPTA-Qr\TL[IfoL=uW2pZfVc*oO_'Ja@*i2J4W!2X6B;&ugmn-RfQe`L0$?m4qb$
%mo2AKgQN#raf6PiB>IL9oPDd:ru".Gk:NO@UK.KBT97$0]0<2*V3_HCpbCE?N69k;[-CIU\'jMCinLP]0k:Z!`a1jt:uNj0OfnNi
%[H(CO;"6#K_`U'eC]LBfZc%U(d<"D.6<2h1WjW%c]h!!/>cjI<bJlKH%/R,47S;S,F9>4e0$^re13&+5JAhr#r6)A#UdF14bec'e
%b\emKq!cG-j,hHZg>tonkEjg"]/m?tc&!q0I.qN6N9mRIAUY<s9Y]#Wh49MhOdSIC(=!>FL2lRJ=9aA,1BW.,(V:A1n"`->11cfo
%Ki8j\`k"alHDW&S9F&Lj<XYgZ,#I^kD(fA2Oj>G4+?!%FLSqG2rja3[6T:&W0FckE]"G>;<rY!\)tL>3q9cWKXZhS\/aI0&Q=fT<
%d4VIi.mDbqF]tE'%H"NVKfN!2Bo=7[V<@+j#ehp-F4+Dt`Bk%LJh+q9WG^OCh;DE)^dGeLD3eP!CupP6mPZ87(AJP[7%F93iGBVB
%&()@/o*:XAQcota-$VBPFcgs0XUIhbGib76;iLEti[IbQ];$6uHZB08\f&/qi_;Etg+99G$\_1*CeYJ&q)[2&ml\WaLuPg]#CWq(
%VL?\AmqU+P;ttYU)IMS4O^/e`BKS'?SD=a\apLB'MHnB8"h';`\0CkiG8iu+ZXZjoGmba38QD\MeBE71!U'nfRhG@<^IhYNd(Q7^
%nZJnOZRMDdkY_+g[fk6AD_8(NpTkb]Mj'DSl44r)@Klo_6&u\Gs1epYF$]8JMi[>c[6u,1?2iMoSFK:qEE/?cT3Z11B?(ij.bK2n
%AUd&:6gZ`,ft7'U1VX;a6YFfl&VR-$]D#9*GjQ)`d>tu^>Q=;MH^l?-nr7bD.-ESUg=')Ji2ZnQfXQ2d<6emh%D1V?'&"4?YF`p8
%CrjZL"R&uBN09>u5JfF1STO+miq%pOZ;hi-q_D=W:\+AE,OEsoNtu\D747@;7a\ggM3!7cmSZa5W?uR7Br`$*`s;"*A16u"+S(eD
%AVu$O7bO7/i.oH&ci%Y+./Pa-e[4_c`DGS.AJ^I:&hasaW*-%_7"G9$Itj#jn"1$J\Hp_h2_%:%rdkXK%o57>opGG3#BW9TbbBX_
%Ha5h,Bt3F)Ej0gagI41_fjB)(?DmYuYsRefA%RQl87jW)3r15?Em(Z3!*ihlUX5l\a%JP>$Z.aO/:BQBb1jC^CC+s&rk<i+#%%oa
%Jr[YRUCIr9B-fKu!H_c1\P+WFBb(YS'KFJ)$L>1!E;[:OAt0KR*\AfP[_nd$<%F>Ehhp+JKmSY<g[o`#)U?mTfm_;oZLk>kWWCoL
%Rn;S1;6cj,o<UGrk+sMa4L"!%-us"8M$@5XG#rGPIpegc>7T#%,:2eE&^G+(F-Gn[jrZ`;D);(blYju2.sV\d`TX;ide<DT:a?h4
%4kD+ResXVJg1,65&-]%VH1.+8g>_UM?,tN8jWI=AnCrs33Pi2A1[iI,0TjdF?%`VVi``^@mk*KJU'*+`L`+leO4#o*=0MU"!jT/P
%]01I0MV1bNI6iM3k=98nD5hW1>jG"rFQOu#)d%@-#LV8:6gUV=DAlpLEYoH*ScUM@LfK0M`ODjYG_c:":/A3Tr2u5#<`uG9Y86Fn
%<p$cnhrA2E0F&T4@U!,"!HE\kG*J)d)dbE+q'<OEqo\c(^e3"n$1$ISeZ/1QX>od8a8(;Qm-ITQU<*cOWKWCbemq%QN;b9TV%H=K
%hL$s_n/qLhCe*<$/6NpbY`58\ea8;e6Y5)a="9R4Z.GkZ(D6V$V#H@[B7hjqE)?,E@Gq2W'5K?.q3\;&d!j1nj'Fj6+[9X9L"<4E
%ihkq=iO>/=db'W:*B4Q&4),0gVS:\ch`hR2pe'Ii<YMe]6ff)mU,qA*iP5.;6+^M=[.lraRO5&b>oCAP+[;9fj=N>a[S#9\YDj[Z
%k:;9DH9rK#$`Ns`/Po?6,,@@:X]Vl:q9p>^-dYUB6TR5_7Wk/DSb^rYnb(6VDW6_5V)*``_3NOT`P0Mqj%/_-82iD0gFb.:)I7Z.
%S<iN<#tp*;?<=41T%)I`/6a$Qe-hg>(tp^!4B9W^!2o**5o3+uTIn$W>#*i<[^Yi0,k=Q[[aH?(Ju)lJg#>qDnJNqVS5R)IDnL$B
%'%5t3F"ADY#&ALg<6k`"N'uk(7Fe&k:.@4(`lRk$);,i3AIE3_e2.':n6?DiiVj:8#&lEN*KR0GK!p-JSAN/bmle#LJ<`?8i9LUl
%Un-SYE!rf"h*Z&=_E!sWmh)`(G^=E\8Y*YVSAi#9JQK;c6c*PBC:<c6_qRTCdK3"KWb6YDiC84,V3oWRgmoe4>Y(5Ae;&6.bC1g#
%:p%e$M^OZY8Djo6Im*gHo@ZYI6?I_T/5d+3:9!J?PFi_fC;&:3%p5'n3-$8f(.KX:WTXI$J>bZYE3SN=0DC"@it@mP0VI!N4pfUe
%a6U</RsfB^8b![*+)ic:>hsXp#:sSH^@,-:VKHSUL<5-,=?;hDLPk=&!4o%LS--"JpFr73qkUd_DLl$T>*'SWNL7rDNE8,Y=$J7J
%*3Y[P#13.rT-q]>Z!@[l"-q6$9@.s>Io\GR[#'Y_cTY!2gn)J/O[PI,CG9*RqUlf=)dPO`H8-<2]6'bPBS=L;rN6>L9_jtjo2jo*
%Z1K5F6:C7I4LZMGqEn\@2Rim1T[#(%ofV6Ym[h]0"qdRq]4J?FR%rGjIC]/`qiQ/R;QV&rT#XJD:sH\-'RU/&G%$$DF9\,Z%6:Et
%`s4-B`1@Aj:^/JrMMcgV-'YGAO0*Y`+,GYH2Rj`)OATdTXiEX(d<oO'nF!$-$Vi;MK1Re`cOY"jQ2LT3n$kE7WXpdY6B%Ce0IA)1
%r1UIV>\tL1i&s`Sq";\8HXYWqiefQbrEq#O%3kK2"1k)hDX6J;%DaXm-_&pcXbBg?(tnr7r<ohH5TC81fObl:c80amT@!)[J"2.H
%VB`/U;hYSW0_NstF/%!D2^<7Y:1`0&!JVb_l*"M#A7l[)"bcPUM7@c7HEpBldA/1+SYPoZX(*br1UBEuJTAur!LX_`U_t;S1(_\)
%n3Eo=V4Ej8TA10=DH5dC,[s*-;nL(j#.W4bODr!cZore9]g6'^i#2FFS2N5>S!YcX'\DdZdSkQZq!R5CH[]NFT?f[bO3r(Yrp@&k
%Q]Xt-Hs/)Rg%;Y$$<$A*N\2%TRHdW.>1AY7Mh@H6*iYM8$@a??%2fk\'@F@Y^UB9k$'8;!_u'Bjgc;3;=Bi;%m-Uc*>Ts`FI%AmS
%^26UBJg58<D,\G;i8Ua$Ti:PHh.`V&._R_al0:_p.q_ZF4L@)0\$.54)a)tUj=P600ADpJ-<dGPh'."rW7(rM.=aVi5Xk2?dhF#U
%X6@ErT>jE^)cP1RRL$oqHO3Ds^NNZd-QM=H:.9Sh,X!)dH5C>Un7J92?/rAjrQ7o!;VF?5:sZM[9-q?_K:'+D@e1]10sMENd@cpg
%'1O]IQomE.r+_4'99FT^\`#PT[alROhX3E>0DiT3>>nYkk^1N[n-1`s.YF^N%P]63[@muYXh[!/dDo93's$,Q#7Tu@4U*]/*c:X&
%h$/'PrDU63a?ZhP+Xkqe9$r8`H[a-!^a'IPmR<&<Ohk1unPr\O[q.i9CF2QN?<A1+'Z(^Mf3<Le#Z?*(V\S*FjV%ZBcJUi5].Pc5
%/tTMdZ6P-0I+`Oc]DUWMa_7UE/_A!j@+b5=^$N.=G;!05Z0h.u0"`]C&r+gn6UeFUp@3LYlNsUEP!@_GG!D`FqXku1:gQ'i1j7PL
%<!M&ZSnHRKmldP:M_1`a\i*cu3tt2DDq8\_Z;V)G2$'I9F+a\fols0a)Nt0,b1VkU_j';KDA=JfLGd^I<oJMa?T*]edX@.sRGD?u
%pJg0PrG>$\6?"or*L`jq2.!<*-)Mt8DeROYg7V3%\@W^a[k'<76gVZi6Ete&'Nd#6YZOVup`N^M?mGE:-P#io=Y=`#R8:"dq('0J
%fEEk=TPj2%pWH_1+f70.QCdK8<Q]j-W$N^IcgQ%1F2P1\)0[l?6@H?dX//3Uq@>G3gf#jVllD7rYY\K^kjQrVrq'(;"R/>m]AlL)
%$(iJ[6dZTf`g0Cu'8h`,7lK3nd!KMlVVKD\aq2DgC7%O_<?$X$CWthFX`d1ThN>DiUt/7.qPt6H+c$CoKC0e\Zk-u*P%YpJW]2^:
%;nBu?0(Kb:W.^d`HKMrD>`VlnDfT\##,D:8I$J"EqY"_KE1Ju+N(GS?_.7$g6Hj237%3L\Q#BfVXkJQ?\9_Qr0Kph6mjrbJ:\1`3
%gYT\Ig<c3Z^AEl]mk@+t^NQ(.XL2,6#b&89[bfqDK[WIbZ9QqqF&fE(!X!3"?%l>M_jLP59pmQ`G;@#m^Og`=NN=XniO5b!IZ?6q
%;2k(ik$Dmoet9"a5)It9C6LFeW-V6EV8uGs/hrZd]O"cSI#Id(8A;%%DO;IU"=fQr#]0&s#<8riVNc[Iq6VsCBk(*MRtr7nN.=U8
%UGOQh]JC3Q71o!t5^t*Wql,%m?UIVbVTJ+EC+&B5.<1-9XmQJK%i/PGbVZB?'OL-!8=W1NfSiE91q,M,+bTs1N,<.*W?>0-N_Aa`
%l%./JirmJOMk^I9N2+(M:`GN()JSC/>h`Thj+m[uj3\%oSc+JOg1Nu>C0DX%]>mDpWuDf@pr\rh<<eOkHnhSbr/81)ec(r-*B&cL
%>LU<P5P-sD)m:Q6QmGWe.2_B*rskXIiPo/a1_\>Kki9(A!r4u[Q%AjA4BtuM]UF6L1]Kb^[T[eRJJg]12&qC&VFu6VLr&W/oQ!&Z
%eWC=?3`Q#l20JE1Bb;9Ho.9_]QMX@J\s_uV*$7SVa(d`rU)<N;acT(+!qcr4RKd/BqVP-dYc7Sd_Uh.cQ*./lqYSpa($C='qJ9RI
%XjolNP*B8QHh&Y=MGW11[1"$Q^mk[-?RtoTm52l>XM&MAmjRF+Cg$]/*,pU8/TjHYSAoYT+>#hE.Pt*j.\QnRhXp2%9Z2Bo^N*6+
%b!P2-)7IGNIB+,O7[B%o?EgYnnl@k(+lfeu\N6bn#:-C<]pb2n^`)4WnI_?<8p1k8-H,)bK2-3FF5]AX*:$dE:jaq;>3QLh#&M(G
%\.EY']CYU+R$<McS9fO7O/qqO+Rj=o>0-DpjLK]'9utDYZGAjVDP-4#>??k((;Q'c!7Rmd2hWquZD54_,2_jcI48)nP76)UL0]Ri
%$NC4dj4%`0-,JQ;jL)=5p0/lag!+c;'*KX<rh`VS<[Q!rN=M"A6RWsmE-P?oW&/Gs0;HO1P\>5??*qc4UB8fqJP!g+*lDO)'t;D$
%nAjQ=875at_-9ffT6jJ:N54Z1.^Y!q8?#>Q(NUkYG(7'WpNmngj\RIJS'bWC!6tO"-/4GVr"1_ZgH%1eK<;LD1.Ba%@>2NcWMVTJ
%oX&1W_[T+b67e8n:J%r,rm`U;`7F0hWrA%@^38+\.e#-FPko;U?0;PDiVMu1fQVYu?qQ2XUc!JH;(6WWK3r3@_LbZm)$temc0S`;
%PZ]Zqe>/pg#F+T/51U\`b[k!#ns>_1?a+G[OZ(ggG/FfU8+.t+V.Q%1,UE.[jX?;qBN`oa9p"e>Psu#%bi*5QWV()%mu.ZV9AK?2
%d3qqm:1!uii<#NRSF?sLDTh#I4EGi9[>nM)oJ+oKX-_kC#>)5q@tM_/^5]WVr_]j?R%JN"RrdY'.<sbVP'lcpd&Ikg21pt?b#!*2
%,>$)\Rc((WA2,t'+^Re8f2T>Jn$a8Aa>!Fi=0MQ%W?UmG1))_skUC-IHa(<_fN2.aUUo?UA"1K"6qK$]Z?0mlVe!49Q<0D=><hXX
%Q1"Bg=j`Z4q-@Rk7"nBJ:phhf6=jAo5q][U7$QR/qQ,@b*VJ2]`B2BQZRpF?<+>1\m/m`^=$@g`3LdpqWOeT"!i@)/p%.H[$"2C!
%H(p_E2F1bjHs1';gkX.aXT;P+CnuuJKnH?rOm\`/CbPR\$br@Ij^\G"(V57Y$0NqmhXuT:mTXnnOfuoR,.V&?_\kt-+("j!H7gF]
%'kmT@C;0kF/mte:!T.SVQ)[s`P?nRW!QjX8JOm3!\Io,QbBV&r!$+&nW!7Ar*FaMJ_nPToi_NMr^Se>k8FV%nk\#qmK/%d_GWK,6
%m^i6QrlmN`D!f".^bmO8&g?=@'=5-16<,W5Hkl,e@SD^6`+&0P_`/We.G*XH&98J*\J2+Z>JAhaa*k"@5_'uc]RP^WIt,lr,]ppd
%J"n(5.b#0d=TkA*&Zn\^g_16YW:g,8\:/-R.(>gV*FrOJ),<0Y#DU\i0)_,@NhSk//<][6Pf9MOM67qXP/pL0X6VF/FBAIX7XprP
%Uj-VeN]S[2K'P`9#kP2k^kd0iokLpepqUcJD>5CV2CeaWX9?@1$Bjr*$'5+CETM,$Wp)n\KP7BI(]mh8gi^dT2rlYFklBIX7g8Fa
%rfeFq]tZ/)fnHAL]WZuuf0?8>Xg9>2G!54m-JcXUS?dZ6<)`O?/d5QC/Y-o`YhHc`[%6mHBc"!6[?'<m:pQ<$"oN*]6`:KS#eH!A
%$$]?7>%[qE"R^Vp/Fa<sOa@-B.k,tIbk]J%X'N^.&>c+3NTu-NXocs4q7,Tgq>aCN"eDP4+Bh]Y!>C\<ZJp2t@_-a>(:qt">8A.h
%XT#jqX8P&4]%s_p2pS1EH@.l6Uss$4I9jD&O/I#u'IN4n*!cu=V'Kh[Z9F>0WV:r',H0;)WMdb@Y$KU>>WR.k]Y?##rG^u'/M)hY
%Q"K?:/`Q&"HF80U=>&k09s@_9/A0k4I$Ils4W;NS`\V,=Iosjd$qYdlW'rc5oCUjOfh2:bRW%p89=A^hX]5(3b$88Rg(jQ=X-k_c
%?:sS]Yh*e]=[lsqj@+$eX^eNVXIS?R%[ijOI"(645_<R.1,m_P4\B;`n;1.k`d#h;UP&a,:W@fU$u23CQFp2f%5W>CO1b/H!qql.
%q5`g0f\]'VpE/!Boot>EbM:-b/>C4cB_7i?^K5)f=AI6n$YKs"MRVl;@[5L85%k3aS+S2MC.h"uJY=L8\cs:m+!?%,??!OAq,(4m
%,f6u[(&h$D-%1V1"4/M]75^*!gFPLtF%b0CBUMLZQL+c_*f5iu+f.d1CMWHs%Q?E12U1>bCiFp:9tQFl]7LG8)Q^*YO3(Iri?NL$
%(K@:-FuMA`m:?N/;EB#O3#-bWHQ;*8:jUug<)?FDiVaeqib57+7I<?+a=D1.9`C-t26oN$g#,\Ql<.<R5k"!76KSi;3S\66B!Hf0
%\0(24X-KnPqGQ*3"[[KF>']*5@<"icLmHtp8KQ1Gd[.]=0O%F=MD2Yo0Y(JfCRn3Pd'G4titu$G;&7X-?NsG^!qFZTFmbl#>PM16
%+k8>FS_ch=OZr1kRc:b'+A6XeKN]*Td,oIfCS[O(`jad`Te`?Fba<9LY(Gn]b`L.op4'dC<cZ/!J!h/)XL!]'ZJsX(%W"##!,rp(
%)HPcco"1i79Ch>IGTWb2agG>5lX,hUkJRhSU9=I?%g=3.`)_)RL\p:qcdITV&d]@EdiA$uA.bB+.ZL%B_(9S@T$LFjT1dMY>Wrmd
%@Jd<JcX*6\6DWKbCooH8<dC\.<F9B&`u.8LL$8jP1'L^*:N`RP_K":A9YKmHh!lJB8b-WHTsgeM/F^&EZ&KcQh&2H?kGoX^G^e.0
%.m._LKbG`EU+'`kV,PLeO!j%bMR^>f0D'G.<^V!]G(I9MOr63XlEur,mONcXT*sq,X`sS^D^A?5N_8A<8qimY.453e_*^1-2XUa+
%YBE]XUlTHNinl67YF\tPOI0Y<RAh&brH%*o!m_p"XN]ZH(@0OlSa.+jqik5@[ou1WlHe0iD$1ph\:'CA40Lref%Fk:Ft7BQB`Y/=
%2YR8s-`f/TgNr_`m\NL96XE[QGM^PZd5Y1AP,]l(TVs4e#,^=SM9%)FM(,\jpI&MH/2#IePuYUM30kVe)XUl9Msit=s"^0sRoGKS
%eIA)1d\Hk4i(+[-*iIR^8[8fiTeh,QeY]nF_JJaf/6Gtl(t%!B3p]tNl8^uq8mg^%[X3\d#@HoRFN96?gQiRW6T9et$>3;.f?8@A
%m^e`=F0>h_CVhT_HKc-Qn6!G"7nCChXS4oEkEt;V(5Ao8$iA7V-J]b+^%<786eGf)aNUS<+PnX++4I)?+gfGTh0#cmi&q!9KTpA4
%QRG!uD'l,)*?fb0F_d!"=]k<!GVXcPm4)-]"+9F)?e1i;ELIo/G;rl:TX\(Js,;IK?Op4i[nmWq+d_'%T6J-*STSI]laAp_Ls7io
%KPPVaD=.a/blkr5:Y]LPqUWeJD^edaY?eBWY<f(7$4]s8Q2eRMm7O6tKScoI7&EQX\)_U;RP\4FN2`@_Z9elRmqWB;j#NCR\Dj$V
%QeOW\!V[HZ"K0Khetb8><L\eRp&<!K.9GAr-YlW,9=uB8Wg]R?"s]+k8./ft5EdN%n$(\bR8A`\SS^O[gr4-t!Q/adL<Jj0N1db_
%[r&O0@_nQl/"2>K@^9"dhkb**:p$1dIdj=;Y,o,p`iO@se@V8D4,MrqfLbo>.ff3?s$O/dU-2]D9bEXf]cfJ:g%-]C6aYke3"qII
%ol]c\>/*:O:PBAa]F!muC35ncmAp90[Y>+f65-1Y_mSj,]bA<1oor(dId)%G;J29%#T_-.ff^d[j`U75"@l#/'4-(dlHJnmg8eJA
%lRI?Y[m-(3AX2n3B`rU-iIom9Tp&HIeY$<rp-B>$=t5%9Z2^<8<pH8lbrP\s`j`P<bTiC7?0s<j8gQ?5Y'oi)H+bEJAB[i-a-dWt
%TE<+Q1YGKrKl>/J-0+\\TZsdF'l_J3dd`+B8suJN39f+]/eEZ^FujtpG+N8A>[lGjqot5NeJ']ReSKSL9mer>,(AFH23%VF;YgIc
%fRaj/aO/<Gn^#/=@iE$Q-fN=PMDkTH1:5d3CKB`k^YhFHks;!Id#8q3OGcP-<,JEGoAN!#WYFcHp,G*=!E#F@S^<\$E`^6W/=km'
%>rWBYW6SkX$!b&Uk#QF:bI1e4$5uC`_E*d)Hnb0JCd7"=((V[TJU\c9?iNPoO(6.H$pQ-A4m.aj:2aWWC#_%TJ9YSImaI$oPTMjs
%3A<dCg1aE0#)FQGQn1&$j>LJ]_haAmR)?AeTrK2'NV?=7K%t(q"F(]kNQ\,k+6@WaeeCQ%3T7_eG!/J=O_^NGZng"/pEl2(g'Cn_
%*e%Zf&$I8m`-/.M#,tb4c)]om9FK+GVFmD\CMMb1Os7,[p.1bOJY]pf\5+Cep,"Mr,W+u$X-KqiGO@UN*%RC.7c[HcAYlnmLV819
%q+a/Gl@EiirN7>TEc3kuh,:&Z8*P^aC6U>&-nV-uWO2)U3a)j?9"(WE[ubTWaNufC:T_<K?<+o%T=^^Yfm_2.0!Y\GT\&&aa/Vs!
%X6eHhe.rctUM@CY9X@@&Y8jE_]"W6@4#3)9\G!#8ML?d_m4_fl86)[B.JbqaM;R<`BQ\6f$u&Y\`D^:t@0.TNS;f!EJ/d7(l=7P.
%%M;tKQnhdDY.`e<hkuI46OlQSVWcfo<%940NC?1QFr?(S7BIPFH_'o"Er2biH.XOjiFt5j,WIAa5V``//,I&>4FLi<YOk_Q4u$*I
%LX3G1)A$Tih60ebY8-2JHfb!(;&]]$2E&$T./g!kSNF5ra:VaDT$f(JbQ"4E,TVOk<lHMi8$'Pf\l'pE1?$rlG\-.M&3"BnWNX(3
%pC5<B=.R*+dp<@YT$$hjn:@GT&Vs?/d>$jhNi4%"GAI34lJ+iV=&)4sU,9>$1>ZOjGQCH5[*8?[W2(u'@a:V1&&F(:7)$PQREE$\
%J(KY]-M@RT+E;**6d)tlI.kW2/BdL0cU\S\5F\_Q#$2%KR$eKtO=M?q]O+[7-n!m"n%;_IZLb4N$?=2SeR["U`Y5(SS!iZRnonos
%^ge2BO0Xgp9q2fm2/-=8Nah`s_/cLK4HCf.Pj-\`8TdpORa_t]IIW#SSPS\JlSgt3oA=9(I\jLo7B<b\LP<8I.N2rC!LLJf,Gl'Q
%*Y2,.7LNJn20:FWSuK0b?F?8VXK[PQEI.@9+Me[CTKT#s_`Ku0/.)L2aOirC7q@dbnQNdKlgK<]$NBfalhg&q--$5.H1E\skWCTi
%+t`QfV!hX1n%7'DMO24O=G:.LR@.;X#R+No<mHu*SlYM>'Tuk,@7D\hb=>g593QS1`J71J;5:BR60TXMNB4/HhpR;1[Cb(lps:-i
%2S/?5orjO&-^aaQI[6e]SOLFmcC`te]nf1YCf!&PHhHie"Mn*YJ:1U)S[:kh"Fi3)G.ZT"dPMc)6)RmY`@/(ed+CHHG!mY/U@sgo
%6M(N)@64f2:p6T>1u]f:N-e)>bn5gO'foRa#J"&B8<-7$FpA`E':3J<:r0X<S1;lQG>Fi@WIZa0a*,14dc([WJ;,lK$ES'7h(r?K
%lUHo"F`spD>+#.FQ]`@q=J`1%q8o[D,:/dN(2`7-c?Af/>4ik"qi(+?UnuaUl4faml4[smQE8RMc8qJ5><FJma2?/L9dM'RFT3??
%=X8B0EEt/+1$5_hXu%HnVq,udp4c6)`fr5gU)TEc4SCJ$dE7W[1M&6[f"/;3R,QKEML^4FQhq-FY,_I(S:DbpO%N@=n#s6eMQO/(
%\?WA*.$]1U<g]GGj_^u-K?BS(im4HS>[]W;;ML^V>t*lM2RC]T$ma7A<mXeEWk6EM!/4%qe,&;U#ptX=mQRM!65.2G2-$*2*++m#
%j%c/HC4_cZe9h.U0SlsS9U1pMn5>JF\$`^G8^&8Jd'CD#P/MFG`N/?ef>P)HR,7#8os1L-)JXH/Ia0.\0e@iQKlTi<&47te'CG`d
%"ik3Qi8pRM@H_/MOZ&Rk4Z&eSFB"a7.Qqt.o&ckm$Hu[,U@L@>Q7)n6imJErf+/LVeg9'X7ujY[LT"52Fi.6L+7_H:Qj'?bQ-@<%
%,!@A,`U^Pd!qb95NRAidmU)fg@X3`A'NR6O!%N/brFpGl4Sdj]J(&F=K2uIF<f]c+qb5a;>qHGUH%3d$#qfeD4*F7Lq3p%fQBl"R
%Cn4rBd?Ng@:O6SZP!3M0r<NT<2;3Z"9Lj,oXG\d"Re-ZIj0geDRE>oe#&(%l+9R2up9]6oX3,3MKr8B-B90$\R=X(gQN>)4\7bh#
%q7osCX$B,R[h,:'7DW1d.D4Rg")gaKKD-a2Z:KC_!&?&Upp-7;(6rLirU:Y,bpqmsQIVGXMPA4,+cc%HeR@,Vr-a%h\t*X\3R.&^
%N6RIe1t!kO-h>0ID9AT>W"@N<ofqG:mID$0$?hXi'G?bGi]p"RHkNWo$EC=UcDkT!hJVP_IKEnG9Fm\kf*'][N2[uDbbk&c@]=C>
%`3Bp0Z!6'qXQEh=q3^UC61!"ZUkeAZkshl:Khb\%qJgab6!\o+M@-CUpZE&^9<%D4dK)sIkpV6_]5dN2>*3V-7>eMl;7:uo$ihhL
%isoiQRl'GI_)\O$^ftR@Qj)&3Gq&"?WBuMa.]k=E-$0.m*del77=:3<r3GB0*b%_R.6Geear+#7r-NiZC:7*Zhap5TPk+<#pY3i+
%RV>CY(2&+49P^Q?;G)Kh]cW\;4@<P]Fe^6.n(*@F=s[u/rY5q*Y(2:39pM[$?K\prUSigF1`b;o>K5.`eGOc$8r$s.^O,:u&(S<8
%J;3s)KJB*"d1NRqf:fh1">]PUT=pGI8hM!Gc).&,XX.:OSr9P_HFALma,Xl\+IO(S!VPaP:k!N5N95]0^mp+sBY#W;_UgRmh0@/l
%/"X1M_:bO0ATijTRMs/j!e)o<nC)3Y='3@GH6uhW+%uf)jD*/8=*?<s=q)nN:Se^+!Z*$C2CaOe:8_W#)qF))/qQHI&KZ4?i1]=I
%!rQXnf_u[&$X4T48WoHa\W<gIM'ZJS]NtggMJ#_rTi5eg%#BGe/uY-T96sT^b-sNL_5OXp7-1GgjtRlJI"/<<;d?UH2Za[;<AQ4Q
%0Vm=KDAhs>r?1tgWV%/WBd@\8l';/M?4n+(S+a96\*j&l9lms*blq+\0R:MH$\VVc3P,LYl!o<j*\\8.Dkjd[ZVnD_7_(lIaW4<5
%L^5B$A,P?7RV`tr3,eV=B8`"08dJu-$DnbTb0RS5)l\#Yg!d7fR/df%7>Ba>1X`c0QOdn*W49dT<PX3",aOPTVVJ#t=3$^RdiQ'm
%,f_E;Dgu'Ws6A+?S+4C41k\Ucf]h:DgqWkFS332FHX&9G8Qj_=P=u)mh)Fb78Za5+0@nP$kM7G\7_=>>*39*1GcC%V*CUXQhfUa.
%9%am@+VfjhIK2NO?nL2m<8<Q&[JEhJG"^SPZs;q6.AX!2*6e0FK"I;!Z7Bc5k"]6i]@/4EIGL#@mmi)gI7en2Q*:0Fi"sk>1Sb_R
%C9i):6q4O/WQ2C<fP=\7dh7<'B+b1$gj2kpq7M_^<^cDep/i3%j)+;f]gH6UEZIaTGP+SLeK:ia;HM)C3L@;-MI@S\<+=WmEs_b)
%ktO>>6BA<3<"_*pfZ55'e8M/fiU;q"_bl?o2T`h$ml=FP2]g!0NIJCQ(h?p?QCO#s]Z7CUXf9pDQ%gE&8NQn+;BPJqD6N7#jJ>?e
%V-"K$2b0r=1a_&7Y*d;/<\RVG2(H02bTATm'^])Vko^5E)\.BUrQ[0d2SUb82:&t5,Gu![Xj.YL'#]/EVN!*oaU5BOa<OD[>T41D
%EJ92JXIhRK$(/&B]_4j"$$q`P<X1(EDM[,`<XX[qkB"Prd(S_]*o"4<f$R*sE=PV/Uo0"9"\j3:f(:[iI\4nJ7s4C>)Bg]$B%Z/M
%;rmjYr:Z_Xlc)nIg@daTYAEq?_0I[+ot(-Qo241ka$8]fLH;H&"s;%cN]M+SMsAm`!)[=hcfljal?CQEpRt`sNR)&Yn76lt`bnWN
%e"oKpGAaIRBoaT-Xb/4+h+f0WE,'4Z$oH'Y[O"G'1DS1mRF?aZCT/@"kH>8e8M>prVY)un0X9=#n'FMS2nIHC),lQUmTFaBHCie:
%>[G#W%34"hs-BiPg`ae0VJ?4)SDMMXUA!9(&?'BjC1u;^q6FNB=B:*?CMh\+i-k<6`K(g2T,8:gK)8k>O!LS9B]K2T@^rc`!LlIV
%:3Lp-h0PIWGM>AEo-?>$aE4fCe"=ucD1flT7>B?T](:'02)![I.&O>TSM*&oJD=X/W[5lXC'4-6CF`^)mP]WHh_Fj$5[+g5\?,b]
%f8-RIe:C<\RE-RUm9l=cOl'V7Nnm2H"bD)iNbC.\H=G3Hh*$%bYF3#YBeSPK(U*VFQ@Pg]DL%[`[FYq+@BSi9[:3Y\b/t=;ns$l^
%Q,ND6E)eAIb(@/Z0CU`iZ-_`E^E#G'F-SS0G5lG=M@aJkee%crDY?(O?g7c<"]gND`<S61`YSCZcuWPpNbMVh:Giiu8Os&HAsPq,
%hS+58[b=TFQIBL&Q:Qh6$F[W6$GTJspNP[4!rI<1h9oQ>.Q98*YRr2[MkY^C9#%BH*[XHAT#IN3j)"0J^Xpki_E`7<i)>odX%gEP
%!VYf:2[DPE4Rc]Re<BAKEXou0(aZ@OB9\oHHYIjl;mM!o*cK/'<Y#RRG"U\T(2'?j2Ca!BTt_;^gh]ae"kcY3&=@;%,$UhG[Y/j)
%nMBa-3Cq^h-3ZnI5:jf8+su=6H]D"!RK][!*T.2;Hpuc+Zh@?Fi(2UF]4*>N!88l&]kNa]B<?[['Xa?p:WR?P1VEGGE'on1nd79`
%l0@odomB:''aekp!:mOurr!1ZlGmC#'kP#fV9i>oVh35F,4.:L07@<T17R"b>D^UV<fHZU.:?1cHAcL7>4Qmk910?<%2N)(:hm>j
%+[&_":DZO%WTE=Y3uOW6\d1ms*1#V_eEf>sLf(dED1+C`@!4f2^ER;N\$S).EHEAt7u!-tRu0r4nEoG;S7Rs;T5Tc.VC:2W<<'T6
%0I'SWj/PFP(WBX2gjP12aM$$'ii&8.)RA:saNLCRS8j.%,RDQEOm7uVK"F\`<Td4*a:L<+65c]8MGp&pAE6ME1,geCYc7A(<Or+/
%NDZ5P-q?i6T:%%a-i\!<N'1b0<(5HggYV%eA+r&g!S&srQrsNh%>".JJ`\)U1LhX=eSS%P$8$2n\l=)s">EeQdNg=K4cPmG\41\m
%>2GP+_2CEU.#Rqj^X?O2YO4W%p2QFhYhd3<>+D8f,K<^/!D!I*KZH\0hmt\;V7V=D.D"8N_+NSnoTM_hn3=%P5`[C@&$Kp:[B`p-
%`j_,UQ)9sGY$,1l1"Q%al.4:gi[cu`!JaKbO6nNfEFUL^Ts<<YNkKJ&?Fl^=l'M$S7;,"BCIJU@[B6072E95kd'*fI162Z.)$4a;
%HY'f38p%+Kg@qEoIZ0>jg9L?!2K7.,o]K/u)B[u29M#'H#^Vcg$],292ACKAQj9So*>5t4Jg#*MUb=L\EhAbT_t8L8iM&/Fj5^`r
%1c/`<d+Yt2VCnl^eHs%jW+2ZUR3GC>AuK:%LmE9#^TtL;=fnI5C/aGDVEn\7Y<r1uqE=7<o.bhH%1haPfq\2bR)jQQi[VO_T!8XQ
%>`(GA1\QmAnq#,508U@[daY42cX^V^d@']lj)#Vnp*3R8NpqIkJA^=d%<:ZGn2?Mg&nuA,N)JIUX^KHuf"n%Lj$$B>CfaC)<JPn6
%9$#b8Unk"TT41ct0g9c6Q'l@R<er02<(2JCRYDHUp_>Cu@dhO3@,H>X!@Ie?$!:hZX)&a_>;KIUS.de#?=G#!,H5fR0?JrmLA[3K
%PIe,)"tna&JP5_X,NGu'M[mSgC,UUMcjm(up@e/uM6'/dTO%4s4R_Hgot52g$!Wl3AQku9<[D@b$CGT2C\/j&^6eO._Gceca30A+
%BfHnnbg&O7VtX4beT1RD7`DK.s-`0kgi6@q`GsDT<>T?.QinXaGKlNo=I^N5E@IgV@W?)u%K1MGa8p+:X6ElaPZS+>YGmf5fPMk'
%5ZSIe4drcSGIrB2(#aMF!psO/@9Qru^3o!Mbs_;]]=go=$mbForO&o_;>AOc6Gel),$^MWgsrJE@@H'gEa;OBY+&JD?5o2/iW-2F
%K`6qCkA=LQ<X_j"AHQ73OQ=5ug(ef/nO#CZ4OM=,Z3)#&8n@d(jS0'YOZiiK]1Ur,a_D17F!r&ncVKm!rqX2>:J(]cMgm;em]>^7
%s2j`FHY<<&iatl"l;oC[?V;K+pE%(iD1PmM"Vd["7nt'<.\r"lajL@%OLVY$7H+:.BQ-Q'^r9hIcKA&P^dF9u='PXVD1$HU?lAP8
%%4M-I9_gp5?(74N2Qm7nVS_;aagjiXSg%QXPc&r`m4q34ZV+::-'a8-(\o)O;Dmb-<AIAK=nSRi/^H9/;Sf1.F5_Ad)VM/+X!ODm
%UuEk.ZH@=nAL=r@I^N7pbmF,K#9)p7c]B%e`@!fBaO*kI#\i?c[`.H>f2@h8CMtJUeX%0Ha".uaD6MA!mq'a&f:)0uLLWu+AD/^l
%]gQ)o^)<*YSkbZZq@HJgF/td)b=j-4lQ4L&o1i$">CW>\c4hYI\5CN;&0SM,9[$sI*V-=?DV1K%ccF$b;LAZ$_Ln-unsd,%/6O!9
%%i3<!!N_:J<<E\bIZ8R0&]gV3Np;;i&LH345`Y-NC:Lj<B(0XgUe-bL=W1[!$CMp/*d<YoT4*et4k-#N=hSt%?[mt23iuffPqn)L
%^2oNNYEo_hWU"V9T5n)QR#`4GB-(.;*0V,9F_UFHeE^<&)J[Y7M_,r%];sR+(LkU:e0'`KUcOt?-JnAs+1bJEKIM6-#GSsrJE,7.
%1n.k-Iso!5PjQKlpMF]C,A19+>9+Io/e<b1b\d/G^'$V?B;7Le8f8Yf6Ij<O;LrSDnc*Oplrl5;Y3gTid!t6uJULB>1\1Fk>o\Kj
%_7m/4gmL1!@=5jH1*^4Krk7oKerG-a\uTVXFU!DYU>MojN/ZDoA+-hWZ>,q^gMj\t"JWu!_,hpIL;+Y8Yole/>mb7&+sB0A"FOFq
%\D<XOgbJ#>CRp`]hi&lCc/pQFiZ&:2nbVk(HVRkF(<.FGXJI4@We>(FW?B`V$0R/'B8P2BF?HU:C=[q("$T%2$AHr\IeZnS8Lt6:
%lmrNb))2M_D#]t8)"L8Aii1(c3%?^Q74%*a3H(C+$*?9\HqC61&PU=b%LuX#Flk=BC#@3$N0RO:SFT%pX-5;.a6KnVSr#:D_4r'8
%J4[S:P,A46$XsA%NDco/g<$aeR<#R2oNa^p6FsIgL,"CQ4NU]q/rpV.$_<0:VTG!uo7V_o,=(2/5f@@?[nApDDCeiS4kun98k6sg
%HK<78;!3Qf.b[eub-K<Z:jRh6'Vh[f;Mmgm-;@5618N9+U8QX9,:7bEI2MCL?>']ai+[GGU`[tgXU1qpn<ZtS,uhi<C@UNQD0hiF
%6`iFiQ."c"L'Z@1a<X\<a#SkM/[ZA$kindr<i2`9a??-FEcCDk0ku-g3k#i57qXP]qQG7SgCSX:fBQ8*JA+,)C>gYTIV#TlW=TTB
%K$fj'1&c-;&ZDpj^N_<_QcQSbk(Dr#*LEa\+J#D2Nl8ueR4DH6oQ2YH=8I6mY,:<\70C;"SN(TZj=!L1W@P/G&I6uRgn/-&qW+i6
%,k"nO%QdqdhG],oL`%%KonQ"qE,ht]U1l%O;5GFj>#95\THB:W.[nQfgcfrV(S8PEQUoB/BSg"G7h&<NH*,.+q,-%X4Pj2pB<bF%
%G6k8,Ul`m4<E9->H*&q)B=go-YY+4.4(5&ekDq3aJ$#csd+%Y9Lt;j/'e/a?k\A$kgnBsQY>3_J^[c0P"dWpSKAW(@a:U!.$#A&'
%_fH[+4ScB)Qb?$m$QpY=#7$V-IC8$rpuFW4;X$S;FmAUKSXFB$e:nO6=pu<H>l9SbI>gTUIl1r8etV-8=uW56INWUTRS*bm"]\9d
%l8;4NiueNedj,CmL2!0q"mtcK;RrlnJ=*E].#U2&?unZE$cLNFa\e\'-X-"+'Fi,d\0%+Oq]<F(JqlbLBG0C!'R0HaM#3>I0OYU,
%a*-u%cb1Al)$4Lgbo7kBV':`WRO/=k,eS7L!-9kM+n3D!i$,Z`0*s"&dg7D)gGA2:JI-3O9s7KRB+QrnAWIGb;<FI?pM@)"?D)B?
%+/VsseAH)5\[H/_NlQr9=Ro_XRrUo#d6MEM!BlMC.-M*Td*iB-e7CpbDsb9\>l"Q@2357)F,;amQQie3hiOTc^kZ-&g`M"X:Q2fN
%9N).V<mqPJ(o"H<A?u!k05j+AItD^J`$?#KR`[;4C`BU[;El)3?6XhYN\8[WSL^ZG@G$SY!Y5Zl@jj%GKQ1')O8.'K#,nZ-R`7\6
%0/jmq>-fP"aWs9&W_,t(U<&g]DE#OR2;,J6([aNC.QC6%e*O)BGo\kuVQ.LPS#b8*7]Yo-G':RjaAsVWf918!'PX6.3Iq$Acg/"b
%8Z</TThQ3DQqVGXF)'cJ3R+*HQl)lod^Lq:]V$EsmoiF=<I^*QGPr([,V;Z(!@;YC][!HFG3UuJ<!9B_!u:<3,HWN5BYau2=/:%o
%K\Urjh-sik=Y6LK*u@!ONoKiD`<]$\-n\iEY#?(>.EG!f>WQ-s=Vpa);S%uXO-T.?f;KROS.+UMDdBLGo'6E_q99U::DK4O\iF%@
%!:$K*]r;27-J,)%'pq7IWmUnH/@-^44A/<b,B3u\'Z_Y@d4LQT3(oN0X@$)-KNY-D@i`0e,j[p1OpW'JdtZU,fHKXd."1YG\N*Jl
%jL6gu^3eP.!_X)U"L:%9,e7$:r#(ff&)XKe4(ASBo?<>B1>b%b$gLce)J0o$9Is7?>)D[9WhD!C)C!Fmgl![;#6-dg"VR5lT7J2"
%T\OWn$3TPgZcn!C)cJGK4=TC@1,34XSU^c"Vf*(@^sa!WQ)ZFhb5--h.YUI,_lZUjEC3;R>jiZ,dl:<TaQ;W&"_")A7.(`7I4p>n
%@Zln-LoMt/)n-FM54MaF/A#@hlW0Uq@,8k"MMOZ,H9cf^&u4tP=@,?D!g1S(GXJ6Ala]k4T76&;C-%[@k*d3L>.Z_1-BJ:k$>suf
%\mef*>XZm8>f6HgpEP,3C&38C>CJ>q2,r2p$<"9"Mfrg`>'\'Cp'B'B?AjS#p8Tj;QdcuN*[UrF"'RAUE*!ABD6<][ncQT9qI)f(
%q^')qm7lGS#'<Jdj6h"'B^ccEjH`*_g]C*W'n)W`priC1]"O&^7nu(gjm<HOhg:_cg+pO:K06]r<';Tm\n#+9DM,-><2$T6!!2Q>
%L#tsq!Nh]Q,ZGbkhdZ"JF]G_N+J(C_IgY)jD?8C5^Lbj&IuZ\nLl89"i54,N<W@.`M@3q"K!^4s_nM:P]b(a'Gu12:=;IT@li?=s
%5LV[nH-$Y+Ob.4^Mq7A?;=Ub1.@GiVLdW+?>38-shMu&?3,i/AN;3<fLhTkE!n4#1C6U&IMEL\<Ql5V27ES-q7BGNPO0IZdeKIm6
%B7ES6:>,ggMUn@aJV-6</#4CAGa.6^TETD\OMh2V?N%IR5Ze(=e*+@WG(jDO0p&p2Y7hE&P\O"Y.[A,]:s2]J^15rg"<en:POK<W
%p'7<0@CBKO!3ZS?,[Gi*[uDj"+L`O2iSo0TR?2:8;(X``$VZ])@-D#r!#.N6s$COKqsa@a4(YR1:N2q%MG4[oS-2`_Vel==Q0ClF
%"ph:06^iF$Rs?^s)ZUd;f`K@*3h;ir$O)+b/Sq8c@_u0OK&/M*%=;W*Ph$o@@-jqHfIT)#O+oY_a+Br(4dsi0ZoGNXLW\Y.^1\p"
%gAM=,>251n"2W\:=''koM.Q>alU62A;/_dP3=pB/(+b9.r0?r&4WtsBmV#SJ&`UdGUU,CpW6*-en-2q[UKfO;BX<V.Tc.0]"W9K1
%$Ggg=,aA7<QEBETa3okkUX5rmT;p`OYK3I;Wc+],7tpZEDS#.9>RcBZ\"q7MW7/AE$M,DFYnp\/&$=4R?DjGl4<2i1!Mq0F)ciRs
%\-QIdgc??p1ZD1c,V^l2#"i]XPB(sUji!nV+"bP]Voe6orF0\:(T,e6lSXcQ$3I]"o9+NVl:=`t_cGn!A#fTPT6U_Ci0WJ:VF\b4
%.eTmrR>VcV$\<-5<MiKZkN9)%s->c\#,QQ=Opj^K(C(1R)T0lFZsbVpQ&J>Th^PB-a,[OhEtnqN;\Ui2`Q.]`E&S-3*>Q%F.!d=)
%d-+=A*"j0*LBL7CeT)ask1(*:Q>NI08_oF!\lIY*db'Ge5hlis9CjRh%&`,oa07Sq3c^h=EUBL:82H?Y;q,Z-.b<*JERoe2B7*\P
%FP^fqhF,cO\`BkVf+fPA!UIT3ZlF?]^1eP'feA))P^hNu_9d;,POS`;6(nKLiNt/`.!O4K'a;ti*lt>u%h^\6I!@Z'I'E59@,;5[
%-n!>>#R[V0OJF^86Aj)pV!@cAAPoO:N%$a3H7eE\EH1*,)I84pr82CUpNfDRj=KnJ!LpIU'p>elVVEr"VjOE*U2OotEXba2i)/H?
%Mqs3AYSUk3RO(H*f*C0))6pL6ChdC-W-Kl0/FtT/(Z&A:23rkk#[4[6E:^FufChU2`(%ob:.)mb:p\1Ga!EU@p3:@]MCJI@6S3:Z
%`9jnVet_fK>Z7GY+C3jdH<sigkBL;8\*u[/>-oVmbflK.[cQ.NO)JBkm-*N>&3c3Mg)sp<Wl;t>+30fMS7G5A0X;iqR*#Q;\,&/@
%Djdb=EVQcOJ9IaJ8rd!)!k+K4:A:o&%9kp0'Q/2ZDV=58pCnOVS+AK"_.W0::D$#U5E4V=rg"mE9/hH6(lXK,A+G[03YI=-`#qI,
%KTg1I^G4DBk\jK5c[OPYO2I`c+j[=P&r/rC]\sl0o$8>;o@[309Q?V$[">]BGJB#)SGJ%2Dm+5'1aL-9eRL^+]"E0_d+0FnSM`4&
%c_ocY)_3L5::Mlah9g"s`6QQ&_8qF@K3MpWob@^aN<Bp?NM'DW!UNtCU96:uS_D8BURZ!3eg`)M<'-W2n7I`lo<Qr(k=KBDb=3K&
%(9'uo4g6SC6;9)_Eru358J>Tn0EU=!X[d>R.?!6jG=A=C+A[DXqo:(g68\8<6rlO`%@3JHab2k0U-WX*b4jSg^Lc/rG&/aJ"ZN0\
%GeE:lC6<CF7Ub.$.6AmHia4GN5f98<ab@KpeXCiVp0&Zs?C4X;:)mh/PQsBGj@*-9j0U+E(q9TrlMU7.?qL%K*apKeGl&Mt?h)1T
%c-hcN%W"=*UQ*1rRU#D07SQC0+ce0"-),'Ea[G"iUK#T](?r>8rHoO=-h#]pPgJJ,g*TR5;9ppJ*E=%>Ekc_jFC/]d9'M:OmNrdQ
%':6\>I%qU"Qg2k:B'brTr)"g##dX4Eq%cdV=R2dUg:S/-Ti?+*CkiEmUD:U?=%m,)S+*K)5FV<`2V2"qOYl<>Yrao1DCu0n2PYWZ
%nqb:<";mmuSGrj,;j#EYV2;$'-R=2cWC]!OaU-]k8L!\Nab4n"mo<C?<Qj]L!88`Tdl9Z<P\8B&.,ipa5QhjXpDD"s$c^HEF,$cm
%'2,>#5tr$5n03q:#h*=(k\u>KfjsohEce'C%:4sdIGA-!;_j_@RS.&R9M*M_/^k<[gX41C1]b5Ia96"WN7BbNLcD`'a<0kt\iJpa
%f*\oX)?ldAA<5nXE.=L,f=bjQq-WETo/BQSaIF/WZ.OKT;;lPEe7ldj-u;`GR,U]o>KL.9_m;N[V?4JL[pb.a`O.[G5f.PN"[[S@
%Xt<J?`8^*JCe5[**<_.gMQ.RaJQ[??;/Lsd-DE!HDp,!*#^M."T^Ws7Q'S"SMA$1&pKW,`WmX(,FBMB'.l!eM<+?591i:!t<d8:/
%5=e@@?Y@\+3]C;:hlS<,);!+a<Csbs&NX]+A/Ncnatlb+KsCNA3.VVm81gQ;DXc`DZis37ha_I=O[EgA!MnIp!:t"fqeNH6b-LJ0
%<US@>Q4^6E#Dh9%W?\<#LU7]`==UU&#a'Y(%r%.f,S1:,?5FU7KT(ZJ>REa$OjfE?(DC;Q"Tk?#.9iPE/;pGgO.s;RLb-lP/Q:(!
%8)r6rOR5(MJ1&/S0nae85YL3Y7^_QP-LQg;hCA2BJm(XsNmEn$I/W!+i6GS:EGQqHi6Kmh$4Z`,GiPa2a6'U?QA^E*4;&/G%I?/-
%flJoT>3&O)'',\i:ZP8,<+TK!Z80oc%o?VnL8q)b+_f6Oqf16W,'=A!(/#5HO\R4g_\1c7^.AJdl>%2X8>;H]>?'U)?uontBjBh?
%VaGJ[PW(LB^_#QL8+B)hmh>%>5DmGGOOC#!$7Z`Q7H8]WLb.Ls`N_0ijcaYVEDc3`WH;1i7I]HFR(5@aTH?b:MT61XAb4?0#;LE$
%qkg;;2NkAT24QkN`GnC`4!^*.`<EIk:[N*80?qXHd4d-1V3s!YAkYpPFC\LjSJf%OXu&)dbhSnk<:!9ud)1"_W@ub!dGI&sincRn
%R.Ns3YC0>Bo;EU!X*PRBe8U)ob/<QN_jKZT9uZE6`iiEA7I<C^`fMS0aRBCEh@[@\&qZ=3H'N8b,[RcXh^)t$0M_`-kD/raRHg6t
%p0&@i$nKA?>q!-q.rI@6%&:C*D0klnrFX%'lC_205gZn#n3Sp#Nq/:6/U<E]E@=&*AP=s[M7[PcB6R.PUF>#HAE&Y:]sE)IpPHnU
%"m/G.?sMPY1J^<(K@2sn7t[e6LH4FYG"1)L1R$W-[?LkI0/Ed+Y=[P>`4^9mPU(IThuh>)@2&Y?RZ]/U'ZH1Q1!;%sgR$&82JL+N
%K(Q!BPF6R.7FiAFOVKu&Fr^&sV&j0QX1TejWa,5*FV6c&QjGXAIk2"#.N,?X(.FFZZR$?Z!OF*n(XTD"_O=+P!3hGn4Fn-TKhJYk
%(1gV'b&5=;^q:X!Mj;$$/'G1&H6q\4au/,0Ej:eOc(n0f<QXmL3Fk\LW%)]0m!Ps%U0Q*GJtm02/i$mE_D+#cj?'"6*!16#C%,u5
%C!mY:q#gQt%Rrn4[[,YgNdJi5.=\&4r"1k5W]Q3Z;q7l#iO.d)UdBW^C**P/OnQb]JtgGRUE%/q(sd-HVhh4lW(IsRC-sBEQ=Zc"
%IYXkg?7.-(_fI#`HRaBWbSWMCFs4h="@!=okF_c+'SrFo3lklO!?g^(GKPM#ek0T2S&P_R_NeeriouPWYp[8PY!"D3'1<;tY:jt@
%7hCe>jcZ]=9ZKP?0,0k6B$D1^`)0VA-,6]AjSj4aV5\PQ,H[[5[c1*[X.Luc:^ER&f"e4O>uX7Q..&eA5Aqm&Y^Yl)+7?bCE/)t[
%]`a0(lZ[=DUsP^J[Ysi=QI>064WCYZ;L/mNUA"9]^&d[Q>aCc06_,ui,Y1hu?8:mb:klTicc8/*9,;ZF*]]i]&=;!PcJ<!d'E*D0
%5_KJ(UqkV<NbY<L-piUS@adE[+2GDYS@(+CfQX`P8o'C\Yq=(i>FhH.3QNTWCC2s`>A*-*I/Ff3j+$hG^\mZ?cThEj_b\&Hn<\Y'
%nX%"_k4h0P6BC(m?`s4nO$EU5%o:+F"r3M/R&F4,kj'<iZu5UCrTBf"7uf\CjP`[WV^n%h(t"BtYJug_]=g;g&rhO)s1k"CJ7=IO
%%f>;,hqH@TH(.PnJo5N0F.UoPR7lLA^A"]5/cl#=7nmW71/+$f7Gf=^n!L9i2sR8k)#*7g8m9k.kNY&#dU6[:Lkih"oEN:kE<"m4
%$MrdcQ2,m6UZfJq4T2)3:6FsQ*:^D''O]s]*l*u:b/YJfW1T&>OpO`0[&e%QXYc9ag5<oA3N%?dlEAc7Bbe_J+;0Bf@ojf)ij"X'
%R-`^='dn^f690HOHVuHiLVKs"q216=<c@\rs*g/ir\Qa0X^MP`=MsS:WPAB$H\So*$gIT=hnF[gfp:4`Y^1Lm8-NbYAiA=bZ#IDi
%i@m-9&-IXp):&)")7dc<%UN*W6=?tZ&k_f.-aHrm.42aARte7`]_i@5nF^<OW[n@>!ajmG@>sQ/1dK2k4<H11LoIUe8&p>)0>$E>
%>2nd3n%E>>0Cam++sX>DmTGEIT4PZAWbFABCs^'ak/)#K6slVtS@S&,0SB,6F&Y6N#ViYX?STmQTs0jh2]o3EZp(CVgEpp`+fs"c
%e6BS=IWH@kfMl!2&eR.ef?b=e$oSd'LW9-9A?\OFY,Mrhm$:";TYR/#II4FZ?#%`]K&h;u<QHHYT6)B^Q1AVRor$?L[h=R4OU+LJ
%(Lpt):AXX2188alC5qjRp;W2mkX@%K!.`+*Mce)K2_E?Q64a4fb2DV,i#6sMKPZ,'5*m(W2g340?u?6?T5Ln`f&tVorW1%"qKd'^
%*;)^Ug^lGkY:h#:O1?o[c9s_Y2hpFiqY1S[l;HH)mk?i/>tS):C(TB`IM6FtXa=)Ij#dqpk,Gc6M.*[Tf=5^CXCI>1=H&>NiOoh-
%M,p>mGq$$)]?4H"a?,\i26C;WB!Jt'4^+%@i&V6ZS6o8G6(Y[!6Hq3tFgIi4c+Rg_=T8qKfB5ci[C<(h4O1AfS!\e.-r;<Y%q%Bp
%\R=</lB!JiT=$))1K#-aBb>M8]dW6U39*n@*chnq]nCcTT"?^\8DP=BDbak*e2i<?FAQ<Vl@Jc0)gGo3ZN%J5;tmfB'.C`A_t%J8
%fNMgf3%-I3`NQ5[:HZ`V/A!O@4S28PB'Obo2jVV$Iif;VKr)Ppfl'A0;5i(WJ)>uaj!C%jpU]>mc0$=dhLuE%o5/udk8Gi/O5E1c
%g`iQlm@1>R0<7=6%@qTI)^,3HhRno2G+N)S=*d\Y8WJ6D`iOPK+/KVU2fAYi)"8+GX#@h_o2l6S-fm/n&M85*\'b>T\:*6-*<!0T
%T/KNVLe+;HegH"D9=.4@E,J]X)2VYFhJ;q\--\GQM3dZE,OAe-o=KB)Ief0&K<tdOE9im3Eufm4UTa/_Rt@0ml)["R9eo7GCbe&h
%C-Os_0dEtWhKgrpiu!@!.Ems7`6_g\]_CrNk(g0+B$$i5?'/,cVN_BN*M4*>O#9R#$DI`SO4lqUrreiS1M@/Fma:k[Xl93=@OR>'
%7F=eKdUZ>EbB<A;*/%5rcX:*E=4UlBW4MQbl0k5<H.>*\B=.0Bde,lCQ(0lnnZu^:gsp\_]Jo&=e,SJ&%I2@QnT'$'#)'^4;IPn!
%"@B?Z5X<5Vh\7?q9[9T(+8(N\h$a?8l$4P"8a&.<-k8=rkg^bXqT`#pK(3kH@+/>q=N&<Mi5b(?cd_(Y2')dYDg%,EWokMWNp$%O
%,tuN#9)asWqpBWJ`nc_(&b[14Qh:"CX-XXAiK^@ip?i?K!.j]N0GoCm$Z(ee.)=ER`Z;*OBsius%Qe@.2O5],;n05NpSiAIe;go'
%Ju7La?7Ff,@T>=*?d*T9^0oNI]!X)n.$J83pWU2m05=AFRXd%UDUif!mNq$'`f/:235mZoCXWY6gS`XUXKQ69s6d`b0uhV#l%"7@
%IF,Q(lkST@(&%+P];KeBj&baRlYS-\H[j)F0$T3P:sm$;]l3R3b7<K%,CQ3O>fC:2)mT265CV4?;c^_*_=G'R>Bg0I\&t$NH2'1t
%'TEWliZiG7\0ig!\AhlZ>MTSXQhJ;8nctqsM-41u.Zd6;>@#-(>$]pkFcm1loMB8R<Dhr7e@<-lp@k=pk7;idrg`/V4'FJMI><tW
%i/"d]LI$Zi?Q!uqB\I2KZm/H&gSb=MRY-?dKhY<fb3c=(dqL7N#;9I.X1$q+HW=6hXM^)h(tV)G]R!VgqmJn9Vso5<CslR,.IojQ
%Bnbt,nSa*rMc+VT4L1/'htUs&EU.Tsh"DJGhCVs.HsjRH="q(?hIpX1D!cu0BG`Wj##[ZQk[\qA]iI_4I`hOXad#RU;PE*7luVPk
%oqC5E@DC!JCD@f!,WK)4IoqKdoB3kYCdI0DPo=nND``\a,ec6[2Zf/W0s#c)+9-n#kK8$squ488`M6L)*8p#$T9l97@1Lrg+0tJX
%]DH\KVg$Z"V46=1lp5+Ni&@?VZUOA[>tXRe<L<GQ`n[lgVqa3K+]oD]JqUr7qoMt];PPRrF6UjenKmEib:ucjJi`b;jSOl@?)$R7
%epXXu%#GiN_Ki*YBC,C:/YAS<1umaL=H9#5\iW5K&pW',M0Ik#,q.!`9JCdMb%WTj:P?!6Bm\AuIeLhsFhBZo"4KG8<lW>Y6qDVa
%C;tBeDbXG-SD3ec3p0nK.6JC4o$d7PD$o.q5eRgJmW0.8mN]F8'90Z[;;Q"tmKY;g;4"&4"8Kn4qY^n0T^uP-+8bAk5C`UcmNi3b
%g@IOe!<#Mk??3jD_%uV(\bd=u8f[]tqZaaN&)Xd;-W>KRUXdndop@<TD5dN(;GBm)XD7E(X8Db+:-r;WAn;-O2hnOjoH&cAfd26P
%n8kC-o=XZ_RsPde/Vtn?(cL,iqF37C`nhkK/B.4iT_8\?P9n+6kQePSjRY+IZEFk>pP7VEW7*,k14b/cG:<ZR<O+];=1>h4dSqDr
%<%<7/KeM@h-'Jo6+s/cGB97@+4c=7g%'LajN2kfG7ei8-F8M!W'cfU?N0Y/*5Iu1*?g8(_^L$JN$9DKJIEQBEUF\o/KU&Ge?Y`AQ
%N'2sUhr*ugE.&uaZFhmJ&9Ejd;J:5R#W"__)6te@:@.%`n0Sb.WAZh9iWocjec`qs]Yee3=Q7=jl_h,8C4jp'FKTF<LCJ<bWAdl@
%HQ.J3L5h8+O\[gq6f,96n_(8+[s^>^+;%K!"^gLcp":h_U:iascS:Q64.#J!A%!Y=5(;CV`OGq__KTgBq7UubH3uE^9oiL.Gq>Pr
%\Fdle,4;S6\f:!Jk]'T5P'hV9bePJ\.4]?HI!\2DrK'bMQm,'Vi=YK\cc63OS;+_KL92t%m"D.,Ee=al/MLUDp8)qHVhI'[2,;,#
%U6lPo1-p9=mh3t#oCit"J$/R61mr=Plc7h1[g-B[TAPQO\Ko"_'<)>Z'pRZ[W1;VsiVS\(+.?em(^j`C]nb^8@M$NLM<:OH<sSor
%Eq</Ha$^Y)&c(c3Mi?CbE9Q>AUC#sfoe9DfGmiL#$(%eh;gf`'IG<2M:sJ)05-;uKY3-c,JWq[R.t^ACqbGsr[kTjA^24LJ/#5Y1
%.W.u%pWRuDHaV/<cn\H/YZSB7TfF4*M`!W!jl%o8TFltXeqhRA7DP9T-S.Pu5q-:]G6F0#`q'*LX@Cl(,r<g]EVU1UIu<pMTCZqX
%;"Y"\a#Erh8$0cD!i=5%L.Z+%]0i_mTmlpR0oO81V=kptD2LXQU!3::iGD+$6Hc]igNep,68^mg?S'KOl*IL481td+KS8QZ4\F)B
%(i+sPG>U"=]9(7If'1W3`)E"Q=3<kPL/q"-GTJ,=.6j#SR8('=U!93nZ>M[[,\7cmRN3X3ofc*@)W>qjiun<3<R5-,UoDGNnUa7K
%4,+`VmeXKW>=hbNh,lr-_5slM:)CMVMJlRHlR;)OWN_Va*EnjR0@hs+X+pp*[6/lTM2dKNc#)@Y?X,qS9N)FFabs?0Do9#d]e!0"
%ON$h1/T:3P/$ul01`9\o.DkC5aAQZ%)VDCO;I.EJRMEA;eQ>WMgfT<f%_ge+)Y=.jF/fPh=dUQfLh0k2<C.GL$Kh@Vcp9R[Rc7"'
%<f/:,T.pBP3"H3@G"Kob4\E\8;;\c<Eg4?>/a9"1HG_`k;AY@h/N52fVb#``UNSXmXD"*HHVq=R=`arV@7GKO1VIFr`p^62X1m]'
%lQo-:gXgcZ%fP([F@j4#nXt1o)4.OoW3;9WV1ncS+o_QNKck"r!V'F(24#2V2T(Nl@AR_#_P/Z/I^lC#H?9XOG/U!s4c>-KCgeA2
%.o\Y^HRTrT3#a9P_`bEYK&$'%-rR\;SGNoXc0$uNIkotU9U+BjM6.=\X[B('=%54>1]!QgY2I/W`"6/kdDT"U,+Q7:<:ir!98epq
%<82):83)Wn$"/TEgpSK&&k=cH&-2p()BOa*FB%^C12^co>2_'7O^_n_U'\tYd?rPg_`(reZ)iqRlrtZpYu/FtkR0K>P_.JLOsJ^+
%NrjMM"*m4A>-$tPP^#AI2r]9\'<Wf/Fdu*!iuk`[7-[mSmlF2[<+$.7hpiP!YTfGb=[oY]X^8lMKpR<>\fj0[G!^(rgHrt:Kp2Ic
%ds)nu9.W`1T.H8-80rN5^^#mLT)1)X(9QV[EpK@o-&Sd$EF=X&M@Q>s-><^7JLT95.AUgPVc'^,h4ObS8;+U&n7,dp;mj7b?V+0'
%GiCO0!PRru0*@d3!DO%g4>p"!\U;OVq'b/W;S('fe#Zo9i"H;Wc)klB<c.4X_3M&4JBF4Jpij!%mVW-NqfRlZ%2"A%VP5.'F*Ia#
%#A!Pbl$B_:rr0bo%^Wf]mgNr-D#".)n-u/('u&!ZK#h<$^-Qj4i6KY_%0>*rTT*EhFmT*\$$QY.(*sg\Z5RfS2urhiCH3udHU]O0
%Qb$=fnJIO-$+D0[Ki@Z80@sg%>f\Bi0o*,,qO5jrE@h.N(lN3\SEX9F2hEnWR=1-mY'F--Z"&"$#c5,M_WkC`p(GEPcM<j-am6mD
%@es('=YD3Ak>(l.,?K#1"*?JKh=FYsj=&3sh%I#VZ%s,IZ\tI?KpWs:e.?ubNb*n)7lVa#+SEI2]u8a7Ghb?-M5s=W&37%6>r#E]
%6q:`i2JuD"T@t5JT?-6Fj[%9<I/[if\>i/8YO@5#/p7EKjXK&lqg[8eDp`hqm5l(IO]M'Hc:]doHn96!2Hb9Fo;Y8Ps6%`+W_m@/
%%pgAQXQ!**%o&mU2DbbJY421ea8T@nQ/65e61uRea>`nBZ_GZ10mSB6?gA'/!np<?PMZ#8hAu8^n*6Bsm3JUeB0IA?>t!m[d^0Oa
%/e8W2#[KEG."Y$]LKKo%a@a5'`4CsQ+23SS_(H8(pa4S"(I-0fCU(&0Tp!sF]!cQZho318<*-`F<pNp6:3BY(>!bW$;sRURLA:=C
%X_UZ7q6&<a#jkp#CV&TemrD\c8W:8d<stc"0%Y4bp*&%q-#n-mlQQ\k<;Pm#>t9h=oC>MV9.$M.Q!>,*Ja7]Mlb_kmb(r4A\lSJB
%:G_^+lS9U(:$s1VKe^,K_QJrNd@%h5530:o6r%*8]a8kmJZDhqeKU=8A]>0/b#;O<^7*"KHk@!HEH%9'JFGJ`S%\>*NH59_#T?k#
%VM\Hl&Q07$l\@.Fp3Usmrarc.&N3Y5_daLS%mOn'p%iadK1;b[(I/JieR.d&YPKP'\a5%gdW\0O^Pj+[j04Z.qlY28V04\CpaQ-Z
%OqqQ$'t=$"F^-A0=GNUbI8D'P)GdQIP''Ep[F]pDWNq1jZ4oL$QW[!9Ic!,RQUm[\7(&k-7Z5.$Saa0D;g2j;C3g2eFJk57IeY%S
%SjV7^n%7WtI&W"4@]j%TqKh>6/lfsh#Y3f"cXH8.N7hD8au<Mk2$hAerAL*:gX[IWo5q0=pNJOa,-nu4ITM_]+8k'K%j*@^ooF=.
%nKmA892oXe0DQYmj#_V`XXPga`u+5*\j"cn9aUqg\iA0h]4H"9DKTjEf$_3aPW]`I(b8P](Jd,!Ng2=055/&oh9P2t(7Q_=&;c5e
%Oftu&O$qgRp:0)u7-?RaO=l9gnPb<#/cO2VKPV=ONU&=O+1\75h\e(cOh\'[K&G,V\Hp_iX5J^@PbE`k:Dh$_ou$`4,&I-Y7/V#]
%UdX[1YcHcRn3_[ck4:Z8Z$hs='U?3l>S@tR?dIltAWG,NiFdVQk@k-tI-J+Wid509P32?sa57ppgOK%C,5roVmO-6@J,1hAs88d%
%rpo</J,AcfVl-l[:]Kg;T76_,^]*`+s80iDs7hAArq=80rUIc9^\mZS^]3ft+90[_:Zlj"pp\$<p"(9Mr9]"4p&EE+VlR_-rq'"d
%ofrKH&-!_/g$NP~>
%AI9_PrivateDataEnd
